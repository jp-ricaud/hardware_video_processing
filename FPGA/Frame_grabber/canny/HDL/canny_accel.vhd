-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_rows_empty_n : IN STD_LOGIC;
    p_src_rows_read : OUT STD_LOGIC;
    p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_empty_n : IN STD_LOGIC;
    p_src_cols_read : OUT STD_LOGIC;
    p_src_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_V_empty_n : IN STD_LOGIC;
    p_src_data_V_read : OUT STD_LOGIC;
    p_dst1_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    p_dst1_data_V_empty_n : IN STD_LOGIC;
    p_dst1_data_V_read : OUT STD_LOGIC;
    p_dst1_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_dst1_data_V_full_n : IN STD_LOGIC;
    p_dst1_data_V_write : OUT STD_LOGIC;
    p_dst2_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_rows_empty_n : IN STD_LOGIC;
    p_dst2_rows_read : OUT STD_LOGIC;
    p_dst2_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_cols_empty_n : IN STD_LOGIC;
    p_dst2_cols_read : OUT STD_LOGIC;
    p_dst2_data_V_din : OUT STD_LOGIC_VECTOR (56 downto 0);
    p_dst2_data_V_full_n : IN STD_LOGIC;
    p_dst2_data_V_write : OUT STD_LOGIC;
    low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    low_threshold_empty_n : IN STD_LOGIC;
    low_threshold_read : OUT STD_LOGIC;
    high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    high_threshold_empty_n : IN STD_LOGIC;
    high_threshold_read : OUT STD_LOGIC;
    p_dst2_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_rows_out_full_n : IN STD_LOGIC;
    p_dst2_rows_out_write : OUT STD_LOGIC;
    p_dst2_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_cols_out_full_n : IN STD_LOGIC;
    p_dst2_cols_out_write : OUT STD_LOGIC );
end;


architecture behav of canny_accel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (63 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (63 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (63 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (63 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (63 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (63 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (63 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (63 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv15_9 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_rows_blk_n : STD_LOGIC;
    signal p_src_cols_blk_n : STD_LOGIC;
    signal p_dst1_data_V_i_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln295_reg_2636 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst1_data_V_o_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln348_reg_2757 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln374_reg_2900 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst2_rows_blk_n : STD_LOGIC;
    signal p_dst2_cols_blk_n : STD_LOGIC;
    signal p_dst2_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln383_reg_2909 : STD_LOGIC_VECTOR (0 downto 0);
    signal low_threshold_blk_n : STD_LOGIC;
    signal high_threshold_blk_n : STD_LOGIC;
    signal p_dst2_rows_out_blk_n : STD_LOGIC;
    signal p_dst2_cols_out_blk_n : STD_LOGIC;
    signal p_0331_0_i_i_i_reg_1042 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0259_0_i_i_i_reg_1053 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_reg_1064 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_i_i_reg_1075 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0331_2_i_i_i_reg_1097 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0259_2_i_i_i_reg_1108 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_13_reg_1119 : STD_LOGIC_VECTOR (15 downto 0);
    signal i6_0_i_i_i_reg_1130 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_0_i_i_i_reg_1152 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0301_0_i_i_i_reg_1164 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_12_reg_1175 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_0_i_i_i_reg_1186 : STD_LOGIC_VECTOR (12 downto 0);
    signal bit_0_i_i_i_reg_1197 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_dst2_cols_read_reg_2487 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal low_threshold_read_reg_2492 : STD_LOGIC_VECTOR (7 downto 0);
    signal high_threshold_read_reg_2497 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src_rows_read_reg_2502 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_cols_read_reg_2507 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln412_fu_1252_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln412_reg_2512 : STD_LOGIC_VECTOR (15 downto 0);
    signal slice_h_reg_2517 : STD_LOGIC_VECTOR (13 downto 0);
    signal op_assign_reg_2523 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1276_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal udiv_ln268_reg_2534 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal zext_ln268_fu_1285_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln269_2_fu_1311_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln269_2_reg_2551 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal zext_ln267_1_fu_1323_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln267_1_reg_2557 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal ram_row_depth_fu_1326_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ram_row_depth_reg_2562 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln267_fu_1329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln267_reg_2570 : STD_LOGIC_VECTOR (31 downto 0);
    signal bramsetsval_fu_1341_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bramsetsval_reg_2575 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln271_fu_2470_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln271_reg_2580 : STD_LOGIC_VECTOR (25 downto 0);
    signal bramtotal_fu_1350_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bramtotal_reg_2585 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln308_fu_1356_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln308_reg_2590 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln308_fu_1360_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln308_reg_2594 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln327_fu_1366_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln327_reg_2600 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln327_fu_2476_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln327_reg_2606 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln275_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal add_ln275_fu_1385_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln275_reg_2615 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln281_fu_1397_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln281_reg_2620 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln295_fu_2482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln295_reg_2625 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_2631 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln295_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state54_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_1_fu_1435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal t_V_15_fu_1452_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_15_reg_2645 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_fu_1478_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_reg_2650 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_1_fu_1486_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_1_reg_2658 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln321_fu_1494_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_reg_2665 : STD_LOGIC_VECTOR (4 downto 0);
    signal idx1_V_1_fu_1498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_dst1_data_V_read_reg_2674 : STD_LOGIC_VECTOR (63 downto 0);
    signal index_V_fu_1504_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_V_reg_2686 : STD_LOGIC_VECTOR (15 downto 0);
    signal iBuff_0_V_addr_reg_2692 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_1_V_addr_reg_2697 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_4_V_addr_reg_2702 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_7_V_addr_reg_2707 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_10_V_addr_reg_2712 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_13_V_addr_reg_2717 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_16_V_addr_reg_2722 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_19_V_addr_reg_2727 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln879_21_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_21_reg_2732 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_23_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_23_reg_2736 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_27_fu_1544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_27_reg_2740 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_22_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_22_reg_2744 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln340_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal intra_i_fu_1592_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal intra_i_reg_2752 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln348_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state60_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state61_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_fu_1603_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln356_fu_1646_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_reg_2766 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_1_fu_1654_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_1_reg_2771 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln321_7_fu_1700_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_7_reg_2776 : STD_LOGIC_VECTOR (4 downto 0);
    signal idx1_V_fu_1704_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal slice_fu_1756_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal icmp_ln371_fu_1761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ii_fu_1766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ii_reg_2895 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln374_fu_1772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state64_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state65_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal k_fu_1777_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_reg_2904 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal icmp_ln383_fu_1788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state67_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state68_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal j_fu_1793_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_ln879_19_fu_1799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_19_reg_2918 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln386_fu_1811_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln386_reg_2923 : STD_LOGIC_VECTOR (8 downto 0);
    signal id_V_fu_1830_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_fu_2464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state54 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state60 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state64 : STD_LOGIC;
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state67 : STD_LOGIC;
    signal iBuff_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_0_V_ce0 : STD_LOGIC;
    signal iBuff_0_V_we0 : STD_LOGIC;
    signal iBuff_0_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_0_V_ce1 : STD_LOGIC;
    signal iBuff_0_V_we1 : STD_LOGIC;
    signal iBuff_0_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_1_V_ce0 : STD_LOGIC;
    signal iBuff_1_V_we0 : STD_LOGIC;
    signal iBuff_1_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_1_V_ce1 : STD_LOGIC;
    signal iBuff_1_V_we1 : STD_LOGIC;
    signal iBuff_1_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_2_V_ce0 : STD_LOGIC;
    signal iBuff_2_V_we0 : STD_LOGIC;
    signal iBuff_2_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_2_V_ce1 : STD_LOGIC;
    signal iBuff_2_V_we1 : STD_LOGIC;
    signal iBuff_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_3_V_ce0 : STD_LOGIC;
    signal iBuff_3_V_we0 : STD_LOGIC;
    signal iBuff_3_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_3_V_ce1 : STD_LOGIC;
    signal iBuff_3_V_we1 : STD_LOGIC;
    signal iBuff_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_4_V_ce0 : STD_LOGIC;
    signal iBuff_4_V_we0 : STD_LOGIC;
    signal iBuff_4_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_4_V_ce1 : STD_LOGIC;
    signal iBuff_4_V_we1 : STD_LOGIC;
    signal iBuff_4_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_5_V_ce0 : STD_LOGIC;
    signal iBuff_5_V_we0 : STD_LOGIC;
    signal iBuff_5_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_5_V_ce1 : STD_LOGIC;
    signal iBuff_5_V_we1 : STD_LOGIC;
    signal iBuff_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_6_V_ce0 : STD_LOGIC;
    signal iBuff_6_V_we0 : STD_LOGIC;
    signal iBuff_6_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_6_V_ce1 : STD_LOGIC;
    signal iBuff_6_V_we1 : STD_LOGIC;
    signal iBuff_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_7_V_ce0 : STD_LOGIC;
    signal iBuff_7_V_we0 : STD_LOGIC;
    signal iBuff_7_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_7_V_ce1 : STD_LOGIC;
    signal iBuff_7_V_we1 : STD_LOGIC;
    signal iBuff_7_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_8_V_ce0 : STD_LOGIC;
    signal iBuff_8_V_we0 : STD_LOGIC;
    signal iBuff_8_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_8_V_ce1 : STD_LOGIC;
    signal iBuff_8_V_we1 : STD_LOGIC;
    signal iBuff_9_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_9_V_ce0 : STD_LOGIC;
    signal iBuff_9_V_we0 : STD_LOGIC;
    signal iBuff_9_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_9_V_ce1 : STD_LOGIC;
    signal iBuff_9_V_we1 : STD_LOGIC;
    signal iBuff_10_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_10_V_ce0 : STD_LOGIC;
    signal iBuff_10_V_we0 : STD_LOGIC;
    signal iBuff_10_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_10_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_10_V_ce1 : STD_LOGIC;
    signal iBuff_10_V_we1 : STD_LOGIC;
    signal iBuff_10_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_11_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_11_V_ce0 : STD_LOGIC;
    signal iBuff_11_V_we0 : STD_LOGIC;
    signal iBuff_11_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_11_V_ce1 : STD_LOGIC;
    signal iBuff_11_V_we1 : STD_LOGIC;
    signal iBuff_12_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_12_V_ce0 : STD_LOGIC;
    signal iBuff_12_V_we0 : STD_LOGIC;
    signal iBuff_12_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_12_V_ce1 : STD_LOGIC;
    signal iBuff_12_V_we1 : STD_LOGIC;
    signal iBuff_13_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_13_V_ce0 : STD_LOGIC;
    signal iBuff_13_V_we0 : STD_LOGIC;
    signal iBuff_13_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_13_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_13_V_ce1 : STD_LOGIC;
    signal iBuff_13_V_we1 : STD_LOGIC;
    signal iBuff_13_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_14_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_14_V_ce0 : STD_LOGIC;
    signal iBuff_14_V_we0 : STD_LOGIC;
    signal iBuff_14_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_14_V_ce1 : STD_LOGIC;
    signal iBuff_14_V_we1 : STD_LOGIC;
    signal iBuff_15_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_15_V_ce0 : STD_LOGIC;
    signal iBuff_15_V_we0 : STD_LOGIC;
    signal iBuff_15_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_15_V_ce1 : STD_LOGIC;
    signal iBuff_15_V_we1 : STD_LOGIC;
    signal iBuff_16_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_16_V_ce0 : STD_LOGIC;
    signal iBuff_16_V_we0 : STD_LOGIC;
    signal iBuff_16_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_16_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_16_V_ce1 : STD_LOGIC;
    signal iBuff_16_V_we1 : STD_LOGIC;
    signal iBuff_16_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_17_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_17_V_ce0 : STD_LOGIC;
    signal iBuff_17_V_we0 : STD_LOGIC;
    signal iBuff_17_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_17_V_ce1 : STD_LOGIC;
    signal iBuff_17_V_we1 : STD_LOGIC;
    signal iBuff_18_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_18_V_ce0 : STD_LOGIC;
    signal iBuff_18_V_we0 : STD_LOGIC;
    signal iBuff_18_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_18_V_ce1 : STD_LOGIC;
    signal iBuff_18_V_we1 : STD_LOGIC;
    signal iBuff_19_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_19_V_ce0 : STD_LOGIC;
    signal iBuff_19_V_we0 : STD_LOGIC;
    signal iBuff_19_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_19_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_19_V_ce1 : STD_LOGIC;
    signal iBuff_19_V_we1 : STD_LOGIC;
    signal iBuff_19_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal oBuff_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal oBuff_V_ce0 : STD_LOGIC;
    signal oBuff_V_we0 : STD_LOGIC;
    signal oBuff_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_ap_start : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_ap_done : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_ap_idle : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_ap_ready : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Canny_fu_1236_ap_start : STD_LOGIC;
    signal grp_Canny_fu_1236_ap_done : STD_LOGIC;
    signal grp_Canny_fu_1236_ap_idle : STD_LOGIC;
    signal grp_Canny_fu_1236_ap_ready : STD_LOGIC;
    signal grp_Canny_fu_1236_p_src_mat_data_V_read : STD_LOGIC;
    signal grp_Canny_fu_1236_p_dst_mat_data_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Canny_fu_1236_p_dst_mat_data_V_write : STD_LOGIC;
    signal indvar_flatten_reg_1020 : STD_LOGIC_VECTOR (3 downto 0);
    signal slice_0_i_i_i_reg_1031 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_p_0259_0_i_i_i_phi_fu_1057_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_t_V_phi_fu_1068_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal intra_i_0_i_i_i_reg_1086 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_phi_mux_p_0259_2_i_i_i_phi_fu_1112_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_t_V_13_phi_fu_1123_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ii_0_i_i_i_reg_1141 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal ap_phi_mux_k_0_i_i_i_phi_fu_1156_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_t_V_12_phi_fu_1179_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1209_ap_start_reg : STD_LOGIC := '0';
    signal grp_Canny_fu_1236_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call40 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln544_fu_1508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_8_fu_1562_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln544_fu_1575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_7_fu_1676_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln378_fu_1783_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_6_fu_1819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal op2_V_read_assign_4_fu_1710_p22 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal grp_fu_1276_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln266_fu_1282_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln269_fu_1289_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1301_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1301_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1301_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln269_fu_1307_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1317_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1317_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1317_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln270_fu_1335_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln327_fu_1369_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln281_fu_1391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln283_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln295_fu_1411_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln879_fu_1441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx2_V_fu_1446_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln303_1_fu_1460_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_18_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dep_V_fu_1473_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln879_fu_1541_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln215_3_fu_1554_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_8_fu_1557_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln215_fu_1567_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_1570_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln879_25_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx2_V_1_fu_1614_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln352_1_fu_1628_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_26_fu_1636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dep_V_1_fu_1641_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_14_fu_1620_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_1662_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_fu_1666_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_1670_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal pixel_V_fu_1805_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_fu_1824_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln386_1_fu_1838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_fu_1845_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln647_fu_1849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_fu_1853_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln647_1_fu_1859_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_20_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_1_fu_1883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_fu_1877_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_2_fu_1895_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1899_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_fu_1909_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_1_fu_1923_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_fu_1915_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_1_fu_1931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_1_fu_1935_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_fu_1941_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_24_fu_1945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_3_fu_1965_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_2_fu_1959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_3_fu_1977_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_1_fu_1971_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1981_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_1_fu_1991_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_3_fu_2005_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_2_fu_1997_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_2_fu_2013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_2_fu_2017_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_1_fu_2023_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_28_fu_2027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_5_fu_2047_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_4_fu_2041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_4_fu_2059_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_2_fu_2053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_2063_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_2_fu_2073_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_5_fu_2087_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_4_fu_2079_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_3_fu_2095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_3_fu_2099_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_2_fu_2105_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_29_fu_2109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_7_fu_2129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_6_fu_2123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_5_fu_2141_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_3_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_2145_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_3_fu_2155_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_7_fu_2169_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_6_fu_2161_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_4_fu_2177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_4_fu_2181_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_3_fu_2187_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_30_fu_2191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_9_fu_2211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_8_fu_2205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_6_fu_2223_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_4_fu_2217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_2227_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_4_fu_2237_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_9_fu_2251_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_8_fu_2243_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_5_fu_2259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_5_fu_2263_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_4_fu_2269_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_31_fu_2273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_11_fu_2293_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_10_fu_2287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_7_fu_2305_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_5_fu_2299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_2309_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_5_fu_2319_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_11_fu_2333_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_10_fu_2325_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_6_fu_2341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_6_fu_2345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_5_fu_2351_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_32_fu_2355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln392_13_fu_2375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_12_fu_2369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_8_fu_2387_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln647_6_fu_2381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_2391_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_6_fu_2401_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_13_fu_2415_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_12_fu_2407_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_7_fu_2423_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_7_fu_2427_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_6_fu_2433_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_33_fu_2437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_22_fu_2361_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_21_fu_2279_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_20_fu_2197_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_19_fu_2115_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_18_fu_2033_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_17_fu_1951_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_fu_1869_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln271_fu_2470_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln271_fu_2470_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln327_fu_2476_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln295_fu_2482_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln295_fu_2482_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1276_ap_start : STD_LOGIC;
    signal grp_fu_1276_ap_done : STD_LOGIC;
    signal grp_fu_1276_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_1301_ap_start : STD_LOGIC;
    signal grp_fu_1301_ap_done : STD_LOGIC;
    signal grp_fu_1317_ap_start : STD_LOGIC;
    signal grp_fu_1317_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_block_pp1 : BOOLEAN;
    signal ap_block_pp2 : BOOLEAN;
    signal ap_block_pp3 : BOOLEAN;
    signal ap_enable_operation_282 : BOOLEAN;
    signal ap_enable_state55_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op322_store_state56 : BOOLEAN;
    signal ap_enable_operation_322 : BOOLEAN;
    signal ap_enable_state56_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op346_store_state56 : BOOLEAN;
    signal ap_enable_operation_346 : BOOLEAN;
    signal ap_enable_operation_285 : BOOLEAN;
    signal ap_predicate_op324_store_state56 : BOOLEAN;
    signal ap_enable_operation_324 : BOOLEAN;
    signal ap_predicate_op348_store_state56 : BOOLEAN;
    signal ap_enable_operation_348 : BOOLEAN;
    signal ap_enable_operation_288 : BOOLEAN;
    signal ap_predicate_op326_store_state56 : BOOLEAN;
    signal ap_enable_operation_326 : BOOLEAN;
    signal ap_predicate_op350_store_state56 : BOOLEAN;
    signal ap_enable_operation_350 : BOOLEAN;
    signal ap_enable_operation_291 : BOOLEAN;
    signal ap_predicate_op328_store_state56 : BOOLEAN;
    signal ap_enable_operation_328 : BOOLEAN;
    signal ap_predicate_op352_store_state56 : BOOLEAN;
    signal ap_enable_operation_352 : BOOLEAN;
    signal ap_enable_operation_294 : BOOLEAN;
    signal ap_predicate_op330_store_state56 : BOOLEAN;
    signal ap_enable_operation_330 : BOOLEAN;
    signal ap_predicate_op354_store_state56 : BOOLEAN;
    signal ap_enable_operation_354 : BOOLEAN;
    signal ap_enable_operation_297 : BOOLEAN;
    signal ap_predicate_op332_store_state56 : BOOLEAN;
    signal ap_enable_operation_332 : BOOLEAN;
    signal ap_predicate_op356_store_state56 : BOOLEAN;
    signal ap_enable_operation_356 : BOOLEAN;
    signal ap_enable_operation_298 : BOOLEAN;
    signal ap_predicate_op320_store_state56 : BOOLEAN;
    signal ap_enable_operation_320 : BOOLEAN;
    signal ap_predicate_op360_store_state56 : BOOLEAN;
    signal ap_enable_operation_360 : BOOLEAN;
    signal ap_predicate_op299_store_state55 : BOOLEAN;
    signal ap_enable_operation_299 : BOOLEAN;
    signal ap_predicate_op334_store_state56 : BOOLEAN;
    signal ap_enable_operation_334 : BOOLEAN;
    signal ap_predicate_op358_store_state56 : BOOLEAN;
    signal ap_enable_operation_358 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal mul_ln271_fu_2470_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln271_fu_2470_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln295_fu_2482_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln327_fu_2476_p10 : STD_LOGIC_VECTOR (22 downto 0);

    component TopDown_20_6_1024_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iBuff_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_0_V_ce0 : OUT STD_LOGIC;
        iBuff_0_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_0_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_0_V_ce1 : OUT STD_LOGIC;
        iBuff_0_V_we1 : OUT STD_LOGIC;
        iBuff_0_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_1_V_ce0 : OUT STD_LOGIC;
        iBuff_1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_1_V_ce1 : OUT STD_LOGIC;
        iBuff_1_V_we1 : OUT STD_LOGIC;
        iBuff_1_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_2_V_ce0 : OUT STD_LOGIC;
        iBuff_2_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_2_V_ce1 : OUT STD_LOGIC;
        iBuff_2_V_we1 : OUT STD_LOGIC;
        iBuff_2_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_3_V_ce0 : OUT STD_LOGIC;
        iBuff_3_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_3_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_3_V_ce1 : OUT STD_LOGIC;
        iBuff_3_V_we1 : OUT STD_LOGIC;
        iBuff_3_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_4_V_ce0 : OUT STD_LOGIC;
        iBuff_4_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_4_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_4_V_ce1 : OUT STD_LOGIC;
        iBuff_4_V_we1 : OUT STD_LOGIC;
        iBuff_4_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_5_V_ce0 : OUT STD_LOGIC;
        iBuff_5_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_5_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_5_V_ce1 : OUT STD_LOGIC;
        iBuff_5_V_we1 : OUT STD_LOGIC;
        iBuff_5_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_6_V_ce0 : OUT STD_LOGIC;
        iBuff_6_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_6_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_6_V_ce1 : OUT STD_LOGIC;
        iBuff_6_V_we1 : OUT STD_LOGIC;
        iBuff_6_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_7_V_ce0 : OUT STD_LOGIC;
        iBuff_7_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_7_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_7_V_ce1 : OUT STD_LOGIC;
        iBuff_7_V_we1 : OUT STD_LOGIC;
        iBuff_7_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_8_V_ce0 : OUT STD_LOGIC;
        iBuff_8_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_8_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_8_V_ce1 : OUT STD_LOGIC;
        iBuff_8_V_we1 : OUT STD_LOGIC;
        iBuff_8_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_9_V_ce0 : OUT STD_LOGIC;
        iBuff_9_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_9_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_9_V_ce1 : OUT STD_LOGIC;
        iBuff_9_V_we1 : OUT STD_LOGIC;
        iBuff_9_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_10_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_10_V_ce0 : OUT STD_LOGIC;
        iBuff_10_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_10_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_10_V_ce1 : OUT STD_LOGIC;
        iBuff_10_V_we1 : OUT STD_LOGIC;
        iBuff_10_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_11_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_11_V_ce0 : OUT STD_LOGIC;
        iBuff_11_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_11_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_11_V_ce1 : OUT STD_LOGIC;
        iBuff_11_V_we1 : OUT STD_LOGIC;
        iBuff_11_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_12_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_12_V_ce0 : OUT STD_LOGIC;
        iBuff_12_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_12_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_12_V_ce1 : OUT STD_LOGIC;
        iBuff_12_V_we1 : OUT STD_LOGIC;
        iBuff_12_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_13_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_13_V_ce0 : OUT STD_LOGIC;
        iBuff_13_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_13_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_13_V_ce1 : OUT STD_LOGIC;
        iBuff_13_V_we1 : OUT STD_LOGIC;
        iBuff_13_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_14_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_14_V_ce0 : OUT STD_LOGIC;
        iBuff_14_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_14_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_14_V_ce1 : OUT STD_LOGIC;
        iBuff_14_V_we1 : OUT STD_LOGIC;
        iBuff_14_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_15_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_15_V_ce0 : OUT STD_LOGIC;
        iBuff_15_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_15_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_15_V_ce1 : OUT STD_LOGIC;
        iBuff_15_V_we1 : OUT STD_LOGIC;
        iBuff_15_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_16_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_16_V_ce0 : OUT STD_LOGIC;
        iBuff_16_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_16_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_16_V_ce1 : OUT STD_LOGIC;
        iBuff_16_V_we1 : OUT STD_LOGIC;
        iBuff_16_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_17_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_17_V_ce0 : OUT STD_LOGIC;
        iBuff_17_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_17_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_17_V_ce1 : OUT STD_LOGIC;
        iBuff_17_V_we1 : OUT STD_LOGIC;
        iBuff_17_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_18_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_18_V_ce0 : OUT STD_LOGIC;
        iBuff_18_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_18_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_18_V_ce1 : OUT STD_LOGIC;
        iBuff_18_V_we1 : OUT STD_LOGIC;
        iBuff_18_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_19_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_19_V_ce0 : OUT STD_LOGIC;
        iBuff_19_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_19_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_19_V_ce1 : OUT STD_LOGIC;
        iBuff_19_V_we1 : OUT STD_LOGIC;
        iBuff_19_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        bramtotal : IN STD_LOGIC_VECTOR (15 downto 0);
        bdrows : IN STD_LOGIC_VECTOR (10 downto 0);
        ram_row_depth : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Canny IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_mat_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_mat_data_V_empty_n : IN STD_LOGIC;
        p_src_mat_data_V_read : OUT STD_LOGIC;
        p_dst_mat_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_dst_mat_data_V_full_n : IN STD_LOGIC;
        p_dst_mat_data_V_write : OUT STD_LOGIC;
        p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_udivShg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ip_accel_app_udivThq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component ip_accel_app_uremUhA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component ip_accel_app_mux_vdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        din5 : IN STD_LOGIC_VECTOR (63 downto 0);
        din6 : IN STD_LOGIC_VECTOR (63 downto 0);
        din7 : IN STD_LOGIC_VECTOR (63 downto 0);
        din8 : IN STD_LOGIC_VECTOR (63 downto 0);
        din9 : IN STD_LOGIC_VECTOR (63 downto 0);
        din10 : IN STD_LOGIC_VECTOR (63 downto 0);
        din11 : IN STD_LOGIC_VECTOR (63 downto 0);
        din12 : IN STD_LOGIC_VECTOR (63 downto 0);
        din13 : IN STD_LOGIC_VECTOR (63 downto 0);
        din14 : IN STD_LOGIC_VECTOR (63 downto 0);
        din15 : IN STD_LOGIC_VECTOR (63 downto 0);
        din16 : IN STD_LOGIC_VECTOR (63 downto 0);
        din17 : IN STD_LOGIC_VECTOR (63 downto 0);
        din18 : IN STD_LOGIC_VECTOR (63 downto 0);
        din19 : IN STD_LOGIC_VECTOR (63 downto 0);
        din20 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ip_accel_app_mul_VhK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component ip_accel_app_mul_WhU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component ip_accel_app_mul_Xh4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component canny_accel_iBuffyd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component canny_accel_oBuff_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    iBuff_0_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_0_V_address0,
        ce0 => iBuff_0_V_ce0,
        we0 => iBuff_0_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_0_V_q0,
        address1 => iBuff_0_V_address1,
        ce1 => iBuff_0_V_ce1,
        we1 => iBuff_0_V_we1,
        d1 => iBuff_0_V_d1);

    iBuff_1_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_1_V_address0,
        ce0 => iBuff_1_V_ce0,
        we0 => iBuff_1_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_1_V_q0,
        address1 => iBuff_1_V_address1,
        ce1 => iBuff_1_V_ce1,
        we1 => iBuff_1_V_we1,
        d1 => iBuff_1_V_d1);

    iBuff_2_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_2_V_address0,
        ce0 => iBuff_2_V_ce0,
        we0 => iBuff_2_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_2_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address1,
        ce1 => iBuff_2_V_ce1,
        we1 => iBuff_2_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_d1);

    iBuff_3_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_3_V_address0,
        ce0 => iBuff_3_V_ce0,
        we0 => iBuff_3_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_3_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address1,
        ce1 => iBuff_3_V_ce1,
        we1 => iBuff_3_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_d1);

    iBuff_4_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_4_V_address0,
        ce0 => iBuff_4_V_ce0,
        we0 => iBuff_4_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_4_V_q0,
        address1 => iBuff_4_V_address1,
        ce1 => iBuff_4_V_ce1,
        we1 => iBuff_4_V_we1,
        d1 => iBuff_4_V_d1);

    iBuff_5_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_5_V_address0,
        ce0 => iBuff_5_V_ce0,
        we0 => iBuff_5_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_5_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address1,
        ce1 => iBuff_5_V_ce1,
        we1 => iBuff_5_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_d1);

    iBuff_6_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_6_V_address0,
        ce0 => iBuff_6_V_ce0,
        we0 => iBuff_6_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_6_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address1,
        ce1 => iBuff_6_V_ce1,
        we1 => iBuff_6_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_d1);

    iBuff_7_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_7_V_address0,
        ce0 => iBuff_7_V_ce0,
        we0 => iBuff_7_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_7_V_q0,
        address1 => iBuff_7_V_address1,
        ce1 => iBuff_7_V_ce1,
        we1 => iBuff_7_V_we1,
        d1 => iBuff_7_V_d1);

    iBuff_8_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_8_V_address0,
        ce0 => iBuff_8_V_ce0,
        we0 => iBuff_8_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_8_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address1,
        ce1 => iBuff_8_V_ce1,
        we1 => iBuff_8_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_d1);

    iBuff_9_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_9_V_address0,
        ce0 => iBuff_9_V_ce0,
        we0 => iBuff_9_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_9_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address1,
        ce1 => iBuff_9_V_ce1,
        we1 => iBuff_9_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_d1);

    iBuff_10_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_10_V_address0,
        ce0 => iBuff_10_V_ce0,
        we0 => iBuff_10_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_10_V_q0,
        address1 => iBuff_10_V_address1,
        ce1 => iBuff_10_V_ce1,
        we1 => iBuff_10_V_we1,
        d1 => iBuff_10_V_d1);

    iBuff_11_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_11_V_address0,
        ce0 => iBuff_11_V_ce0,
        we0 => iBuff_11_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_11_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address1,
        ce1 => iBuff_11_V_ce1,
        we1 => iBuff_11_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_d1);

    iBuff_12_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_12_V_address0,
        ce0 => iBuff_12_V_ce0,
        we0 => iBuff_12_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_12_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address1,
        ce1 => iBuff_12_V_ce1,
        we1 => iBuff_12_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_d1);

    iBuff_13_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_13_V_address0,
        ce0 => iBuff_13_V_ce0,
        we0 => iBuff_13_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_13_V_q0,
        address1 => iBuff_13_V_address1,
        ce1 => iBuff_13_V_ce1,
        we1 => iBuff_13_V_we1,
        d1 => iBuff_13_V_d1);

    iBuff_14_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_14_V_address0,
        ce0 => iBuff_14_V_ce0,
        we0 => iBuff_14_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_14_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address1,
        ce1 => iBuff_14_V_ce1,
        we1 => iBuff_14_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_d1);

    iBuff_15_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_15_V_address0,
        ce0 => iBuff_15_V_ce0,
        we0 => iBuff_15_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_15_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address1,
        ce1 => iBuff_15_V_ce1,
        we1 => iBuff_15_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_d1);

    iBuff_16_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_16_V_address0,
        ce0 => iBuff_16_V_ce0,
        we0 => iBuff_16_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_16_V_q0,
        address1 => iBuff_16_V_address1,
        ce1 => iBuff_16_V_ce1,
        we1 => iBuff_16_V_we1,
        d1 => iBuff_16_V_d1);

    iBuff_17_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_17_V_address0,
        ce0 => iBuff_17_V_ce0,
        we0 => iBuff_17_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_17_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address1,
        ce1 => iBuff_17_V_ce1,
        we1 => iBuff_17_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_d1);

    iBuff_18_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_18_V_address0,
        ce0 => iBuff_18_V_ce0,
        we0 => iBuff_18_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_18_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address1,
        ce1 => iBuff_18_V_ce1,
        we1 => iBuff_18_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_d1);

    iBuff_19_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_19_V_address0,
        ce0 => iBuff_19_V_ce0,
        we0 => iBuff_19_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => iBuff_19_V_q0,
        address1 => iBuff_19_V_address1,
        ce1 => iBuff_19_V_ce1,
        we1 => iBuff_19_V_we1,
        d1 => iBuff_19_V_d1);

    oBuff_V_U : component canny_accel_oBuff_V
    generic map (
        DataWidth => 64,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => oBuff_V_address0,
        ce0 => oBuff_V_ce0,
        we0 => oBuff_V_we0,
        d0 => p_dst1_data_V_dout,
        q0 => oBuff_V_q0);

    grp_TopDown_20_6_1024_s_fu_1209 : component TopDown_20_6_1024_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_TopDown_20_6_1024_s_fu_1209_ap_start,
        ap_done => grp_TopDown_20_6_1024_s_fu_1209_ap_done,
        ap_idle => grp_TopDown_20_6_1024_s_fu_1209_ap_idle,
        ap_ready => grp_TopDown_20_6_1024_s_fu_1209_ap_ready,
        iBuff_0_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address0,
        iBuff_0_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce0,
        iBuff_0_V_q0 => iBuff_0_V_q0,
        iBuff_0_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address1,
        iBuff_0_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce1,
        iBuff_0_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_we1,
        iBuff_0_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_d1,
        iBuff_1_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address0,
        iBuff_1_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce0,
        iBuff_1_V_q0 => iBuff_1_V_q0,
        iBuff_1_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address1,
        iBuff_1_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce1,
        iBuff_1_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_we1,
        iBuff_1_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_d1,
        iBuff_2_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address0,
        iBuff_2_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce0,
        iBuff_2_V_q0 => iBuff_2_V_q0,
        iBuff_2_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address1,
        iBuff_2_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce1,
        iBuff_2_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_we1,
        iBuff_2_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_d1,
        iBuff_3_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address0,
        iBuff_3_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce0,
        iBuff_3_V_q0 => iBuff_3_V_q0,
        iBuff_3_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address1,
        iBuff_3_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce1,
        iBuff_3_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_we1,
        iBuff_3_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_d1,
        iBuff_4_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address0,
        iBuff_4_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce0,
        iBuff_4_V_q0 => iBuff_4_V_q0,
        iBuff_4_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address1,
        iBuff_4_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce1,
        iBuff_4_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_we1,
        iBuff_4_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_d1,
        iBuff_5_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address0,
        iBuff_5_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce0,
        iBuff_5_V_q0 => iBuff_5_V_q0,
        iBuff_5_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address1,
        iBuff_5_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce1,
        iBuff_5_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_we1,
        iBuff_5_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_d1,
        iBuff_6_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address0,
        iBuff_6_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce0,
        iBuff_6_V_q0 => iBuff_6_V_q0,
        iBuff_6_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address1,
        iBuff_6_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce1,
        iBuff_6_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_we1,
        iBuff_6_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_d1,
        iBuff_7_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address0,
        iBuff_7_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce0,
        iBuff_7_V_q0 => iBuff_7_V_q0,
        iBuff_7_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address1,
        iBuff_7_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce1,
        iBuff_7_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_we1,
        iBuff_7_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_d1,
        iBuff_8_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address0,
        iBuff_8_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce0,
        iBuff_8_V_q0 => iBuff_8_V_q0,
        iBuff_8_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address1,
        iBuff_8_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce1,
        iBuff_8_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_we1,
        iBuff_8_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_d1,
        iBuff_9_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address0,
        iBuff_9_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce0,
        iBuff_9_V_q0 => iBuff_9_V_q0,
        iBuff_9_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address1,
        iBuff_9_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce1,
        iBuff_9_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_we1,
        iBuff_9_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_d1,
        iBuff_10_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address0,
        iBuff_10_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce0,
        iBuff_10_V_q0 => iBuff_10_V_q0,
        iBuff_10_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address1,
        iBuff_10_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce1,
        iBuff_10_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_we1,
        iBuff_10_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_d1,
        iBuff_11_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address0,
        iBuff_11_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce0,
        iBuff_11_V_q0 => iBuff_11_V_q0,
        iBuff_11_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address1,
        iBuff_11_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce1,
        iBuff_11_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_we1,
        iBuff_11_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_d1,
        iBuff_12_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address0,
        iBuff_12_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce0,
        iBuff_12_V_q0 => iBuff_12_V_q0,
        iBuff_12_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address1,
        iBuff_12_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce1,
        iBuff_12_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_we1,
        iBuff_12_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_d1,
        iBuff_13_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address0,
        iBuff_13_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce0,
        iBuff_13_V_q0 => iBuff_13_V_q0,
        iBuff_13_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address1,
        iBuff_13_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce1,
        iBuff_13_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_we1,
        iBuff_13_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_d1,
        iBuff_14_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address0,
        iBuff_14_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce0,
        iBuff_14_V_q0 => iBuff_14_V_q0,
        iBuff_14_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address1,
        iBuff_14_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce1,
        iBuff_14_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_we1,
        iBuff_14_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_d1,
        iBuff_15_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address0,
        iBuff_15_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce0,
        iBuff_15_V_q0 => iBuff_15_V_q0,
        iBuff_15_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address1,
        iBuff_15_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce1,
        iBuff_15_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_we1,
        iBuff_15_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_d1,
        iBuff_16_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address0,
        iBuff_16_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce0,
        iBuff_16_V_q0 => iBuff_16_V_q0,
        iBuff_16_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address1,
        iBuff_16_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce1,
        iBuff_16_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_we1,
        iBuff_16_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_d1,
        iBuff_17_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address0,
        iBuff_17_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce0,
        iBuff_17_V_q0 => iBuff_17_V_q0,
        iBuff_17_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address1,
        iBuff_17_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce1,
        iBuff_17_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_we1,
        iBuff_17_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_d1,
        iBuff_18_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address0,
        iBuff_18_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce0,
        iBuff_18_V_q0 => iBuff_18_V_q0,
        iBuff_18_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address1,
        iBuff_18_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce1,
        iBuff_18_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_we1,
        iBuff_18_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_d1,
        iBuff_19_V_address0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address0,
        iBuff_19_V_ce0 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce0,
        iBuff_19_V_q0 => iBuff_19_V_q0,
        iBuff_19_V_address1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address1,
        iBuff_19_V_ce1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce1,
        iBuff_19_V_we1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_we1,
        iBuff_19_V_d1 => grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_d1,
        bramtotal => bramtotal_reg_2585,
        bdrows => udiv_ln268_reg_2534,
        ram_row_depth => op_assign_reg_2523);

    grp_Canny_fu_1236 : component Canny
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Canny_fu_1236_ap_start,
        ap_done => grp_Canny_fu_1236_ap_done,
        ap_idle => grp_Canny_fu_1236_ap_idle,
        ap_ready => grp_Canny_fu_1236_ap_ready,
        p_src_mat_rows_read => p_src_rows_read_reg_2502,
        p_src_mat_cols_read => p_src_cols_read_reg_2507,
        p_src_mat_data_V_dout => p_src_data_V_dout,
        p_src_mat_data_V_empty_n => p_src_data_V_empty_n,
        p_src_mat_data_V_read => grp_Canny_fu_1236_p_src_mat_data_V_read,
        p_dst_mat_data_V_din => grp_Canny_fu_1236_p_dst_mat_data_V_din,
        p_dst_mat_data_V_full_n => p_dst1_data_V_full_n,
        p_dst_mat_data_V_write => grp_Canny_fu_1236_p_dst_mat_data_V_write,
        p_lowthreshold => low_threshold_read_reg_2492,
        p_highthreshold => high_threshold_read_reg_2497);

    ip_accel_app_udivShg_U272 : component ip_accel_app_udivShg
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1276_ap_start,
        done => grp_fu_1276_ap_done,
        din0 => ap_const_lv11_400,
        din1 => grp_fu_1276_p1,
        ce => grp_fu_1276_ce,
        dout => grp_fu_1276_p2);

    ip_accel_app_udivThq_U273 : component ip_accel_app_udivThq
    generic map (
        ID => 1,
        NUM_STAGE => 19,
        din0_WIDTH => 15,
        din1_WIDTH => 11,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1301_ap_start,
        done => grp_fu_1301_ap_done,
        din0 => grp_fu_1301_p0,
        din1 => grp_fu_1301_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1301_p2);

    ip_accel_app_uremUhA_U274 : component ip_accel_app_uremUhA
    generic map (
        ID => 1,
        NUM_STAGE => 20,
        din0_WIDTH => 16,
        din1_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1317_ap_start,
        done => grp_fu_1317_ap_done,
        din0 => grp_fu_1317_p0,
        din1 => grp_fu_1317_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1317_p2);

    ip_accel_app_mux_vdy_U275 : component ip_accel_app_mux_vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 64,
        din6_WIDTH => 64,
        din7_WIDTH => 64,
        din8_WIDTH => 64,
        din9_WIDTH => 64,
        din10_WIDTH => 64,
        din11_WIDTH => 64,
        din12_WIDTH => 64,
        din13_WIDTH => 64,
        din14_WIDTH => 64,
        din15_WIDTH => 64,
        din16_WIDTH => 64,
        din17_WIDTH => 64,
        din18_WIDTH => 64,
        din19_WIDTH => 64,
        din20_WIDTH => 5,
        dout_WIDTH => 64)
    port map (
        din0 => iBuff_0_V_q0,
        din1 => iBuff_1_V_q0,
        din2 => iBuff_2_V_q0,
        din3 => iBuff_3_V_q0,
        din4 => iBuff_4_V_q0,
        din5 => iBuff_5_V_q0,
        din6 => iBuff_6_V_q0,
        din7 => iBuff_7_V_q0,
        din8 => iBuff_8_V_q0,
        din9 => iBuff_9_V_q0,
        din10 => iBuff_10_V_q0,
        din11 => iBuff_11_V_q0,
        din12 => iBuff_12_V_q0,
        din13 => iBuff_13_V_q0,
        din14 => iBuff_14_V_q0,
        din15 => iBuff_15_V_q0,
        din16 => iBuff_16_V_q0,
        din17 => iBuff_17_V_q0,
        din18 => iBuff_18_V_q0,
        din19 => iBuff_19_V_q0,
        din20 => trunc_ln321_7_reg_2776,
        dout => op2_V_read_assign_4_fu_1710_p22);

    ip_accel_app_mul_VhK_U276 : component ip_accel_app_mul_VhK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln271_fu_2470_p0,
        din1 => mul_ln271_fu_2470_p1,
        dout => mul_ln271_fu_2470_p2);

    ip_accel_app_mul_WhU_U277 : component ip_accel_app_mul_WhU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        dout_WIDTH => 23)
    port map (
        din0 => add_ln327_fu_1369_p2,
        din1 => mul_ln327_fu_2476_p1,
        dout => mul_ln327_fu_2476_p2);

    ip_accel_app_mul_Xh4_U278 : component ip_accel_app_mul_Xh4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 26,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln295_fu_2482_p0,
        din1 => mul_ln295_fu_2482_p1,
        dout => mul_ln295_fu_2482_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln371_fu_1761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state54) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state54)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state54);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state60) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state60))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state60);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state64) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (icmp_ln371_fu_1761_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state64))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state64);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (icmp_ln371_fu_1761_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state67) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state67))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state67);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Canny_fu_1236_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Canny_fu_1236_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_Canny_fu_1236_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Canny_fu_1236_ap_ready = ap_const_logic_1)) then 
                    grp_Canny_fu_1236_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TopDown_20_6_1024_s_fu_1209_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_TopDown_20_6_1024_s_fu_1209_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state58) and (icmp_ln340_fu_1586_p2 = ap_const_lv1_0))) then 
                    grp_TopDown_20_6_1024_s_fu_1209_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TopDown_20_6_1024_s_fu_1209_ap_ready = ap_const_logic_1)) then 
                    grp_TopDown_20_6_1024_s_fu_1209_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bit_0_i_i_i_reg_1197_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                bit_0_i_i_i_reg_1197 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2909 = ap_const_lv1_0))) then 
                bit_0_i_i_i_reg_1197 <= bit_fu_2464_p2;
            end if; 
        end if;
    end process;

    i6_0_i_i_i_reg_1130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                i6_0_i_i_i_reg_1130 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1598_p2 = ap_const_lv1_0))) then 
                i6_0_i_i_i_reg_1130 <= i_fu_1603_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_reg_1075_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1430_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_reg_1075 <= i_1_fu_1435_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_reg_1075 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ii_0_i_i_i_reg_1141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
                ii_0_i_i_i_reg_1141 <= ii_reg_2895;
            elsif (((icmp_ln275_fu_1379_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                ii_0_i_i_i_reg_1141 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1020_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
                indvar_flatten_reg_1020 <= add_ln275_reg_2615;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                indvar_flatten_reg_1020 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    intra_i_0_i_i_i_reg_1086_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                intra_i_0_i_i_i_reg_1086 <= ap_const_lv4_0;
            elsif (((grp_TopDown_20_6_1024_s_fu_1209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then 
                intra_i_0_i_i_i_reg_1086 <= intra_i_reg_2752;
            end if; 
        end if;
    end process;

    j_0_i_i_i_reg_1186_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                j_0_i_i_i_reg_1186 <= ap_const_lv13_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1788_p2 = ap_const_lv1_0))) then 
                j_0_i_i_i_reg_1186 <= j_fu_1793_p2;
            end if; 
        end if;
    end process;

    k_0_i_i_i_reg_1152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln374_reg_2900 = ap_const_lv1_0))) then 
                k_0_i_i_i_reg_1152 <= k_reg_2904;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state63) and (icmp_ln371_fu_1761_p2 = ap_const_lv1_0))) then 
                k_0_i_i_i_reg_1152 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_0259_0_i_i_i_reg_1053_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0))) then 
                p_0259_0_i_i_i_reg_1053 <= select_ln308_reg_2650;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then 
                p_0259_0_i_i_i_reg_1053 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0259_2_i_i_i_reg_1108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                p_0259_2_i_i_i_reg_1108 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0))) then 
                p_0259_2_i_i_i_reg_1108 <= select_ln356_reg_2766;
            end if; 
        end if;
    end process;

    p_0301_0_i_i_i_reg_1164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                p_0301_0_i_i_i_reg_1164 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1788_p2 = ap_const_lv1_0))) then 
                p_0301_0_i_i_i_reg_1164 <= id_V_fu_1830_p3;
            end if; 
        end if;
    end process;

    p_0331_0_i_i_i_reg_1042_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1430_p2 = ap_const_lv1_0))) then 
                p_0331_0_i_i_i_reg_1042 <= idx1_V_1_fu_1498_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then 
                p_0331_0_i_i_i_reg_1042 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0331_2_i_i_i_reg_1097_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                p_0331_2_i_i_i_reg_1097 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1598_p2 = ap_const_lv1_0))) then 
                p_0331_2_i_i_i_reg_1097 <= idx1_V_fu_1704_p2;
            end if; 
        end if;
    end process;

    slice_0_i_i_i_reg_1031_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
                slice_0_i_i_i_reg_1031 <= slice_fu_1756_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
                slice_0_i_i_i_reg_1031 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    t_V_12_reg_1175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
                t_V_12_reg_1175 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2909 = ap_const_lv1_0))) then 
                t_V_12_reg_1175 <= select_ln386_reg_2923;
            end if; 
        end if;
    end process;

    t_V_13_reg_1119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
                t_V_13_reg_1119 <= ap_const_lv16_1;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0))) then 
                t_V_13_reg_1119 <= select_ln356_1_reg_2771;
            end if; 
        end if;
    end process;

    t_V_reg_1064_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0))) then 
                t_V_reg_1064 <= select_ln308_1_reg_2658;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then 
                t_V_reg_1064 <= ap_const_lv16_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                add_ln269_2_reg_2551 <= add_ln269_2_fu_1311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                add_ln275_reg_2615 <= add_ln275_fu_1385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                add_ln308_reg_2594 <= add_ln308_fu_1360_p2;
                bramsetsval_reg_2575 <= bramsetsval_fu_1341_p2;
                bramtotal_reg_2585 <= bramtotal_fu_1350_p2;
                mul_ln271_reg_2580 <= mul_ln271_fu_2470_p2;
                mul_ln327_reg_2606 <= mul_ln327_fu_2476_p2;
                    ram_row_depth_reg_2562(10 downto 0) <= ram_row_depth_fu_1326_p1(10 downto 0);
                trunc_ln308_reg_2590 <= trunc_ln308_fu_1356_p1;
                    zext_ln267_1_reg_2557(13 downto 0) <= zext_ln267_1_fu_1323_p1(13 downto 0);
                    zext_ln267_reg_2570(10 downto 0) <= zext_ln267_fu_1329_p1(10 downto 0);
                    zext_ln327_reg_2600(10 downto 0) <= zext_ln327_fu_1366_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                high_threshold_read_reg_2497 <= high_threshold_dout;
                low_threshold_read_reg_2492 <= low_threshold_dout;
                op_assign_reg_2523 <= p_dst2_cols_dout(15 downto 5);
                p_dst2_cols_read_reg_2487 <= p_dst2_cols_dout;
                p_src_cols_read_reg_2507 <= p_src_cols_dout;
                p_src_rows_read_reg_2502 <= p_src_rows_dout;
                slice_h_reg_2517 <= p_dst2_rows_dout(15 downto 2);
                trunc_ln412_reg_2512 <= trunc_ln412_fu_1252_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0))) then
                iBuff_0_V_addr_reg_2692 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_10_V_addr_reg_2712 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_13_V_addr_reg_2717 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_16_V_addr_reg_2722 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_19_V_addr_reg_2727 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_1_V_addr_reg_2697 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_4_V_addr_reg_2702 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                iBuff_7_V_addr_reg_2707 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
                index_V_reg_2686 <= index_V_fu_1504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln295_reg_2636 <= icmp_ln295_fu_1430_p2;
                icmp_ln879_21_reg_2732 <= icmp_ln879_21_fu_1532_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln348_reg_2757 <= icmp_ln348_fu_1598_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln374_reg_2900 <= icmp_ln374_fu_1772_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln383_reg_2909 <= icmp_ln383_fu_1788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1788_p2 = ap_const_lv1_0))) then
                icmp_ln879_19_reg_2918 <= icmp_ln879_19_fu_1799_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_fu_1532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_22_reg_2744 <= icmp_ln879_22_fu_1549_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln879_21_fu_1532_p2 = ap_const_lv1_0))) then
                icmp_ln879_23_reg_2736 <= icmp_ln879_23_fu_1537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_23_fu_1537_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln879_21_fu_1532_p2 = ap_const_lv1_0))) then
                icmp_ln879_27_reg_2740 <= icmp_ln879_27_fu_1544_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                ii_reg_2895 <= ii_fu_1766_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                intra_i_reg_2752 <= intra_i_fu_1592_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                k_reg_2904 <= k_fu_1777_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln275_fu_1379_p2 = ap_const_lv1_0))) then
                mul_ln295_reg_2625 <= mul_ln295_fu_2482_p2;
                select_ln281_reg_2620 <= select_ln281_fu_1397_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0))) then
                p_dst1_data_V_read_reg_2674 <= p_dst1_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1430_p2 = ap_const_lv1_0))) then
                select_ln308_1_reg_2658 <= select_ln308_1_fu_1486_p3;
                select_ln308_reg_2650 <= select_ln308_fu_1478_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1598_p2 = ap_const_lv1_0))) then
                select_ln356_1_reg_2771 <= select_ln356_1_fu_1654_p3;
                select_ln356_reg_2766 <= select_ln356_fu_1646_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1788_p2 = ap_const_lv1_0))) then
                select_ln386_reg_2923 <= select_ln386_fu_1811_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1430_p2 = ap_const_lv1_0))) then
                t_V_15_reg_2645 <= t_V_15_fu_1452_p3;
                trunc_ln321_reg_2665 <= trunc_ln321_fu_1494_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln275_fu_1379_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                tmp_3_reg_2631 <= p_dst2_cols_read_reg_2487(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1598_p2 = ap_const_lv1_0))) then
                trunc_ln321_7_reg_2776 <= trunc_ln321_7_fu_1700_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                udiv_ln268_reg_2534 <= grp_fu_1276_p2;
            end if;
        end if;
    end process;
    zext_ln267_1_reg_2557(25 downto 14) <= "000000000000";
    ram_row_depth_reg_2562(15 downto 11) <= "00000";
    zext_ln267_reg_2570(31 downto 11) <= "000000000000000000000";
    zext_ln327_reg_2600(16 downto 11) <= "000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n, ap_enable_reg_pp0_iter1, icmp_ln275_fu_1379_p2, ap_CS_fsm_state53, icmp_ln295_fu_1430_p2, ap_enable_reg_pp0_iter0, icmp_ln340_fu_1586_p2, ap_CS_fsm_state58, icmp_ln348_fu_1598_p2, ap_enable_reg_pp1_iter0, icmp_ln371_fu_1761_p2, ap_CS_fsm_state63, icmp_ln374_fu_1772_p2, ap_enable_reg_pp2_iter0, icmp_ln383_fu_1788_p2, ap_enable_reg_pp3_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, grp_TopDown_20_6_1024_s_fu_1209_ap_done, grp_Canny_fu_1236_ap_done, ap_CS_fsm_state59, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_Canny_fu_1236_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((icmp_ln275_fu_1379_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln295_fu_1430_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln295_fu_1430_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((icmp_ln340_fu_1586_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                if (((grp_TopDown_20_6_1024_s_fu_1209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state58;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln348_fu_1598_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln348_fu_1598_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state63 => 
                if (((icmp_ln371_fu_1761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln374_fu_1772_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln374_fu_1772_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln383_fu_1788_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln383_fu_1788_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln269_2_fu_1311_p2 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(zext_ln269_fu_1307_p1));
    add_ln269_fu_1289_p2 <= std_logic_vector(unsigned(ap_const_lv15_9) + unsigned(zext_ln266_fu_1282_p1));
    add_ln275_fu_1385_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1020) + unsigned(ap_const_lv4_1));
    add_ln308_fu_1360_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(bramsetsval_fu_1341_p2));
    add_ln327_fu_1369_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(zext_ln270_fu_1335_p1));
    add_ln392_10_fu_2287_p2 <= std_logic_vector(unsigned(ap_const_lv32_D) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_11_fu_2293_p2 <= std_logic_vector(unsigned(ap_const_lv32_C) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_12_fu_2369_p2 <= std_logic_vector(unsigned(ap_const_lv32_F) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_13_fu_2375_p2 <= std_logic_vector(unsigned(ap_const_lv32_E) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_1_fu_1883_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_2_fu_1959_p2 <= std_logic_vector(unsigned(ap_const_lv32_5) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_3_fu_1965_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_4_fu_2041_p2 <= std_logic_vector(unsigned(ap_const_lv32_7) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_5_fu_2047_p2 <= std_logic_vector(unsigned(ap_const_lv32_6) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_6_fu_2123_p2 <= std_logic_vector(unsigned(ap_const_lv32_9) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_7_fu_2129_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_8_fu_2205_p2 <= std_logic_vector(unsigned(ap_const_lv32_B) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_9_fu_2211_p2 <= std_logic_vector(unsigned(ap_const_lv32_A) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln392_fu_1877_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(select_ln386_1_fu_1838_p3));
    add_ln700_fu_1824_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(p_0301_0_i_i_i_reg_1164));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(53);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(57);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(60);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(62);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state57 <= ap_CS_fsm(54);
    ap_CS_fsm_state58 <= ap_CS_fsm(55);
    ap_CS_fsm_state59 <= ap_CS_fsm(56);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state62 <= ap_CS_fsm(58);
    ap_CS_fsm_state63 <= ap_CS_fsm(59);
    ap_CS_fsm_state66 <= ap_CS_fsm(61);
    ap_CS_fsm_state69 <= ap_CS_fsm(63);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_const_boolean_1 = ap_block_pp0_stage0_subdone) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln295_reg_2636)
    begin
                ap_block_pp0_stage0_11001 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2636 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln295_reg_2636)
    begin
                ap_block_pp0_stage0_subdone <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2636 = ap_const_lv1_0));
    end process;


    ap_block_pp1_assign_proc : process(ap_CS_fsm, ap_block_pp1_stage0_subdone)
    begin
                ap_block_pp1 <= ((ap_const_boolean_1 = ap_block_pp1_stage0_subdone) and (ap_ST_fsm_pp1_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln348_reg_2757)
    begin
                ap_block_pp1_stage0_01001 <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln348_reg_2757 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln348_reg_2757)
    begin
                ap_block_pp1_stage0_11001 <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln348_reg_2757 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln348_reg_2757)
    begin
                ap_block_pp1_stage0_subdone <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln348_reg_2757 = ap_const_lv1_0));
    end process;


    ap_block_pp2_assign_proc : process(ap_CS_fsm, ap_block_pp2_stage0_subdone)
    begin
                ap_block_pp2 <= ((ap_const_boolean_1 = ap_block_pp2_stage0_subdone) and (ap_ST_fsm_pp2_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2900)
    begin
                ap_block_pp2_stage0_11001 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln374_reg_2900 = ap_const_lv1_0));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2900)
    begin
                ap_block_pp2_stage0_subdone <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln374_reg_2900 = ap_const_lv1_0));
    end process;


    ap_block_pp3_assign_proc : process(ap_CS_fsm, ap_block_pp3_stage0_subdone)
    begin
                ap_block_pp3 <= ((ap_const_boolean_1 = ap_block_pp3_stage0_subdone) and (ap_ST_fsm_pp3_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter1, icmp_ln383_reg_2909)
    begin
                ap_block_pp3_stage0_01001 <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln383_reg_2909 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter1, icmp_ln383_reg_2909)
    begin
                ap_block_pp3_stage0_11001 <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln383_reg_2909 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter1, icmp_ln383_reg_2909)
    begin
                ap_block_pp3_stage0_subdone <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (icmp_ln383_reg_2909 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call40_assign_proc : process(real_start, ap_done_reg, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
                ap_block_state1_ignore_call40 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0));
    end process;

        ap_block_state54_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state55_pp0_stage0_iter1_assign_proc : process(p_dst1_data_V_empty_n, icmp_ln295_reg_2636)
    begin
                ap_block_state55_pp0_stage0_iter1 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (icmp_ln295_reg_2636 = ap_const_lv1_0));
    end process;

        ap_block_state56_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state61_pp1_stage0_iter1_assign_proc : process(p_dst1_data_V_full_n, icmp_ln348_reg_2757)
    begin
                ap_block_state61_pp1_stage0_iter1 <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (icmp_ln348_reg_2757 = ap_const_lv1_0));
    end process;

        ap_block_state64_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state65_pp2_stage0_iter1_assign_proc : process(p_dst1_data_V_empty_n, icmp_ln374_reg_2900)
    begin
                ap_block_state65_pp2_stage0_iter1 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (icmp_ln374_reg_2900 = ap_const_lv1_0));
    end process;

        ap_block_state67_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state68_pp3_stage0_iter1_assign_proc : process(p_dst2_data_V_full_n, icmp_ln383_reg_2909)
    begin
                ap_block_state68_pp3_stage0_iter1 <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (icmp_ln383_reg_2909 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state54_assign_proc : process(icmp_ln295_fu_1430_p2)
    begin
        if ((icmp_ln295_fu_1430_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state54 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state54 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state60_assign_proc : process(icmp_ln348_fu_1598_p2)
    begin
        if ((icmp_ln348_fu_1598_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state60 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state60 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state64_assign_proc : process(icmp_ln374_fu_1772_p2)
    begin
        if ((icmp_ln374_fu_1772_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state64 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state64 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state67_assign_proc : process(icmp_ln383_fu_1788_p2)
    begin
        if ((icmp_ln383_fu_1788_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state67 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state67 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln371_fu_1761_p2, ap_CS_fsm_state63)
    begin
        if (((icmp_ln371_fu_1761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_282_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_282 <= (trunc_ln321_reg_2665 = ap_const_lv5_10);
    end process;


    ap_enable_operation_285_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_285 <= (trunc_ln321_reg_2665 = ap_const_lv5_D);
    end process;


    ap_enable_operation_288_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_288 <= (trunc_ln321_reg_2665 = ap_const_lv5_A);
    end process;


    ap_enable_operation_291_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_291 <= (trunc_ln321_reg_2665 = ap_const_lv5_7);
    end process;


    ap_enable_operation_294_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_294 <= (trunc_ln321_reg_2665 = ap_const_lv5_4);
    end process;


    ap_enable_operation_297_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_297 <= (trunc_ln321_reg_2665 = ap_const_lv5_1);
    end process;


    ap_enable_operation_298_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_enable_operation_298 <= (trunc_ln321_reg_2665 = ap_const_lv5_0);
    end process;


    ap_enable_operation_299_assign_proc : process(ap_predicate_op299_store_state55)
    begin
                ap_enable_operation_299 <= (ap_predicate_op299_store_state55 = ap_const_boolean_1);
    end process;


    ap_enable_operation_320_assign_proc : process(ap_predicate_op320_store_state56)
    begin
                ap_enable_operation_320 <= (ap_predicate_op320_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_322_assign_proc : process(ap_predicate_op322_store_state56)
    begin
                ap_enable_operation_322 <= (ap_predicate_op322_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_324_assign_proc : process(ap_predicate_op324_store_state56)
    begin
                ap_enable_operation_324 <= (ap_predicate_op324_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_326_assign_proc : process(ap_predicate_op326_store_state56)
    begin
                ap_enable_operation_326 <= (ap_predicate_op326_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_328_assign_proc : process(ap_predicate_op328_store_state56)
    begin
                ap_enable_operation_328 <= (ap_predicate_op328_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_330_assign_proc : process(ap_predicate_op330_store_state56)
    begin
                ap_enable_operation_330 <= (ap_predicate_op330_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_332_assign_proc : process(ap_predicate_op332_store_state56)
    begin
                ap_enable_operation_332 <= (ap_predicate_op332_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_334_assign_proc : process(ap_predicate_op334_store_state56)
    begin
                ap_enable_operation_334 <= (ap_predicate_op334_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_346_assign_proc : process(ap_predicate_op346_store_state56)
    begin
                ap_enable_operation_346 <= (ap_predicate_op346_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_348_assign_proc : process(ap_predicate_op348_store_state56)
    begin
                ap_enable_operation_348 <= (ap_predicate_op348_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_350_assign_proc : process(ap_predicate_op350_store_state56)
    begin
                ap_enable_operation_350 <= (ap_predicate_op350_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_352_assign_proc : process(ap_predicate_op352_store_state56)
    begin
                ap_enable_operation_352 <= (ap_predicate_op352_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_354_assign_proc : process(ap_predicate_op354_store_state56)
    begin
                ap_enable_operation_354 <= (ap_predicate_op354_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_356_assign_proc : process(ap_predicate_op356_store_state56)
    begin
                ap_enable_operation_356 <= (ap_predicate_op356_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_358_assign_proc : process(ap_predicate_op358_store_state56)
    begin
                ap_enable_operation_358 <= (ap_predicate_op358_store_state56 = ap_const_boolean_1);
    end process;


    ap_enable_operation_360_assign_proc : process(ap_predicate_op360_store_state56)
    begin
                ap_enable_operation_360 <= (ap_predicate_op360_store_state56 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_enable_state55_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state55_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state56_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state56_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_k_0_i_i_i_phi_fu_1156_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln374_reg_2900, k_0_i_i_i_reg_1152, k_reg_2904)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln374_reg_2900 = ap_const_lv1_0))) then 
            ap_phi_mux_k_0_i_i_i_phi_fu_1156_p4 <= k_reg_2904;
        else 
            ap_phi_mux_k_0_i_i_i_phi_fu_1156_p4 <= k_0_i_i_i_reg_1152;
        end if; 
    end process;


    ap_phi_mux_p_0259_0_i_i_i_phi_fu_1057_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln295_reg_2636, p_0259_0_i_i_i_reg_1053, select_ln308_reg_2650)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_0259_0_i_i_i_phi_fu_1057_p4 <= select_ln308_reg_2650;
        else 
            ap_phi_mux_p_0259_0_i_i_i_phi_fu_1057_p4 <= p_0259_0_i_i_i_reg_1053;
        end if; 
    end process;


    ap_phi_mux_p_0259_2_i_i_i_phi_fu_1112_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln348_reg_2757, p_0259_2_i_i_i_reg_1108, select_ln356_reg_2766)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0259_2_i_i_i_phi_fu_1112_p4 <= select_ln356_reg_2766;
        else 
            ap_phi_mux_p_0259_2_i_i_i_phi_fu_1112_p4 <= p_0259_2_i_i_i_reg_1108;
        end if; 
    end process;


    ap_phi_mux_t_V_12_phi_fu_1179_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln383_reg_2909, t_V_12_reg_1175, select_ln386_reg_2923)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2909 = ap_const_lv1_0))) then 
            ap_phi_mux_t_V_12_phi_fu_1179_p4 <= select_ln386_reg_2923;
        else 
            ap_phi_mux_t_V_12_phi_fu_1179_p4 <= t_V_12_reg_1175;
        end if; 
    end process;


    ap_phi_mux_t_V_13_phi_fu_1123_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln348_reg_2757, t_V_13_reg_1119, select_ln356_1_reg_2771)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0))) then 
            ap_phi_mux_t_V_13_phi_fu_1123_p4 <= select_ln356_1_reg_2771;
        else 
            ap_phi_mux_t_V_13_phi_fu_1123_p4 <= t_V_13_reg_1119;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_1068_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln295_reg_2636, t_V_reg_1064, select_ln308_1_reg_2658)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_t_V_phi_fu_1068_p4 <= select_ln308_1_reg_2658;
        else 
            ap_phi_mux_t_V_phi_fu_1068_p4 <= t_V_reg_1064;
        end if; 
    end process;


    ap_predicate_op299_store_state55_assign_proc : process(trunc_ln321_reg_2665)
    begin
                ap_predicate_op299_store_state55 <= ((trunc_ln321_reg_2665 = ap_const_lv5_13) or ((trunc_ln321_reg_2665 = ap_const_lv5_14) or ((trunc_ln321_reg_2665 = ap_const_lv5_15) or ((trunc_ln321_reg_2665 = ap_const_lv5_16) or ((trunc_ln321_reg_2665 = ap_const_lv5_17) or ((trunc_ln321_reg_2665 = ap_const_lv5_18) or ((trunc_ln321_reg_2665 = ap_const_lv5_19) or ((trunc_ln321_reg_2665 = ap_const_lv5_1A) or ((trunc_ln321_reg_2665 = ap_const_lv5_1B) or ((trunc_ln321_reg_2665 = ap_const_lv5_1C) or ((trunc_ln321_reg_2665 = ap_const_lv5_1D) or ((trunc_ln321_reg_2665 = ap_const_lv5_1E) or (trunc_ln321_reg_2665 = ap_const_lv5_1F)))))))))))));
    end process;


    ap_predicate_op320_store_state56_assign_proc : process(icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op320_store_state56 <= ((icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (icmp_ln879_27_reg_2740 = ap_const_lv1_0) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op322_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op322_store_state56 <= ((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op324_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op324_store_state56 <= ((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op326_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op326_store_state56 <= ((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op328_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op328_store_state56 <= ((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op330_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op330_store_state56 <= ((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op332_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op332_store_state56 <= ((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op334_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740)
    begin
                ap_predicate_op334_store_state56 <= (not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0));
    end process;


    ap_predicate_op346_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op346_store_state56 <= ((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op348_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op348_store_state56 <= ((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op350_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op350_store_state56 <= ((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op352_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op352_store_state56 <= ((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op354_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op354_store_state56 <= ((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op356_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op356_store_state56 <= ((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op358_store_state56_assign_proc : process(trunc_ln308_reg_2590, icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op358_store_state56 <= (not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0));
    end process;


    ap_predicate_op360_store_state56_assign_proc : process(icmp_ln879_21_reg_2732, icmp_ln879_22_reg_2744)
    begin
                ap_predicate_op360_store_state56 <= ((icmp_ln879_22_reg_2744 = ap_const_lv1_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    bit_fu_2464_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) + unsigned(select_ln386_1_fu_1838_p3));
    bramsetsval_fu_1341_p2 <= std_logic_vector(unsigned(add_ln269_2_reg_2551) - unsigned(grp_fu_1317_p2));
    bramtotal_fu_1350_p2 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(bramsetsval_fu_1341_p2));
    dep_V_1_fu_1641_p2 <= std_logic_vector(unsigned(ram_row_depth_reg_2562) + unsigned(ap_phi_mux_p_0259_2_i_i_i_phi_fu_1112_p4));
    dep_V_fu_1473_p2 <= std_logic_vector(unsigned(ram_row_depth_reg_2562) + unsigned(ap_phi_mux_p_0259_0_i_i_i_phi_fu_1057_p4));
    grp_Canny_fu_1236_ap_start <= grp_Canny_fu_1236_ap_start_reg;
    grp_TopDown_20_6_1024_s_fu_1209_ap_start <= grp_TopDown_20_6_1024_s_fu_1209_ap_start_reg;

    grp_fu_1276_ap_start_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_1276_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1276_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1276_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state15, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_1276_ce <= ap_const_logic_1;
        else 
            grp_fu_1276_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1276_p1 <= p_dst2_cols_dout(15 downto 5);

    grp_fu_1301_ap_start_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1301_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1301_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1301_p0 <= std_logic_vector(unsigned(zext_ln268_fu_1285_p1) + unsigned(add_ln269_fu_1289_p2));
    grp_fu_1301_p1 <= zext_ln268_fu_1285_p1(11 - 1 downto 0);

    grp_fu_1317_ap_start_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fu_1317_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1317_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1317_p0 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(zext_ln269_fu_1307_p1));
    grp_fu_1317_p1 <= ap_const_lv16_3(3 - 1 downto 0);

    high_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, high_threshold_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_blk_n <= high_threshold_empty_n;
        else 
            high_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    high_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_read <= ap_const_logic_1;
        else 
            high_threshold_read <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_0_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_0_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address0;
        else 
            iBuff_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_0_V_address1_assign_proc : process(ap_block_pp0_stage0, iBuff_0_V_addr_reg_2692, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address1, ap_CS_fsm_state59, zext_ln544_8_fu_1562_p1)
    begin
        if (((icmp_ln879_22_reg_2744 = ap_const_lv1_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_address1 <= iBuff_0_V_addr_reg_2692;
        elsif (((icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_27_reg_2740 = ap_const_lv1_0) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_address1 <= zext_ln544_8_fu_1562_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_0_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_address1;
        else 
            iBuff_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_0_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce0;
        else 
            iBuff_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_22_reg_2744 = ap_const_lv1_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_27_reg_2740 = ap_const_lv1_0) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_0_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_0_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_ce1;
        else 
            iBuff_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_d1_assign_proc : process(ap_block_pp0_stage0, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_22_reg_2744 = ap_const_lv1_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_d1 <= ap_const_lv64_0;
        elsif (((icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_27_reg_2740 = ap_const_lv1_0) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_0_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_d1;
        else 
            iBuff_0_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_0_V_we0 <= ap_const_logic_1;
        else 
            iBuff_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_22_reg_2744 = ap_const_lv1_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_27_reg_2740 = ap_const_lv1_0) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_0_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_0_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_0_V_we1;
        else 
            iBuff_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_10_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_10_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address0;
        else 
            iBuff_10_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_10_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_10_V_addr_reg_2712, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_address1 <= iBuff_10_V_addr_reg_2712;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_10_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_address1;
        else 
            iBuff_10_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_10_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_10_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_10_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce0;
        else 
            iBuff_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_10_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_10_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_ce1;
        else 
            iBuff_10_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_10_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_d1;
        else 
            iBuff_10_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_10_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_10_V_we0 <= ap_const_logic_1;
        else 
            iBuff_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_10_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_10_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_10_V_we1;
        else 
            iBuff_10_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_11_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_11_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_11_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_address0;
        else 
            iBuff_11_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_11_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_11_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_11_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce0;
        else 
            iBuff_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_11_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_ce1;
        else 
            iBuff_11_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_11_V_we0 <= ap_const_logic_1;
        else 
            iBuff_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_11_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_11_V_we1;
        else 
            iBuff_11_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_12_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_12_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_12_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_address0;
        else 
            iBuff_12_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_12_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_12_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_12_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce0;
        else 
            iBuff_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_12_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_ce1;
        else 
            iBuff_12_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_12_V_we0 <= ap_const_logic_1;
        else 
            iBuff_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_12_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_12_V_we1;
        else 
            iBuff_12_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_13_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_13_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address0;
        else 
            iBuff_13_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_13_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_13_V_addr_reg_2717, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_address1 <= iBuff_13_V_addr_reg_2717;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_13_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_address1;
        else 
            iBuff_13_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_13_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_13_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_13_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce0;
        else 
            iBuff_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_13_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_13_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_ce1;
        else 
            iBuff_13_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_13_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_d1;
        else 
            iBuff_13_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_13_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_13_V_we0 <= ap_const_logic_1;
        else 
            iBuff_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_13_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_13_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_13_V_we1;
        else 
            iBuff_13_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_14_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_14_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_14_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_address0;
        else 
            iBuff_14_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_14_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_14_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_14_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce0;
        else 
            iBuff_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_14_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_ce1;
        else 
            iBuff_14_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_14_V_we0 <= ap_const_logic_1;
        else 
            iBuff_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_14_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_14_V_we1;
        else 
            iBuff_14_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_15_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_15_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_15_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_address0;
        else 
            iBuff_15_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_15_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_15_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_15_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce0;
        else 
            iBuff_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_15_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_ce1;
        else 
            iBuff_15_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_15_V_we0 <= ap_const_logic_1;
        else 
            iBuff_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_15_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_15_V_we1;
        else 
            iBuff_15_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_16_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_16_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address0;
        else 
            iBuff_16_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_16_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_16_V_addr_reg_2722, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_address1 <= iBuff_16_V_addr_reg_2722;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_16_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_address1;
        else 
            iBuff_16_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_16_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_16_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_16_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce0;
        else 
            iBuff_16_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_16_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_16_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_ce1;
        else 
            iBuff_16_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_16_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_d1;
        else 
            iBuff_16_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_16_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_16_V_we0 <= ap_const_logic_1;
        else 
            iBuff_16_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_16_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_16_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_16_V_we1;
        else 
            iBuff_16_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_17_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_17_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_17_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_address0;
        else 
            iBuff_17_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_17_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_17_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_17_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce0;
        else 
            iBuff_17_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_17_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_ce1;
        else 
            iBuff_17_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_17_V_we0 <= ap_const_logic_1;
        else 
            iBuff_17_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_17_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_17_V_we1;
        else 
            iBuff_17_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_18_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_18_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_18_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_address0;
        else 
            iBuff_18_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_18_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_18_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_18_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce0;
        else 
            iBuff_18_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_18_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_ce1;
        else 
            iBuff_18_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_18_V_we0 <= ap_const_logic_1;
        else 
            iBuff_18_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_18_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_18_V_we1;
        else 
            iBuff_18_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_19_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_19_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address0;
        else 
            iBuff_19_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_19_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_19_V_addr_reg_2727, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if ((not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif ((not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_address1 <= iBuff_19_V_addr_reg_2727;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_19_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_address1;
        else 
            iBuff_19_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_19_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_19_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_19_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce0;
        else 
            iBuff_19_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce1, ap_CS_fsm_state59)
    begin
        if (((not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or (not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_19_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_19_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_ce1;
        else 
            iBuff_19_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_d1, ap_CS_fsm_state59)
    begin
        if ((not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif ((not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_19_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_d1;
        else 
            iBuff_19_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_19_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((trunc_ln321_reg_2665 = ap_const_lv5_13) or ((trunc_ln321_reg_2665 = ap_const_lv5_14) or ((trunc_ln321_reg_2665 = ap_const_lv5_15) or ((trunc_ln321_reg_2665 = ap_const_lv5_16) or ((trunc_ln321_reg_2665 = ap_const_lv5_17) or ((trunc_ln321_reg_2665 = ap_const_lv5_18) or ((trunc_ln321_reg_2665 = ap_const_lv5_19) or ((trunc_ln321_reg_2665 = ap_const_lv5_1A) or ((trunc_ln321_reg_2665 = ap_const_lv5_1B) or ((trunc_ln321_reg_2665 = ap_const_lv5_1C) or ((trunc_ln321_reg_2665 = ap_const_lv5_1D) or ((trunc_ln321_reg_2665 = ap_const_lv5_1E) or (trunc_ln321_reg_2665 = ap_const_lv5_1F))))))))))))))) then 
            iBuff_19_V_we0 <= ap_const_logic_1;
        else 
            iBuff_19_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_we1, ap_CS_fsm_state59)
    begin
        if (((not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or (not((trunc_ln308_reg_2590 = ap_const_lv5_0)) and not((trunc_ln308_reg_2590 = ap_const_lv5_3)) and not((trunc_ln308_reg_2590 = ap_const_lv5_6)) and not((trunc_ln308_reg_2590 = ap_const_lv5_9)) and not((trunc_ln308_reg_2590 = ap_const_lv5_C)) and not((trunc_ln308_reg_2590 = ap_const_lv5_F)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_19_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_19_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_19_V_we1;
        else 
            iBuff_19_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_1_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_1_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address0;
        else 
            iBuff_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_1_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_1_V_addr_reg_2697, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_address1 <= iBuff_1_V_addr_reg_2697;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_1_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_address1;
        else 
            iBuff_1_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_1_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce0;
        else 
            iBuff_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_1_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_1_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_ce1;
        else 
            iBuff_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_1_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_d1;
        else 
            iBuff_1_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_1_V_we0 <= ap_const_logic_1;
        else 
            iBuff_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_1_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_1_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_1_V_we1;
        else 
            iBuff_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_2_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_2_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_2_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_address0;
        else 
            iBuff_2_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_2_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce0;
        else 
            iBuff_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_2_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_ce1;
        else 
            iBuff_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_2_V_we0 <= ap_const_logic_1;
        else 
            iBuff_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_2_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_2_V_we1;
        else 
            iBuff_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_3_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_3_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_3_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_address0;
        else 
            iBuff_3_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_3_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_3_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce0;
        else 
            iBuff_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_3_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_ce1;
        else 
            iBuff_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_3_V_we0 <= ap_const_logic_1;
        else 
            iBuff_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_3_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_3_V_we1;
        else 
            iBuff_3_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_4_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_4_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address0;
        else 
            iBuff_4_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_4_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_4_V_addr_reg_2702, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_address1 <= iBuff_4_V_addr_reg_2702;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_4_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_address1;
        else 
            iBuff_4_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_4_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_4_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce0;
        else 
            iBuff_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_4_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_4_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_ce1;
        else 
            iBuff_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_4_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_d1;
        else 
            iBuff_4_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_4_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_4_V_we0 <= ap_const_logic_1;
        else 
            iBuff_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_4_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_4_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_4_V_we1;
        else 
            iBuff_4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_5_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_5_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_5_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_address0;
        else 
            iBuff_5_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_5_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_5_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce0;
        else 
            iBuff_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_5_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_ce1;
        else 
            iBuff_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_5_V_we0 <= ap_const_logic_1;
        else 
            iBuff_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_5_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_5_V_we1;
        else 
            iBuff_5_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_6_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_6_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_6_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_address0;
        else 
            iBuff_6_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_6_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_6_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce0;
        else 
            iBuff_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_6_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_ce1;
        else 
            iBuff_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_6_V_we0 <= ap_const_logic_1;
        else 
            iBuff_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_6_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_6_V_we1;
        else 
            iBuff_6_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_7_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_7_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address0;
        else 
            iBuff_7_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_7_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, iBuff_7_V_addr_reg_2707, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address1, ap_CS_fsm_state59, sext_ln544_fu_1575_p1)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_address1 <= sext_ln544_fu_1575_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_address1 <= iBuff_7_V_addr_reg_2707;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_7_V_address1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_address1;
        else 
            iBuff_7_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_7_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_7_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce0;
        else 
            iBuff_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_ce1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_7_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_7_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_ce1;
        else 
            iBuff_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_d1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2590, p_dst1_data_V_read_reg_2674, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_d1, ap_CS_fsm_state59)
    begin
        if (((icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_d1 <= p_dst1_data_V_read_reg_2674;
        elsif (((icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_7_V_d1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_d1;
        else 
            iBuff_7_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_7_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_7_V_we0 <= ap_const_logic_1;
        else 
            iBuff_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_we1_assign_proc : process(trunc_ln308_reg_2590, ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2732, icmp_ln879_23_reg_2736, icmp_ln879_27_reg_2740, icmp_ln879_22_reg_2744, ap_enable_reg_pp0_iter2, grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_we1, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_21_reg_2732 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_22_reg_2744 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln879_27_reg_2740 = ap_const_lv1_1) and (icmp_ln879_23_reg_2736 = ap_const_lv1_1) and (trunc_ln308_reg_2590 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln879_21_reg_2732 = ap_const_lv1_0)))) then 
            iBuff_7_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_7_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_7_V_we1;
        else 
            iBuff_7_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_8_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_8_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_8_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_address0;
        else 
            iBuff_8_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_8_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_8_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce0;
        else 
            iBuff_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_8_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_ce1;
        else 
            iBuff_8_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_8_V_we0 <= ap_const_logic_1;
        else 
            iBuff_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_8_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_8_V_we1;
        else 
            iBuff_8_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address0, ap_CS_fsm_state59, zext_ln544_fu_1508_p1, zext_ln544_7_fu_1676_p1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_9_V_address0 <= zext_ln544_7_fu_1676_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_9_V_address0 <= zext_ln544_fu_1508_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_9_V_address0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_address0;
        else 
            iBuff_9_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_9_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce0, ap_CS_fsm_state59)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            iBuff_9_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_9_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce0;
        else 
            iBuff_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_9_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_ce1;
        else 
            iBuff_9_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, trunc_ln321_reg_2665)
    begin
        if (((trunc_ln321_reg_2665 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            iBuff_9_V_we0 <= ap_const_logic_1;
        else 
            iBuff_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_we1, ap_CS_fsm_state59)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            iBuff_9_V_we1 <= grp_TopDown_20_6_1024_s_fu_1209_iBuff_9_V_we1;
        else 
            iBuff_9_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_1435_p2 <= std_logic_vector(unsigned(i_0_i_i_i_reg_1075) + unsigned(ap_const_lv32_1));
    i_fu_1603_p2 <= std_logic_vector(unsigned(i6_0_i_i_i_reg_1130) + unsigned(ap_const_lv32_1));
    icmp_ln275_fu_1379_p2 <= "1" when (indvar_flatten_reg_1020 = ap_const_lv4_8) else "0";
    icmp_ln281_fu_1391_p2 <= "1" when (slice_0_i_i_i_reg_1031 = ap_const_lv3_4) else "0";
    icmp_ln283_fu_1405_p2 <= "1" when (select_ln281_fu_1397_p3 = ap_const_lv3_3) else "0";
    icmp_ln295_fu_1430_p2 <= "1" when (i_0_i_i_i_reg_1075 = mul_ln295_reg_2625) else "0";
    icmp_ln340_fu_1586_p2 <= "1" when (intra_i_0_i_i_i_reg_1086 = ap_const_lv4_8) else "0";
    icmp_ln348_fu_1598_p2 <= "1" when (i6_0_i_i_i_reg_1130 = mul_ln295_reg_2625) else "0";
    icmp_ln371_fu_1761_p2 <= "1" when (ii_0_i_i_i_reg_1141 = trunc_ln412_reg_2512) else "0";
    icmp_ln374_fu_1772_p2 <= "1" when (ap_phi_mux_k_0_i_i_i_phi_fu_1156_p4 = op_assign_reg_2523) else "0";
    icmp_ln383_fu_1788_p2 <= "1" when (j_0_i_i_i_reg_1186 = tmp_3_reg_2631) else "0";
    icmp_ln647_1_fu_1971_p2 <= "1" when (unsigned(add_ln392_3_fu_1965_p2) > unsigned(add_ln392_2_fu_1959_p2)) else "0";
    icmp_ln647_2_fu_2053_p2 <= "1" when (unsigned(add_ln392_5_fu_2047_p2) > unsigned(add_ln392_4_fu_2041_p2)) else "0";
    icmp_ln647_3_fu_2135_p2 <= "1" when (unsigned(add_ln392_7_fu_2129_p2) > unsigned(add_ln392_6_fu_2123_p2)) else "0";
    icmp_ln647_4_fu_2217_p2 <= "1" when (unsigned(add_ln392_9_fu_2211_p2) > unsigned(add_ln392_8_fu_2205_p2)) else "0";
    icmp_ln647_5_fu_2299_p2 <= "1" when (unsigned(add_ln392_11_fu_2293_p2) > unsigned(add_ln392_10_fu_2287_p2)) else "0";
    icmp_ln647_6_fu_2381_p2 <= "1" when (unsigned(add_ln392_13_fu_2375_p2) > unsigned(add_ln392_12_fu_2369_p2)) else "0";
    icmp_ln647_fu_1889_p2 <= "1" when (unsigned(add_ln392_1_fu_1883_p2) > unsigned(add_ln392_fu_1877_p2)) else "0";
    icmp_ln879_18_fu_1468_p2 <= "1" when (select_ln303_1_fu_1460_p3 = add_ln308_reg_2594) else "0";
    icmp_ln879_19_fu_1799_p2 <= "1" when (p_0301_0_i_i_i_reg_1164 = ap_const_lv3_4) else "0";
    icmp_ln879_20_fu_1863_p2 <= "1" when (trunc_ln647_1_fu_1859_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_21_fu_1532_p2 <= "1" when (select_ln308_1_reg_2658 = ap_const_lv16_1) else "0";
    icmp_ln879_22_fu_1549_p2 <= "1" when (select_ln308_reg_2650 = ap_const_lv16_0) else "0";
    icmp_ln879_23_fu_1537_p2 <= "1" when (select_ln308_1_reg_2658 = bramsetsval_reg_2575) else "0";
    icmp_ln879_24_fu_1945_p2 <= "1" when (trunc_ln364_fu_1941_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_25_fu_1609_p2 <= "1" when (p_0331_2_i_i_i_reg_1097 = ram_row_depth_reg_2562) else "0";
    icmp_ln879_26_fu_1636_p2 <= "1" when (select_ln352_1_fu_1628_p3 = add_ln308_reg_2594) else "0";
    icmp_ln879_27_fu_1544_p2 <= "1" when (zext_ln879_fu_1541_p1 = mul_ln327_reg_2606) else "0";
    icmp_ln879_28_fu_2027_p2 <= "1" when (trunc_ln364_1_fu_2023_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_29_fu_2109_p2 <= "1" when (trunc_ln364_2_fu_2105_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_30_fu_2191_p2 <= "1" when (trunc_ln364_3_fu_2187_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_31_fu_2273_p2 <= "1" when (trunc_ln364_4_fu_2269_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_32_fu_2355_p2 <= "1" when (trunc_ln364_5_fu_2351_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_33_fu_2437_p2 <= "1" when (trunc_ln364_6_fu_2433_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_fu_1441_p2 <= "1" when (p_0331_0_i_i_i_reg_1042 = ram_row_depth_reg_2562) else "0";
    id_V_fu_1830_p3 <= 
        ap_const_lv3_1 when (icmp_ln879_19_fu_1799_p2(0) = '1') else 
        add_ln700_fu_1824_p2;
    idx1_V_1_fu_1498_p2 <= std_logic_vector(unsigned(t_V_15_fu_1452_p3) + unsigned(ap_const_lv16_1));
    idx1_V_fu_1704_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(t_V_14_fu_1620_p3));
    idx2_V_1_fu_1614_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_phi_mux_t_V_13_phi_fu_1123_p4));
    idx2_V_fu_1446_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_phi_mux_t_V_phi_fu_1068_p4));
    ii_fu_1766_p2 <= std_logic_vector(unsigned(ii_0_i_i_i_reg_1141) + unsigned(ap_const_lv16_1));
    index_V_fu_1504_p2 <= std_logic_vector(unsigned(t_V_15_reg_2645) + unsigned(select_ln308_reg_2650));

    internal_ap_ready_assign_proc : process(icmp_ln371_fu_1761_p2, ap_CS_fsm_state63)
    begin
        if (((icmp_ln371_fu_1761_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state63))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    intra_i_fu_1592_p2 <= std_logic_vector(unsigned(intra_i_0_i_i_i_reg_1086) + unsigned(ap_const_lv4_1));
    j_fu_1793_p2 <= std_logic_vector(unsigned(j_0_i_i_i_reg_1186) + unsigned(ap_const_lv13_1));
    k_fu_1777_p2 <= std_logic_vector(unsigned(ap_phi_mux_k_0_i_i_i_phi_fu_1156_p4) + unsigned(ap_const_lv11_1));
    lhs_V_fu_1662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_14_fu_1620_p3),17));

    low_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_blk_n <= low_threshold_empty_n;
        else 
            low_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    low_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_read <= ap_const_logic_1;
        else 
            low_threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln647_1_fu_1935_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_fu_1915_p3),to_integer(unsigned('0' & zext_ln647_1_fu_1931_p1(31-1 downto 0)))));
    lshr_ln647_2_fu_2017_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_2_fu_1997_p3),to_integer(unsigned('0' & zext_ln647_2_fu_2013_p1(31-1 downto 0)))));
    lshr_ln647_3_fu_2099_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_4_fu_2079_p3),to_integer(unsigned('0' & zext_ln647_3_fu_2095_p1(31-1 downto 0)))));
    lshr_ln647_4_fu_2181_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_6_fu_2161_p3),to_integer(unsigned('0' & zext_ln647_4_fu_2177_p1(31-1 downto 0)))));
    lshr_ln647_5_fu_2263_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_8_fu_2243_p3),to_integer(unsigned('0' & zext_ln647_5_fu_2259_p1(31-1 downto 0)))));
    lshr_ln647_6_fu_2345_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_10_fu_2325_p3),to_integer(unsigned('0' & zext_ln647_6_fu_2341_p1(31-1 downto 0)))));
    lshr_ln647_7_fu_2427_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_12_fu_2407_p3),to_integer(unsigned('0' & zext_ln647_7_fu_2423_p1(31-1 downto 0)))));
    lshr_ln647_fu_1853_p2 <= std_logic_vector(shift_right(unsigned(oBuff_V_q0),to_integer(unsigned('0' & zext_ln647_fu_1849_p1(31-1 downto 0)))));
    mul_ln271_fu_2470_p0 <= mul_ln271_fu_2470_p00(11 - 1 downto 0);
    mul_ln271_fu_2470_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_ln268_reg_2534),26));
    mul_ln271_fu_2470_p1 <= mul_ln271_fu_2470_p10(16 - 1 downto 0);
    mul_ln271_fu_2470_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bramsetsval_fu_1341_p2),26));
    mul_ln295_fu_2482_p0 <= zext_ln267_reg_2570(11 - 1 downto 0);
    mul_ln295_fu_2482_p1 <= mul_ln295_fu_2482_p10(26 - 1 downto 0);
    mul_ln295_fu_2482_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln295_fu_1411_p3),32));
    mul_ln327_fu_2476_p1 <= mul_ln327_fu_2476_p10(11 - 1 downto 0);
    mul_ln327_fu_2476_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2523),23));

    oBuff_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0, ap_enable_reg_pp3_iter0, zext_ln378_fu_1783_p1, zext_ln544_6_fu_1819_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            oBuff_V_address0 <= zext_ln544_6_fu_1819_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            oBuff_V_address0 <= zext_ln378_fu_1783_p1(6 - 1 downto 0);
        else 
            oBuff_V_address0 <= "XXXXXX";
        end if; 
    end process;


    oBuff_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_CS_fsm_pp3_stage0, ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            oBuff_V_ce0 <= ap_const_logic_1;
        else 
            oBuff_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    oBuff_V_we0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2900, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln374_reg_2900 = ap_const_lv1_0))) then 
            oBuff_V_we0 <= ap_const_logic_1;
        else 
            oBuff_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_dst1_data_V_din_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln348_reg_2757, grp_Canny_fu_1236_p_dst_mat_data_V_din, ap_CS_fsm_state2, op2_V_read_assign_4_fu_1710_p22, ap_block_pp1_stage0_01001)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            p_dst1_data_V_din <= op2_V_read_assign_4_fu_1710_p22;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_dst1_data_V_din <= grp_Canny_fu_1236_p_dst_mat_data_V_din;
        else 
            p_dst1_data_V_din <= grp_Canny_fu_1236_p_dst_mat_data_V_din;
        end if; 
    end process;


    p_dst1_data_V_i_blk_n_assign_proc : process(p_dst1_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln295_reg_2636, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln374_reg_2900)
    begin
        if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln374_reg_2900 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            p_dst1_data_V_i_blk_n <= p_dst1_data_V_empty_n;
        else 
            p_dst1_data_V_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst1_data_V_o_blk_n_assign_proc : process(p_dst1_data_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln348_reg_2757)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0))) then 
            p_dst1_data_V_o_blk_n <= p_dst1_data_V_full_n;
        else 
            p_dst1_data_V_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst1_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln295_reg_2636, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2900, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln374_reg_2900 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2636 = ap_const_lv1_0)))) then 
            p_dst1_data_V_read <= ap_const_logic_1;
        else 
            p_dst1_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_dst1_data_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln348_reg_2757, ap_block_pp1_stage0_11001, grp_Canny_fu_1236_p_dst_mat_data_V_write, ap_CS_fsm_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_reg_2757 = ap_const_lv1_0))) then 
            p_dst1_data_V_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_dst1_data_V_write <= grp_Canny_fu_1236_p_dst_mat_data_V_write;
        else 
            p_dst1_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_cols_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_blk_n <= p_dst2_cols_empty_n;
        else 
            p_dst2_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst2_cols_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_out_blk_n <= p_dst2_cols_out_full_n;
        else 
            p_dst2_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst2_cols_out_din <= p_dst2_cols_dout;

    p_dst2_cols_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_out_write <= ap_const_logic_1;
        else 
            p_dst2_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_cols_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_read <= ap_const_logic_1;
        else 
            p_dst2_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_data_V_blk_n_assign_proc : process(p_dst2_data_V_full_n, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, icmp_ln383_reg_2909)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2909 = ap_const_lv1_0))) then 
            p_dst2_data_V_blk_n <= p_dst2_data_V_full_n;
        else 
            p_dst2_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst2_data_V_din <= (((((((icmp_ln879_33_fu_2437_p2 & select_ln879_22_fu_2361_p3) & select_ln879_21_fu_2279_p3) & select_ln879_20_fu_2197_p3) & select_ln879_19_fu_2115_p3) & select_ln879_18_fu_2033_p3) & select_ln879_17_fu_1951_p3) & select_ln879_fu_1869_p3);

    p_dst2_data_V_write_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln383_reg_2909, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2909 = ap_const_lv1_0))) then 
            p_dst2_data_V_write <= ap_const_logic_1;
        else 
            p_dst2_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_rows_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_blk_n <= p_dst2_rows_empty_n;
        else 
            p_dst2_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst2_rows_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_rows_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_out_blk_n <= p_dst2_rows_out_full_n;
        else 
            p_dst2_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst2_rows_out_din <= p_dst2_rows_dout;

    p_dst2_rows_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_out_write <= ap_const_logic_1;
        else 
            p_dst2_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_rows_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_read <= ap_const_logic_1;
        else 
            p_dst2_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_blk_n <= p_src_cols_empty_n;
        else 
            p_src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_read <= ap_const_logic_1;
        else 
            p_src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_V_read_assign_proc : process(grp_Canny_fu_1236_p_src_mat_data_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_src_data_V_read <= grp_Canny_fu_1236_p_src_mat_data_V_read;
        else 
            p_src_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_blk_n <= p_src_rows_empty_n;
        else 
            p_src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_read <= ap_const_logic_1;
        else 
            p_src_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    pixel_V_fu_1805_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(ap_phi_mux_t_V_12_phi_fu_1179_p4));
    ram_row_depth_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2523),16));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_7_fu_1570_p2 <= std_logic_vector(unsigned(zext_ln215_fu_1567_p1) - unsigned(zext_ln327_reg_2600));
    ret_V_8_fu_1557_p2 <= std_logic_vector(unsigned(zext_ln327_reg_2600) + unsigned(zext_ln215_3_fu_1554_p1));
    ret_V_fu_1670_p2 <= std_logic_vector(unsigned(lhs_V_fu_1662_p1) + unsigned(rhs_V_fu_1666_p1));
    rhs_V_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln356_fu_1646_p3),17));
    select_ln281_fu_1397_p3 <= 
        ap_const_lv3_0 when (icmp_ln281_fu_1391_p2(0) = '1') else 
        slice_0_i_i_i_reg_1031;
    select_ln295_fu_1411_p3 <= 
        zext_ln267_1_reg_2557 when (icmp_ln283_fu_1405_p2(0) = '1') else 
        mul_ln271_reg_2580;
    select_ln303_1_fu_1460_p3 <= 
        idx2_V_fu_1446_p2 when (icmp_ln879_fu_1441_p2(0) = '1') else 
        ap_phi_mux_t_V_phi_fu_1068_p4;
    select_ln308_1_fu_1486_p3 <= 
        ap_const_lv16_1 when (icmp_ln879_18_fu_1468_p2(0) = '1') else 
        select_ln303_1_fu_1460_p3;
    select_ln308_fu_1478_p3 <= 
        dep_V_fu_1473_p2 when (icmp_ln879_18_fu_1468_p2(0) = '1') else 
        ap_phi_mux_p_0259_0_i_i_i_phi_fu_1057_p4;
    select_ln352_1_fu_1628_p3 <= 
        idx2_V_1_fu_1614_p2 when (icmp_ln879_25_fu_1609_p2(0) = '1') else 
        ap_phi_mux_t_V_13_phi_fu_1123_p4;
    select_ln356_1_fu_1654_p3 <= 
        ap_const_lv16_1 when (icmp_ln879_26_fu_1636_p2(0) = '1') else 
        select_ln352_1_fu_1628_p3;
    select_ln356_fu_1646_p3 <= 
        dep_V_1_fu_1641_p2 when (icmp_ln879_26_fu_1636_p2(0) = '1') else 
        ap_phi_mux_p_0259_2_i_i_i_phi_fu_1112_p4;
    select_ln386_1_fu_1838_p3 <= 
        ap_const_lv32_0 when (icmp_ln879_19_reg_2918(0) = '1') else 
        bit_0_i_i_i_reg_1197;
    select_ln386_fu_1811_p3 <= 
        pixel_V_fu_1805_p2 when (icmp_ln879_19_fu_1799_p2(0) = '1') else 
        ap_phi_mux_t_V_12_phi_fu_1179_p4;
    select_ln647_10_fu_2325_p3 <= 
        tmp_25_fu_2309_p4 when (icmp_ln647_5_fu_2299_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_11_fu_2333_p3 <= 
        sub_ln647_5_fu_2319_p2 when (icmp_ln647_5_fu_2299_p2(0) = '1') else 
        trunc_ln647_7_fu_2305_p1;
    select_ln647_12_fu_2407_p3 <= 
        tmp_26_fu_2391_p4 when (icmp_ln647_6_fu_2381_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_13_fu_2415_p3 <= 
        sub_ln647_6_fu_2401_p2 when (icmp_ln647_6_fu_2381_p2(0) = '1') else 
        trunc_ln647_8_fu_2387_p1;
    select_ln647_1_fu_1923_p3 <= 
        sub_ln647_fu_1909_p2 when (icmp_ln647_fu_1889_p2(0) = '1') else 
        trunc_ln647_2_fu_1895_p1;
    select_ln647_2_fu_1997_p3 <= 
        tmp_21_fu_1981_p4 when (icmp_ln647_1_fu_1971_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_3_fu_2005_p3 <= 
        sub_ln647_1_fu_1991_p2 when (icmp_ln647_1_fu_1971_p2(0) = '1') else 
        trunc_ln647_3_fu_1977_p1;
    select_ln647_4_fu_2079_p3 <= 
        tmp_22_fu_2063_p4 when (icmp_ln647_2_fu_2053_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_5_fu_2087_p3 <= 
        sub_ln647_2_fu_2073_p2 when (icmp_ln647_2_fu_2053_p2(0) = '1') else 
        trunc_ln647_4_fu_2059_p1;
    select_ln647_6_fu_2161_p3 <= 
        tmp_23_fu_2145_p4 when (icmp_ln647_3_fu_2135_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_7_fu_2169_p3 <= 
        sub_ln647_3_fu_2155_p2 when (icmp_ln647_3_fu_2135_p2(0) = '1') else 
        trunc_ln647_5_fu_2141_p1;
    select_ln647_8_fu_2243_p3 <= 
        tmp_24_fu_2227_p4 when (icmp_ln647_4_fu_2217_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_9_fu_2251_p3 <= 
        sub_ln647_4_fu_2237_p2 when (icmp_ln647_4_fu_2217_p2(0) = '1') else 
        trunc_ln647_6_fu_2223_p1;
    select_ln647_fu_1915_p3 <= 
        tmp_fu_1899_p4 when (icmp_ln647_fu_1889_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln879_17_fu_1951_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_24_fu_1945_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_18_fu_2033_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_28_fu_2027_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_19_fu_2115_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_29_fu_2109_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_20_fu_2197_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_30_fu_2191_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_21_fu_2279_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_31_fu_2273_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_22_fu_2361_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_32_fu_2355_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_fu_1869_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_20_fu_1863_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln544_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_7_fu_1570_p2),64));

    slice_fu_1756_p2 <= std_logic_vector(unsigned(select_ln281_reg_2620) + unsigned(ap_const_lv3_1));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln647_1_fu_1991_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_3_fu_1977_p1));
    sub_ln647_2_fu_2073_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_4_fu_2059_p1));
    sub_ln647_3_fu_2155_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_5_fu_2141_p1));
    sub_ln647_4_fu_2237_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_6_fu_2223_p1));
    sub_ln647_5_fu_2319_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_7_fu_2305_p1));
    sub_ln647_6_fu_2401_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_8_fu_2387_p1));
    sub_ln647_fu_1909_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_2_fu_1895_p1));
    t_V_14_fu_1620_p3 <= 
        ap_const_lv16_0 when (icmp_ln879_25_fu_1609_p2(0) = '1') else 
        p_0331_2_i_i_i_reg_1097;
    t_V_15_fu_1452_p3 <= 
        ap_const_lv16_0 when (icmp_ln879_fu_1441_p2(0) = '1') else 
        p_0331_0_i_i_i_reg_1042;
    
    tmp_21_fu_1981_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_21_fu_1981_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_21_fu_1981_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_21_fu_1981_p4_i) := oBuff_V_q0(64-1-tmp_21_fu_1981_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_21_fu_1981_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_22_fu_2063_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_22_fu_2063_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_22_fu_2063_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_22_fu_2063_p4_i) := oBuff_V_q0(64-1-tmp_22_fu_2063_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_22_fu_2063_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_23_fu_2145_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_23_fu_2145_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_23_fu_2145_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_23_fu_2145_p4_i) := oBuff_V_q0(64-1-tmp_23_fu_2145_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_23_fu_2145_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_24_fu_2227_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_24_fu_2227_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_24_fu_2227_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_24_fu_2227_p4_i) := oBuff_V_q0(64-1-tmp_24_fu_2227_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_24_fu_2227_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_25_fu_2309_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_25_fu_2309_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_25_fu_2309_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_25_fu_2309_p4_i) := oBuff_V_q0(64-1-tmp_25_fu_2309_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_25_fu_2309_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_26_fu_2391_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_26_fu_2391_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_26_fu_2391_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_26_fu_2391_p4_i) := oBuff_V_q0(64-1-tmp_26_fu_2391_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_26_fu_2391_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_fu_1899_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_fu_1899_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_fu_1899_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_fu_1899_p4_i) := oBuff_V_q0(64-1-tmp_fu_1899_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_fu_1899_p4 <= resvalue(64-1 downto 0);
    end process;

    trunc_ln308_fu_1356_p1 <= bramsetsval_fu_1341_p2(5 - 1 downto 0);
    trunc_ln321_7_fu_1700_p1 <= select_ln356_1_fu_1654_p3(5 - 1 downto 0);
    trunc_ln321_fu_1494_p1 <= select_ln308_1_fu_1486_p3(5 - 1 downto 0);
    trunc_ln364_1_fu_2023_p1 <= lshr_ln647_2_fu_2017_p2(2 - 1 downto 0);
    trunc_ln364_2_fu_2105_p1 <= lshr_ln647_3_fu_2099_p2(2 - 1 downto 0);
    trunc_ln364_3_fu_2187_p1 <= lshr_ln647_4_fu_2181_p2(2 - 1 downto 0);
    trunc_ln364_4_fu_2269_p1 <= lshr_ln647_5_fu_2263_p2(2 - 1 downto 0);
    trunc_ln364_5_fu_2351_p1 <= lshr_ln647_6_fu_2345_p2(2 - 1 downto 0);
    trunc_ln364_6_fu_2433_p1 <= lshr_ln647_7_fu_2427_p2(2 - 1 downto 0);
    trunc_ln364_fu_1941_p1 <= lshr_ln647_1_fu_1935_p2(2 - 1 downto 0);
    trunc_ln412_fu_1252_p1 <= p_dst2_rows_dout(16 - 1 downto 0);
    trunc_ln647_1_fu_1859_p1 <= lshr_ln647_fu_1853_p2(2 - 1 downto 0);
    trunc_ln647_2_fu_1895_p1 <= add_ln392_1_fu_1883_p2(7 - 1 downto 0);
    trunc_ln647_3_fu_1977_p1 <= add_ln392_3_fu_1965_p2(7 - 1 downto 0);
    trunc_ln647_4_fu_2059_p1 <= add_ln392_5_fu_2047_p2(7 - 1 downto 0);
    trunc_ln647_5_fu_2141_p1 <= add_ln392_7_fu_2129_p2(7 - 1 downto 0);
    trunc_ln647_6_fu_2223_p1 <= add_ln392_9_fu_2211_p2(7 - 1 downto 0);
    trunc_ln647_7_fu_2305_p1 <= add_ln392_11_fu_2293_p2(7 - 1 downto 0);
    trunc_ln647_8_fu_2387_p1 <= add_ln392_13_fu_2375_p2(7 - 1 downto 0);
    trunc_ln647_fu_1845_p1 <= select_ln386_1_fu_1838_p3(6 - 1 downto 0);
    zext_ln215_3_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_reg_2686),17));
    zext_ln215_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_reg_2686),17));
    zext_ln266_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(slice_h_reg_2517),15));
    zext_ln267_1_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(slice_h_reg_2517),26));
    zext_ln267_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2523),32));
    zext_ln268_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1276_p2),15));
    zext_ln269_fu_1307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1301_p2),16));
    zext_ln270_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_ln268_reg_2534),12));
    zext_ln327_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2523),17));
    zext_ln378_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_i_i_i_reg_1152),64));
    zext_ln544_6_fu_1819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln386_fu_1811_p3),64));
    zext_ln544_7_fu_1676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_1670_p2),64));
    zext_ln544_8_fu_1562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_8_fu_1557_p2),64));
    zext_ln544_fu_1508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_fu_1504_p2),64));
    zext_ln647_1_fu_1931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_1_fu_1923_p3),64));
    zext_ln647_2_fu_2013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_3_fu_2005_p3),64));
    zext_ln647_3_fu_2095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_5_fu_2087_p3),64));
    zext_ln647_4_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_7_fu_2169_p3),64));
    zext_ln647_5_fu_2259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_9_fu_2251_p3),64));
    zext_ln647_6_fu_2341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_11_fu_2333_p3),64));
    zext_ln647_7_fu_2423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_13_fu_2415_p3),64));
    zext_ln647_fu_1849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_fu_1845_p1),64));
    zext_ln879_fu_1541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln308_reg_2650),23));
end behav;
