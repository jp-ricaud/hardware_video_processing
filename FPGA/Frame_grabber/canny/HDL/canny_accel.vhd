-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity canny_accel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_rows_empty_n : IN STD_LOGIC;
    p_src_rows_read : OUT STD_LOGIC;
    p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_empty_n : IN STD_LOGIC;
    p_src_cols_read : OUT STD_LOGIC;
    p_src_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_V_empty_n : IN STD_LOGIC;
    p_src_data_V_read : OUT STD_LOGIC;
    p_dst1_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    p_dst1_data_V_empty_n : IN STD_LOGIC;
    p_dst1_data_V_read : OUT STD_LOGIC;
    p_dst1_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    p_dst1_data_V_full_n : IN STD_LOGIC;
    p_dst1_data_V_write : OUT STD_LOGIC;
    p_dst2_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_rows_empty_n : IN STD_LOGIC;
    p_dst2_rows_read : OUT STD_LOGIC;
    p_dst2_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_cols_empty_n : IN STD_LOGIC;
    p_dst2_cols_read : OUT STD_LOGIC;
    p_dst2_data_V_din : OUT STD_LOGIC_VECTOR (56 downto 0);
    p_dst2_data_V_full_n : IN STD_LOGIC;
    p_dst2_data_V_write : OUT STD_LOGIC;
    low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    low_threshold_empty_n : IN STD_LOGIC;
    low_threshold_read : OUT STD_LOGIC;
    high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    high_threshold_empty_n : IN STD_LOGIC;
    high_threshold_read : OUT STD_LOGIC;
    p_dst2_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_rows_out_full_n : IN STD_LOGIC;
    p_dst2_rows_out_write : OUT STD_LOGIC;
    p_dst2_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_dst2_cols_out_full_n : IN STD_LOGIC;
    p_dst2_cols_out_write : OUT STD_LOGIC );
end;


architecture behav of canny_accel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (68 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (68 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (68 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (68 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (68 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (68 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (68 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (68 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (68 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (68 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (68 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (68 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv15_9 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001001";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_rows_blk_n : STD_LOGIC;
    signal p_src_cols_blk_n : STD_LOGIC;
    signal p_dst1_data_V_i_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln295_reg_2617 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst1_data_V_o_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln348_reg_2727 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln348_reg_2727_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal icmp_ln374_reg_2881 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst2_rows_blk_n : STD_LOGIC;
    signal p_dst2_cols_blk_n : STD_LOGIC;
    signal p_dst2_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal icmp_ln383_reg_2890 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln383_reg_2890_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal low_threshold_blk_n : STD_LOGIC;
    signal high_threshold_blk_n : STD_LOGIC;
    signal p_dst2_rows_out_blk_n : STD_LOGIC;
    signal p_dst2_cols_out_blk_n : STD_LOGIC;
    signal p_0331_0_i_i_i_reg_1021 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0259_0_i_i_i_reg_1032 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_reg_1043 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_0_i_i_i_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0331_2_i_i_i_reg_1076 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0259_2_i_i_i_reg_1087 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_13_reg_1098 : STD_LOGIC_VECTOR (15 downto 0);
    signal i6_0_i_i_i_reg_1109 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_0_i_i_i_reg_1131 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_0_i_i_i_reg_1131_pp2_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state72_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state73_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state74_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal p_0301_0_i_i_i_reg_1143 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_12_reg_1154 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_0_i_i_i_reg_1165 : STD_LOGIC_VECTOR (12 downto 0);
    signal bit_0_i_i_i_reg_1176 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1230 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state59_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_1230_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_dst2_cols_read_reg_2450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal low_threshold_read_reg_2455 : STD_LOGIC_VECTOR (7 downto 0);
    signal high_threshold_read_reg_2460 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_src_rows_read_reg_2465 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_src_cols_read_reg_2470 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln412_fu_1263_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln412_reg_2475 : STD_LOGIC_VECTOR (15 downto 0);
    signal slice_h_reg_2480 : STD_LOGIC_VECTOR (13 downto 0);
    signal op_assign_reg_2486 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1287_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal udiv_ln268_reg_2497 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal zext_ln268_fu_1295_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_fu_1310_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal udiv_ln269_reg_2515 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_ln269_2_fu_1319_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln269_2_reg_2520 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal bramsetsval_fu_1334_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bramsetsval_reg_2526 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal trunc_ln308_fu_1339_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln308_reg_2534 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln327_fu_1343_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln327_reg_2538 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln267_1_fu_1349_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln267_1_reg_2543 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal ram_row_depth_fu_1352_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ram_row_depth_reg_2548 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln267_fu_1355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln267_reg_2556 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln271_fu_2433_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln271_reg_2561 : STD_LOGIC_VECTOR (25 downto 0);
    signal bramtotal_fu_1367_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bramtotal_reg_2566 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln308_fu_1372_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln308_reg_2571 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln327_fu_1377_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln327_reg_2577 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln327_fu_2439_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal mul_ln327_reg_2583 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln275_fu_1389_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln275_reg_2591 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal select_ln281_fu_1401_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln281_reg_2596 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln275_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln295_fu_1415_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal select_ln295_reg_2601 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_3_reg_2606 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln295_fu_2445_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln295_reg_2611 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal icmp_ln295_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln295_reg_2617_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1438_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal t_V_15_fu_1455_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_15_reg_2626 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_fu_1481_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_reg_2631 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_1_fu_1489_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln308_1_reg_2639 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln321_fu_1497_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_reg_2646 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_reg_2646_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal idx1_V_1_fu_1501_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_V_fu_1507_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_V_reg_2655 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_V_reg_2655_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_21_fu_1511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_21_reg_2662 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_21_reg_2662_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_23_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_23_reg_2666 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_23_reg_2666_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_27_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_27_reg_2670 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_27_reg_2670_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_22_fu_1528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_22_reg_2674 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_22_reg_2674_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iBuff_0_V_addr_reg_2678 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_1_V_addr_reg_2683 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_4_V_addr_reg_2688 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_7_V_addr_reg_2693 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_10_V_addr_reg_2698 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_13_V_addr_reg_2703 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_16_V_addr_reg_2708 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_19_V_addr_reg_2713 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln340_fu_1588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal intra_i_fu_1594_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal intra_i_reg_2722 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln348_fu_1600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state66_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state67_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state68_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state69_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln348_reg_2727_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal t_V_14_fu_1622_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_14_reg_2736 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_fu_1648_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_reg_2741 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_1_fu_1656_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln356_1_reg_2747 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln321_7_fu_1664_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_7_reg_2752 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln321_7_reg_2752_pp1_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal idx1_V_fu_1668_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal op2_V_read_assign_4_fu_1710_p22 : STD_LOGIC_VECTOR (63 downto 0);
    signal op2_V_read_assign_4_reg_2862 : STD_LOGIC_VECTOR (63 downto 0);
    signal slice_fu_1755_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal icmp_ln371_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ii_fu_1765_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ii_reg_2876 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln374_fu_1771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln374_reg_2881_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_1776_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_reg_2885 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal icmp_ln383_fu_1787_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state76_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state77_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state78_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal j_fu_1792_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal select_ln386_fu_1810_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln386_reg_2899 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln386_1_fu_1818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln386_1_reg_2904 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_fu_1831_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_reg_2914 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_1_fu_1837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_1_reg_2919 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_2_fu_1843_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_2_reg_2924 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_2_fu_1847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_2_reg_2930 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_3_fu_1853_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_3_reg_2935 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_3_fu_1859_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_3_reg_2940 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_4_fu_1863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_4_reg_2946 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_5_fu_1869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_5_reg_2951 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_4_fu_1875_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_4_reg_2956 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_6_fu_1879_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_6_reg_2962 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_7_fu_1885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_7_reg_2967 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_5_fu_1891_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_5_reg_2972 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_8_fu_1895_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_8_reg_2978 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_9_fu_1901_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_9_reg_2983 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_6_fu_1907_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_6_reg_2988 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_10_fu_1911_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_10_reg_2994 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_11_fu_1917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_11_reg_2999 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_7_fu_1923_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_7_reg_3004 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln392_12_fu_1927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_12_reg_3010 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_13_fu_1933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln392_13_reg_3015 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln647_8_fu_1939_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln647_8_reg_3020 : STD_LOGIC_VECTOR (6 downto 0);
    signal id_V_fu_1949_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal bit_fu_1957_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_20_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_20_reg_3036 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_24_fu_2034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_24_reg_3041 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_28_fu_2088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_28_reg_3046 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_29_fu_2142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_29_reg_3051 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_30_fu_2196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_30_reg_3056 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_31_fu_2250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_31_reg_3061 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_32_fu_2304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_32_reg_3066 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_33_fu_2358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_33_reg_3071 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state59 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state66 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state72 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state76 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal iBuff_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_0_V_ce0 : STD_LOGIC;
    signal iBuff_0_V_we0 : STD_LOGIC;
    signal iBuff_0_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_0_V_ce1 : STD_LOGIC;
    signal iBuff_0_V_we1 : STD_LOGIC;
    signal iBuff_0_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_1_V_ce0 : STD_LOGIC;
    signal iBuff_1_V_we0 : STD_LOGIC;
    signal iBuff_1_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_1_V_ce1 : STD_LOGIC;
    signal iBuff_1_V_we1 : STD_LOGIC;
    signal iBuff_1_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_2_V_ce0 : STD_LOGIC;
    signal iBuff_2_V_we0 : STD_LOGIC;
    signal iBuff_2_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_2_V_ce1 : STD_LOGIC;
    signal iBuff_2_V_we1 : STD_LOGIC;
    signal iBuff_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_3_V_ce0 : STD_LOGIC;
    signal iBuff_3_V_we0 : STD_LOGIC;
    signal iBuff_3_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_3_V_ce1 : STD_LOGIC;
    signal iBuff_3_V_we1 : STD_LOGIC;
    signal iBuff_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_4_V_ce0 : STD_LOGIC;
    signal iBuff_4_V_we0 : STD_LOGIC;
    signal iBuff_4_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_4_V_ce1 : STD_LOGIC;
    signal iBuff_4_V_we1 : STD_LOGIC;
    signal iBuff_4_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_5_V_ce0 : STD_LOGIC;
    signal iBuff_5_V_we0 : STD_LOGIC;
    signal iBuff_5_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_5_V_ce1 : STD_LOGIC;
    signal iBuff_5_V_we1 : STD_LOGIC;
    signal iBuff_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_6_V_ce0 : STD_LOGIC;
    signal iBuff_6_V_we0 : STD_LOGIC;
    signal iBuff_6_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_6_V_ce1 : STD_LOGIC;
    signal iBuff_6_V_we1 : STD_LOGIC;
    signal iBuff_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_7_V_ce0 : STD_LOGIC;
    signal iBuff_7_V_we0 : STD_LOGIC;
    signal iBuff_7_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_7_V_ce1 : STD_LOGIC;
    signal iBuff_7_V_we1 : STD_LOGIC;
    signal iBuff_7_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_8_V_ce0 : STD_LOGIC;
    signal iBuff_8_V_we0 : STD_LOGIC;
    signal iBuff_8_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_8_V_ce1 : STD_LOGIC;
    signal iBuff_8_V_we1 : STD_LOGIC;
    signal iBuff_9_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_9_V_ce0 : STD_LOGIC;
    signal iBuff_9_V_we0 : STD_LOGIC;
    signal iBuff_9_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_9_V_ce1 : STD_LOGIC;
    signal iBuff_9_V_we1 : STD_LOGIC;
    signal iBuff_10_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_10_V_ce0 : STD_LOGIC;
    signal iBuff_10_V_we0 : STD_LOGIC;
    signal iBuff_10_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_10_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_10_V_ce1 : STD_LOGIC;
    signal iBuff_10_V_we1 : STD_LOGIC;
    signal iBuff_10_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_11_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_11_V_ce0 : STD_LOGIC;
    signal iBuff_11_V_we0 : STD_LOGIC;
    signal iBuff_11_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_11_V_ce1 : STD_LOGIC;
    signal iBuff_11_V_we1 : STD_LOGIC;
    signal iBuff_12_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_12_V_ce0 : STD_LOGIC;
    signal iBuff_12_V_we0 : STD_LOGIC;
    signal iBuff_12_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_12_V_ce1 : STD_LOGIC;
    signal iBuff_12_V_we1 : STD_LOGIC;
    signal iBuff_13_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_13_V_ce0 : STD_LOGIC;
    signal iBuff_13_V_we0 : STD_LOGIC;
    signal iBuff_13_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_13_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_13_V_ce1 : STD_LOGIC;
    signal iBuff_13_V_we1 : STD_LOGIC;
    signal iBuff_13_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_14_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_14_V_ce0 : STD_LOGIC;
    signal iBuff_14_V_we0 : STD_LOGIC;
    signal iBuff_14_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_14_V_ce1 : STD_LOGIC;
    signal iBuff_14_V_we1 : STD_LOGIC;
    signal iBuff_15_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_15_V_ce0 : STD_LOGIC;
    signal iBuff_15_V_we0 : STD_LOGIC;
    signal iBuff_15_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_15_V_ce1 : STD_LOGIC;
    signal iBuff_15_V_we1 : STD_LOGIC;
    signal iBuff_16_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_16_V_ce0 : STD_LOGIC;
    signal iBuff_16_V_we0 : STD_LOGIC;
    signal iBuff_16_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_16_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_16_V_ce1 : STD_LOGIC;
    signal iBuff_16_V_we1 : STD_LOGIC;
    signal iBuff_16_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_17_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_17_V_ce0 : STD_LOGIC;
    signal iBuff_17_V_we0 : STD_LOGIC;
    signal iBuff_17_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_17_V_ce1 : STD_LOGIC;
    signal iBuff_17_V_we1 : STD_LOGIC;
    signal iBuff_18_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_18_V_ce0 : STD_LOGIC;
    signal iBuff_18_V_we0 : STD_LOGIC;
    signal iBuff_18_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_18_V_ce1 : STD_LOGIC;
    signal iBuff_18_V_we1 : STD_LOGIC;
    signal iBuff_19_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_19_V_ce0 : STD_LOGIC;
    signal iBuff_19_V_we0 : STD_LOGIC;
    signal iBuff_19_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal iBuff_19_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal iBuff_19_V_ce1 : STD_LOGIC;
    signal iBuff_19_V_we1 : STD_LOGIC;
    signal iBuff_19_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal oBuff_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal oBuff_V_ce0 : STD_LOGIC;
    signal oBuff_V_we0 : STD_LOGIC;
    signal oBuff_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_ap_start : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_ap_done : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_ap_idle : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_ap_ready : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce0 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_we1 : STD_LOGIC;
    signal grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Canny_fu_1214_ap_start : STD_LOGIC;
    signal grp_Canny_fu_1214_ap_done : STD_LOGIC;
    signal grp_Canny_fu_1214_ap_idle : STD_LOGIC;
    signal grp_Canny_fu_1214_ap_ready : STD_LOGIC;
    signal grp_Canny_fu_1214_p_src_mat_data_V_read : STD_LOGIC;
    signal grp_Canny_fu_1214_p_dst_mat_data_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Canny_fu_1214_p_dst_mat_data_V_write : STD_LOGIC;
    signal indvar_flatten_reg_999 : STD_LOGIC_VECTOR (3 downto 0);
    signal slice_0_i_i_i_reg_1010 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_p_0259_0_i_i_i_phi_fu_1036_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_t_V_phi_fu_1047_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal intra_i_0_i_i_i_reg_1065 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_phi_mux_p_0259_2_i_i_i_phi_fu_1091_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_t_V_13_phi_fu_1102_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ii_0_i_i_i_reg_1120 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal ap_phi_mux_k_0_i_i_i_phi_fu_1135_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_t_V_12_phi_fu_1158_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_TopDown_20_6_1024_s_fu_1187_ap_start_reg : STD_LOGIC := '0';
    signal grp_Canny_fu_1214_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call40 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln544_fu_1533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_8_fu_1564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln544_fu_1577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_7_fu_1686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln378_fu_1782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_6_fu_1826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal zext_ln266_fu_1292_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln269_fu_1298_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1310_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1310_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln269_fu_1316_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1325_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1325_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1325_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln270_fu_1331_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln281_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln283_fu_1409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx2_V_fu_1449_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln303_1_fu_1463_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_18_fu_1471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dep_V_fu_1476_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln879_fu_1520_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln215_3_fu_1556_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_8_fu_1559_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln215_fu_1569_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_7_fu_1572_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln879_25_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx2_V_1_fu_1616_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln352_1_fu_1630_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_26_fu_1638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dep_V_1_fu_1643_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_1674_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_V_fu_1677_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_fu_1680_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln879_19_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pixel_V_fu_1804_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln700_fu_1943_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln647_fu_1963_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln647_fu_1966_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_fu_1970_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln647_1_fu_1976_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_fu_1986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1990_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_fu_2000_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_1_fu_2013_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_fu_2005_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_1_fu_2020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_1_fu_2024_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_fu_2030_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_1_fu_2040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_2044_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_1_fu_2054_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_3_fu_2067_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_2_fu_2059_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_2_fu_2074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_2_fu_2078_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_1_fu_2084_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_2_fu_2094_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_2098_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_2_fu_2108_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_5_fu_2121_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_4_fu_2113_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_3_fu_2128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_3_fu_2132_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_2_fu_2138_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_3_fu_2148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_2152_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_3_fu_2162_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_7_fu_2175_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_6_fu_2167_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_4_fu_2182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_4_fu_2186_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_3_fu_2192_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_4_fu_2202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_2206_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_4_fu_2216_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_9_fu_2229_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_8_fu_2221_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_5_fu_2236_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_5_fu_2240_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_4_fu_2246_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_5_fu_2256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_2260_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_5_fu_2270_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_11_fu_2283_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_10_fu_2275_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_6_fu_2290_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_6_fu_2294_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_5_fu_2300_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln647_6_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_2314_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln647_6_fu_2324_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_13_fu_2337_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln647_12_fu_2329_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln647_7_fu_2344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln647_7_fu_2348_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln364_6_fu_2354_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_22_fu_2406_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_21_fu_2399_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_20_fu_2392_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_19_fu_2385_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_18_fu_2378_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_17_fu_2371_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln879_fu_2364_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln271_fu_2433_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln271_fu_2433_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln327_fu_2439_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln295_fu_2445_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln295_fu_2445_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1287_ap_start : STD_LOGIC;
    signal grp_fu_1287_ap_done : STD_LOGIC;
    signal grp_fu_1287_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_1310_ap_start : STD_LOGIC;
    signal grp_fu_1310_ap_done : STD_LOGIC;
    signal grp_fu_1325_ap_start : STD_LOGIC;
    signal grp_fu_1325_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (68 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_block_pp1 : BOOLEAN;
    signal ap_block_pp2 : BOOLEAN;
    signal ap_block_pp3 : BOOLEAN;
    signal ap_enable_operation_308 : BOOLEAN;
    signal ap_enable_state61_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op332_store_state62 : BOOLEAN;
    signal ap_enable_operation_332 : BOOLEAN;
    signal ap_enable_state62_pp0_iter3_stage0 : BOOLEAN;
    signal ap_predicate_op356_store_state62 : BOOLEAN;
    signal ap_enable_operation_356 : BOOLEAN;
    signal ap_enable_operation_311 : BOOLEAN;
    signal ap_predicate_op334_store_state62 : BOOLEAN;
    signal ap_enable_operation_334 : BOOLEAN;
    signal ap_predicate_op358_store_state62 : BOOLEAN;
    signal ap_enable_operation_358 : BOOLEAN;
    signal ap_enable_operation_314 : BOOLEAN;
    signal ap_predicate_op336_store_state62 : BOOLEAN;
    signal ap_enable_operation_336 : BOOLEAN;
    signal ap_predicate_op360_store_state62 : BOOLEAN;
    signal ap_enable_operation_360 : BOOLEAN;
    signal ap_enable_operation_317 : BOOLEAN;
    signal ap_predicate_op338_store_state62 : BOOLEAN;
    signal ap_enable_operation_338 : BOOLEAN;
    signal ap_predicate_op362_store_state62 : BOOLEAN;
    signal ap_enable_operation_362 : BOOLEAN;
    signal ap_enable_operation_320 : BOOLEAN;
    signal ap_predicate_op340_store_state62 : BOOLEAN;
    signal ap_enable_operation_340 : BOOLEAN;
    signal ap_predicate_op364_store_state62 : BOOLEAN;
    signal ap_enable_operation_364 : BOOLEAN;
    signal ap_enable_operation_323 : BOOLEAN;
    signal ap_predicate_op342_store_state62 : BOOLEAN;
    signal ap_enable_operation_342 : BOOLEAN;
    signal ap_predicate_op366_store_state62 : BOOLEAN;
    signal ap_enable_operation_366 : BOOLEAN;
    signal ap_enable_operation_324 : BOOLEAN;
    signal ap_predicate_op330_store_state62 : BOOLEAN;
    signal ap_enable_operation_330 : BOOLEAN;
    signal ap_predicate_op370_store_state62 : BOOLEAN;
    signal ap_enable_operation_370 : BOOLEAN;
    signal ap_predicate_op325_store_state61 : BOOLEAN;
    signal ap_enable_operation_325 : BOOLEAN;
    signal ap_predicate_op344_store_state62 : BOOLEAN;
    signal ap_enable_operation_344 : BOOLEAN;
    signal ap_predicate_op368_store_state62 : BOOLEAN;
    signal ap_enable_operation_368 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal mul_ln271_fu_2433_p00 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln271_fu_2433_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln295_fu_2445_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln327_fu_2439_p10 : STD_LOGIC_VECTOR (22 downto 0);

    component TopDown_20_6_1024_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        iBuff_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_0_V_ce0 : OUT STD_LOGIC;
        iBuff_0_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_0_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_0_V_ce1 : OUT STD_LOGIC;
        iBuff_0_V_we1 : OUT STD_LOGIC;
        iBuff_0_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_1_V_ce0 : OUT STD_LOGIC;
        iBuff_1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_1_V_ce1 : OUT STD_LOGIC;
        iBuff_1_V_we1 : OUT STD_LOGIC;
        iBuff_1_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_2_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_2_V_ce0 : OUT STD_LOGIC;
        iBuff_2_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_2_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_2_V_ce1 : OUT STD_LOGIC;
        iBuff_2_V_we1 : OUT STD_LOGIC;
        iBuff_2_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_3_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_3_V_ce0 : OUT STD_LOGIC;
        iBuff_3_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_3_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_3_V_ce1 : OUT STD_LOGIC;
        iBuff_3_V_we1 : OUT STD_LOGIC;
        iBuff_3_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_4_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_4_V_ce0 : OUT STD_LOGIC;
        iBuff_4_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_4_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_4_V_ce1 : OUT STD_LOGIC;
        iBuff_4_V_we1 : OUT STD_LOGIC;
        iBuff_4_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_5_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_5_V_ce0 : OUT STD_LOGIC;
        iBuff_5_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_5_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_5_V_ce1 : OUT STD_LOGIC;
        iBuff_5_V_we1 : OUT STD_LOGIC;
        iBuff_5_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_6_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_6_V_ce0 : OUT STD_LOGIC;
        iBuff_6_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_6_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_6_V_ce1 : OUT STD_LOGIC;
        iBuff_6_V_we1 : OUT STD_LOGIC;
        iBuff_6_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_7_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_7_V_ce0 : OUT STD_LOGIC;
        iBuff_7_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_7_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_7_V_ce1 : OUT STD_LOGIC;
        iBuff_7_V_we1 : OUT STD_LOGIC;
        iBuff_7_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_8_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_8_V_ce0 : OUT STD_LOGIC;
        iBuff_8_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_8_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_8_V_ce1 : OUT STD_LOGIC;
        iBuff_8_V_we1 : OUT STD_LOGIC;
        iBuff_8_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_9_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_9_V_ce0 : OUT STD_LOGIC;
        iBuff_9_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_9_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_9_V_ce1 : OUT STD_LOGIC;
        iBuff_9_V_we1 : OUT STD_LOGIC;
        iBuff_9_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_10_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_10_V_ce0 : OUT STD_LOGIC;
        iBuff_10_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_10_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_10_V_ce1 : OUT STD_LOGIC;
        iBuff_10_V_we1 : OUT STD_LOGIC;
        iBuff_10_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_11_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_11_V_ce0 : OUT STD_LOGIC;
        iBuff_11_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_11_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_11_V_ce1 : OUT STD_LOGIC;
        iBuff_11_V_we1 : OUT STD_LOGIC;
        iBuff_11_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_12_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_12_V_ce0 : OUT STD_LOGIC;
        iBuff_12_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_12_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_12_V_ce1 : OUT STD_LOGIC;
        iBuff_12_V_we1 : OUT STD_LOGIC;
        iBuff_12_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_13_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_13_V_ce0 : OUT STD_LOGIC;
        iBuff_13_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_13_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_13_V_ce1 : OUT STD_LOGIC;
        iBuff_13_V_we1 : OUT STD_LOGIC;
        iBuff_13_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_14_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_14_V_ce0 : OUT STD_LOGIC;
        iBuff_14_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_14_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_14_V_ce1 : OUT STD_LOGIC;
        iBuff_14_V_we1 : OUT STD_LOGIC;
        iBuff_14_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_15_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_15_V_ce0 : OUT STD_LOGIC;
        iBuff_15_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_15_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_15_V_ce1 : OUT STD_LOGIC;
        iBuff_15_V_we1 : OUT STD_LOGIC;
        iBuff_15_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_16_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_16_V_ce0 : OUT STD_LOGIC;
        iBuff_16_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_16_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_16_V_ce1 : OUT STD_LOGIC;
        iBuff_16_V_we1 : OUT STD_LOGIC;
        iBuff_16_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_17_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_17_V_ce0 : OUT STD_LOGIC;
        iBuff_17_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_17_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_17_V_ce1 : OUT STD_LOGIC;
        iBuff_17_V_we1 : OUT STD_LOGIC;
        iBuff_17_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_18_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_18_V_ce0 : OUT STD_LOGIC;
        iBuff_18_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_18_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_18_V_ce1 : OUT STD_LOGIC;
        iBuff_18_V_we1 : OUT STD_LOGIC;
        iBuff_18_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        iBuff_19_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_19_V_ce0 : OUT STD_LOGIC;
        iBuff_19_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        iBuff_19_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        iBuff_19_V_ce1 : OUT STD_LOGIC;
        iBuff_19_V_we1 : OUT STD_LOGIC;
        iBuff_19_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        bramtotal : IN STD_LOGIC_VECTOR (15 downto 0);
        bdrows : IN STD_LOGIC_VECTOR (10 downto 0);
        ram_row_depth : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Canny IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_mat_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_mat_data_V_empty_n : IN STD_LOGIC;
        p_src_mat_data_V_read : OUT STD_LOGIC;
        p_dst_mat_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        p_dst_mat_data_V_full_n : IN STD_LOGIC;
        p_dst_mat_data_V_write : OUT STD_LOGIC;
        p_lowthreshold : IN STD_LOGIC_VECTOR (7 downto 0);
        p_highthreshold : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_udivShg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ip_accel_app_udivThq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component ip_accel_app_uremUhA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component ip_accel_app_mux_vdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        din2 : IN STD_LOGIC_VECTOR (63 downto 0);
        din3 : IN STD_LOGIC_VECTOR (63 downto 0);
        din4 : IN STD_LOGIC_VECTOR (63 downto 0);
        din5 : IN STD_LOGIC_VECTOR (63 downto 0);
        din6 : IN STD_LOGIC_VECTOR (63 downto 0);
        din7 : IN STD_LOGIC_VECTOR (63 downto 0);
        din8 : IN STD_LOGIC_VECTOR (63 downto 0);
        din9 : IN STD_LOGIC_VECTOR (63 downto 0);
        din10 : IN STD_LOGIC_VECTOR (63 downto 0);
        din11 : IN STD_LOGIC_VECTOR (63 downto 0);
        din12 : IN STD_LOGIC_VECTOR (63 downto 0);
        din13 : IN STD_LOGIC_VECTOR (63 downto 0);
        din14 : IN STD_LOGIC_VECTOR (63 downto 0);
        din15 : IN STD_LOGIC_VECTOR (63 downto 0);
        din16 : IN STD_LOGIC_VECTOR (63 downto 0);
        din17 : IN STD_LOGIC_VECTOR (63 downto 0);
        din18 : IN STD_LOGIC_VECTOR (63 downto 0);
        din19 : IN STD_LOGIC_VECTOR (63 downto 0);
        din20 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ip_accel_app_mul_VhK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component ip_accel_app_mul_WhU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component ip_accel_app_mul_Xh4 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (25 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component canny_accel_iBuffyd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component canny_accel_oBuff_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    iBuff_0_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_0_V_address0,
        ce0 => iBuff_0_V_ce0,
        we0 => iBuff_0_V_we0,
        d0 => reg_1230,
        q0 => iBuff_0_V_q0,
        address1 => iBuff_0_V_address1,
        ce1 => iBuff_0_V_ce1,
        we1 => iBuff_0_V_we1,
        d1 => iBuff_0_V_d1);

    iBuff_1_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_1_V_address0,
        ce0 => iBuff_1_V_ce0,
        we0 => iBuff_1_V_we0,
        d0 => reg_1230,
        q0 => iBuff_1_V_q0,
        address1 => iBuff_1_V_address1,
        ce1 => iBuff_1_V_ce1,
        we1 => iBuff_1_V_we1,
        d1 => iBuff_1_V_d1);

    iBuff_2_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_2_V_address0,
        ce0 => iBuff_2_V_ce0,
        we0 => iBuff_2_V_we0,
        d0 => reg_1230,
        q0 => iBuff_2_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address1,
        ce1 => iBuff_2_V_ce1,
        we1 => iBuff_2_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_d1);

    iBuff_3_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_3_V_address0,
        ce0 => iBuff_3_V_ce0,
        we0 => iBuff_3_V_we0,
        d0 => reg_1230,
        q0 => iBuff_3_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address1,
        ce1 => iBuff_3_V_ce1,
        we1 => iBuff_3_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_d1);

    iBuff_4_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_4_V_address0,
        ce0 => iBuff_4_V_ce0,
        we0 => iBuff_4_V_we0,
        d0 => reg_1230,
        q0 => iBuff_4_V_q0,
        address1 => iBuff_4_V_address1,
        ce1 => iBuff_4_V_ce1,
        we1 => iBuff_4_V_we1,
        d1 => iBuff_4_V_d1);

    iBuff_5_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_5_V_address0,
        ce0 => iBuff_5_V_ce0,
        we0 => iBuff_5_V_we0,
        d0 => reg_1230,
        q0 => iBuff_5_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address1,
        ce1 => iBuff_5_V_ce1,
        we1 => iBuff_5_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_d1);

    iBuff_6_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_6_V_address0,
        ce0 => iBuff_6_V_ce0,
        we0 => iBuff_6_V_we0,
        d0 => reg_1230,
        q0 => iBuff_6_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address1,
        ce1 => iBuff_6_V_ce1,
        we1 => iBuff_6_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_d1);

    iBuff_7_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_7_V_address0,
        ce0 => iBuff_7_V_ce0,
        we0 => iBuff_7_V_we0,
        d0 => reg_1230,
        q0 => iBuff_7_V_q0,
        address1 => iBuff_7_V_address1,
        ce1 => iBuff_7_V_ce1,
        we1 => iBuff_7_V_we1,
        d1 => iBuff_7_V_d1);

    iBuff_8_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_8_V_address0,
        ce0 => iBuff_8_V_ce0,
        we0 => iBuff_8_V_we0,
        d0 => reg_1230,
        q0 => iBuff_8_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address1,
        ce1 => iBuff_8_V_ce1,
        we1 => iBuff_8_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_d1);

    iBuff_9_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_9_V_address0,
        ce0 => iBuff_9_V_ce0,
        we0 => iBuff_9_V_we0,
        d0 => reg_1230,
        q0 => iBuff_9_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address1,
        ce1 => iBuff_9_V_ce1,
        we1 => iBuff_9_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_d1);

    iBuff_10_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_10_V_address0,
        ce0 => iBuff_10_V_ce0,
        we0 => iBuff_10_V_we0,
        d0 => reg_1230,
        q0 => iBuff_10_V_q0,
        address1 => iBuff_10_V_address1,
        ce1 => iBuff_10_V_ce1,
        we1 => iBuff_10_V_we1,
        d1 => iBuff_10_V_d1);

    iBuff_11_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_11_V_address0,
        ce0 => iBuff_11_V_ce0,
        we0 => iBuff_11_V_we0,
        d0 => reg_1230,
        q0 => iBuff_11_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address1,
        ce1 => iBuff_11_V_ce1,
        we1 => iBuff_11_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_d1);

    iBuff_12_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_12_V_address0,
        ce0 => iBuff_12_V_ce0,
        we0 => iBuff_12_V_we0,
        d0 => reg_1230,
        q0 => iBuff_12_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address1,
        ce1 => iBuff_12_V_ce1,
        we1 => iBuff_12_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_d1);

    iBuff_13_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_13_V_address0,
        ce0 => iBuff_13_V_ce0,
        we0 => iBuff_13_V_we0,
        d0 => reg_1230,
        q0 => iBuff_13_V_q0,
        address1 => iBuff_13_V_address1,
        ce1 => iBuff_13_V_ce1,
        we1 => iBuff_13_V_we1,
        d1 => iBuff_13_V_d1);

    iBuff_14_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_14_V_address0,
        ce0 => iBuff_14_V_ce0,
        we0 => iBuff_14_V_we0,
        d0 => reg_1230,
        q0 => iBuff_14_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address1,
        ce1 => iBuff_14_V_ce1,
        we1 => iBuff_14_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_d1);

    iBuff_15_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_15_V_address0,
        ce0 => iBuff_15_V_ce0,
        we0 => iBuff_15_V_we0,
        d0 => reg_1230,
        q0 => iBuff_15_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address1,
        ce1 => iBuff_15_V_ce1,
        we1 => iBuff_15_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_d1);

    iBuff_16_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_16_V_address0,
        ce0 => iBuff_16_V_ce0,
        we0 => iBuff_16_V_we0,
        d0 => reg_1230,
        q0 => iBuff_16_V_q0,
        address1 => iBuff_16_V_address1,
        ce1 => iBuff_16_V_ce1,
        we1 => iBuff_16_V_we1,
        d1 => iBuff_16_V_d1);

    iBuff_17_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_17_V_address0,
        ce0 => iBuff_17_V_ce0,
        we0 => iBuff_17_V_we0,
        d0 => reg_1230,
        q0 => iBuff_17_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address1,
        ce1 => iBuff_17_V_ce1,
        we1 => iBuff_17_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_d1);

    iBuff_18_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_18_V_address0,
        ce0 => iBuff_18_V_ce0,
        we0 => iBuff_18_V_we0,
        d0 => reg_1230,
        q0 => iBuff_18_V_q0,
        address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address1,
        ce1 => iBuff_18_V_ce1,
        we1 => iBuff_18_V_we1,
        d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_d1);

    iBuff_19_V_U : component canny_accel_iBuffyd2
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => iBuff_19_V_address0,
        ce0 => iBuff_19_V_ce0,
        we0 => iBuff_19_V_we0,
        d0 => reg_1230,
        q0 => iBuff_19_V_q0,
        address1 => iBuff_19_V_address1,
        ce1 => iBuff_19_V_ce1,
        we1 => iBuff_19_V_we1,
        d1 => iBuff_19_V_d1);

    oBuff_V_U : component canny_accel_oBuff_V
    generic map (
        DataWidth => 64,
        AddressRange => 60,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => oBuff_V_address0,
        ce0 => oBuff_V_ce0,
        we0 => oBuff_V_we0,
        d0 => reg_1230,
        q0 => oBuff_V_q0);

    grp_TopDown_20_6_1024_s_fu_1187 : component TopDown_20_6_1024_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_TopDown_20_6_1024_s_fu_1187_ap_start,
        ap_done => grp_TopDown_20_6_1024_s_fu_1187_ap_done,
        ap_idle => grp_TopDown_20_6_1024_s_fu_1187_ap_idle,
        ap_ready => grp_TopDown_20_6_1024_s_fu_1187_ap_ready,
        iBuff_0_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address0,
        iBuff_0_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce0,
        iBuff_0_V_q0 => iBuff_0_V_q0,
        iBuff_0_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address1,
        iBuff_0_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce1,
        iBuff_0_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_we1,
        iBuff_0_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_d1,
        iBuff_1_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address0,
        iBuff_1_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce0,
        iBuff_1_V_q0 => iBuff_1_V_q0,
        iBuff_1_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address1,
        iBuff_1_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce1,
        iBuff_1_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_we1,
        iBuff_1_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_d1,
        iBuff_2_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address0,
        iBuff_2_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce0,
        iBuff_2_V_q0 => iBuff_2_V_q0,
        iBuff_2_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address1,
        iBuff_2_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce1,
        iBuff_2_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_we1,
        iBuff_2_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_d1,
        iBuff_3_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address0,
        iBuff_3_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce0,
        iBuff_3_V_q0 => iBuff_3_V_q0,
        iBuff_3_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address1,
        iBuff_3_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce1,
        iBuff_3_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_we1,
        iBuff_3_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_d1,
        iBuff_4_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address0,
        iBuff_4_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce0,
        iBuff_4_V_q0 => iBuff_4_V_q0,
        iBuff_4_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address1,
        iBuff_4_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce1,
        iBuff_4_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_we1,
        iBuff_4_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_d1,
        iBuff_5_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address0,
        iBuff_5_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce0,
        iBuff_5_V_q0 => iBuff_5_V_q0,
        iBuff_5_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address1,
        iBuff_5_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce1,
        iBuff_5_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_we1,
        iBuff_5_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_d1,
        iBuff_6_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address0,
        iBuff_6_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce0,
        iBuff_6_V_q0 => iBuff_6_V_q0,
        iBuff_6_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address1,
        iBuff_6_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce1,
        iBuff_6_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_we1,
        iBuff_6_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_d1,
        iBuff_7_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address0,
        iBuff_7_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce0,
        iBuff_7_V_q0 => iBuff_7_V_q0,
        iBuff_7_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address1,
        iBuff_7_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce1,
        iBuff_7_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_we1,
        iBuff_7_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_d1,
        iBuff_8_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address0,
        iBuff_8_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce0,
        iBuff_8_V_q0 => iBuff_8_V_q0,
        iBuff_8_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address1,
        iBuff_8_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce1,
        iBuff_8_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_we1,
        iBuff_8_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_d1,
        iBuff_9_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address0,
        iBuff_9_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce0,
        iBuff_9_V_q0 => iBuff_9_V_q0,
        iBuff_9_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address1,
        iBuff_9_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce1,
        iBuff_9_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_we1,
        iBuff_9_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_d1,
        iBuff_10_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address0,
        iBuff_10_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce0,
        iBuff_10_V_q0 => iBuff_10_V_q0,
        iBuff_10_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address1,
        iBuff_10_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce1,
        iBuff_10_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_we1,
        iBuff_10_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_d1,
        iBuff_11_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address0,
        iBuff_11_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce0,
        iBuff_11_V_q0 => iBuff_11_V_q0,
        iBuff_11_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address1,
        iBuff_11_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce1,
        iBuff_11_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_we1,
        iBuff_11_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_d1,
        iBuff_12_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address0,
        iBuff_12_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce0,
        iBuff_12_V_q0 => iBuff_12_V_q0,
        iBuff_12_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address1,
        iBuff_12_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce1,
        iBuff_12_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_we1,
        iBuff_12_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_d1,
        iBuff_13_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address0,
        iBuff_13_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce0,
        iBuff_13_V_q0 => iBuff_13_V_q0,
        iBuff_13_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address1,
        iBuff_13_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce1,
        iBuff_13_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_we1,
        iBuff_13_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_d1,
        iBuff_14_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address0,
        iBuff_14_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce0,
        iBuff_14_V_q0 => iBuff_14_V_q0,
        iBuff_14_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address1,
        iBuff_14_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce1,
        iBuff_14_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_we1,
        iBuff_14_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_d1,
        iBuff_15_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address0,
        iBuff_15_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce0,
        iBuff_15_V_q0 => iBuff_15_V_q0,
        iBuff_15_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address1,
        iBuff_15_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce1,
        iBuff_15_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_we1,
        iBuff_15_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_d1,
        iBuff_16_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address0,
        iBuff_16_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce0,
        iBuff_16_V_q0 => iBuff_16_V_q0,
        iBuff_16_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address1,
        iBuff_16_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce1,
        iBuff_16_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_we1,
        iBuff_16_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_d1,
        iBuff_17_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address0,
        iBuff_17_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce0,
        iBuff_17_V_q0 => iBuff_17_V_q0,
        iBuff_17_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address1,
        iBuff_17_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce1,
        iBuff_17_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_we1,
        iBuff_17_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_d1,
        iBuff_18_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address0,
        iBuff_18_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce0,
        iBuff_18_V_q0 => iBuff_18_V_q0,
        iBuff_18_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address1,
        iBuff_18_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce1,
        iBuff_18_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_we1,
        iBuff_18_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_d1,
        iBuff_19_V_address0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address0,
        iBuff_19_V_ce0 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce0,
        iBuff_19_V_q0 => iBuff_19_V_q0,
        iBuff_19_V_address1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address1,
        iBuff_19_V_ce1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce1,
        iBuff_19_V_we1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_we1,
        iBuff_19_V_d1 => grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_d1,
        bramtotal => bramtotal_reg_2566,
        bdrows => udiv_ln268_reg_2497,
        ram_row_depth => op_assign_reg_2486);

    grp_Canny_fu_1214 : component Canny
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Canny_fu_1214_ap_start,
        ap_done => grp_Canny_fu_1214_ap_done,
        ap_idle => grp_Canny_fu_1214_ap_idle,
        ap_ready => grp_Canny_fu_1214_ap_ready,
        p_src_mat_rows_read => p_src_rows_read_reg_2465,
        p_src_mat_cols_read => p_src_cols_read_reg_2470,
        p_src_mat_data_V_dout => p_src_data_V_dout,
        p_src_mat_data_V_empty_n => p_src_data_V_empty_n,
        p_src_mat_data_V_read => grp_Canny_fu_1214_p_src_mat_data_V_read,
        p_dst_mat_data_V_din => grp_Canny_fu_1214_p_dst_mat_data_V_din,
        p_dst_mat_data_V_full_n => p_dst1_data_V_full_n,
        p_dst_mat_data_V_write => grp_Canny_fu_1214_p_dst_mat_data_V_write,
        p_lowthreshold => low_threshold_read_reg_2455,
        p_highthreshold => high_threshold_read_reg_2460);

    ip_accel_app_udivShg_U272 : component ip_accel_app_udivShg
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1287_ap_start,
        done => grp_fu_1287_ap_done,
        din0 => ap_const_lv11_400,
        din1 => op_assign_reg_2486,
        ce => grp_fu_1287_ce,
        dout => grp_fu_1287_p2);

    ip_accel_app_udivThq_U273 : component ip_accel_app_udivThq
    generic map (
        ID => 1,
        NUM_STAGE => 19,
        din0_WIDTH => 15,
        din1_WIDTH => 11,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1310_ap_start,
        done => grp_fu_1310_ap_done,
        din0 => grp_fu_1310_p0,
        din1 => grp_fu_1310_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1310_p2);

    ip_accel_app_uremUhA_U274 : component ip_accel_app_uremUhA
    generic map (
        ID => 1,
        NUM_STAGE => 20,
        din0_WIDTH => 16,
        din1_WIDTH => 3,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1325_ap_start,
        done => grp_fu_1325_ap_done,
        din0 => grp_fu_1325_p0,
        din1 => grp_fu_1325_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1325_p2);

    ip_accel_app_mux_vdy_U275 : component ip_accel_app_mux_vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        din2_WIDTH => 64,
        din3_WIDTH => 64,
        din4_WIDTH => 64,
        din5_WIDTH => 64,
        din6_WIDTH => 64,
        din7_WIDTH => 64,
        din8_WIDTH => 64,
        din9_WIDTH => 64,
        din10_WIDTH => 64,
        din11_WIDTH => 64,
        din12_WIDTH => 64,
        din13_WIDTH => 64,
        din14_WIDTH => 64,
        din15_WIDTH => 64,
        din16_WIDTH => 64,
        din17_WIDTH => 64,
        din18_WIDTH => 64,
        din19_WIDTH => 64,
        din20_WIDTH => 5,
        dout_WIDTH => 64)
    port map (
        din0 => iBuff_0_V_q0,
        din1 => iBuff_1_V_q0,
        din2 => iBuff_2_V_q0,
        din3 => iBuff_3_V_q0,
        din4 => iBuff_4_V_q0,
        din5 => iBuff_5_V_q0,
        din6 => iBuff_6_V_q0,
        din7 => iBuff_7_V_q0,
        din8 => iBuff_8_V_q0,
        din9 => iBuff_9_V_q0,
        din10 => iBuff_10_V_q0,
        din11 => iBuff_11_V_q0,
        din12 => iBuff_12_V_q0,
        din13 => iBuff_13_V_q0,
        din14 => iBuff_14_V_q0,
        din15 => iBuff_15_V_q0,
        din16 => iBuff_16_V_q0,
        din17 => iBuff_17_V_q0,
        din18 => iBuff_18_V_q0,
        din19 => iBuff_19_V_q0,
        din20 => trunc_ln321_7_reg_2752_pp1_iter1_reg,
        dout => op2_V_read_assign_4_fu_1710_p22);

    ip_accel_app_mul_VhK_U276 : component ip_accel_app_mul_VhK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 16,
        dout_WIDTH => 26)
    port map (
        din0 => mul_ln271_fu_2433_p0,
        din1 => mul_ln271_fu_2433_p1,
        dout => mul_ln271_fu_2433_p2);

    ip_accel_app_mul_WhU_U277 : component ip_accel_app_mul_WhU
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 11,
        dout_WIDTH => 23)
    port map (
        din0 => add_ln327_reg_2538,
        din1 => mul_ln327_fu_2439_p1,
        dout => mul_ln327_fu_2439_p2);

    ip_accel_app_mul_Xh4_U278 : component ip_accel_app_mul_Xh4
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 26,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln295_fu_2445_p0,
        din1 => mul_ln295_fu_2445_p1,
        dout => mul_ln295_fu_2445_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln371_fu_1760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state59) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state59)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state59);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state66) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state66)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state66);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state72) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state71) and (icmp_ln371_fu_1760_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state72)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state72);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state71) and (icmp_ln371_fu_1760_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state76) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state76)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state76);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_Canny_fu_1214_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Canny_fu_1214_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_Canny_fu_1214_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Canny_fu_1214_ap_ready = ap_const_logic_1)) then 
                    grp_Canny_fu_1214_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TopDown_20_6_1024_s_fu_1187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_TopDown_20_6_1024_s_fu_1187_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (icmp_ln340_fu_1588_p2 = ap_const_lv1_0))) then 
                    grp_TopDown_20_6_1024_s_fu_1187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TopDown_20_6_1024_s_fu_1187_ap_ready = ap_const_logic_1)) then 
                    grp_TopDown_20_6_1024_s_fu_1187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bit_0_i_i_i_reg_1176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                bit_0_i_i_i_reg_1176 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_0))) then 
                bit_0_i_i_i_reg_1176 <= bit_fu_1957_p2;
            end if; 
        end if;
    end process;

    i6_0_i_i_i_reg_1109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                i6_0_i_i_i_reg_1109 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1600_p2 = ap_const_lv1_0))) then 
                i6_0_i_i_i_reg_1109 <= i_fu_1605_p2;
            end if; 
        end if;
    end process;

    i_0_i_i_i_reg_1054_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1433_p2 = ap_const_lv1_0))) then 
                i_0_i_i_i_reg_1054 <= i_1_fu_1438_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                i_0_i_i_i_reg_1054 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ii_0_i_i_i_reg_1120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
                ii_0_i_i_i_reg_1120 <= ii_reg_2876;
            elsif (((icmp_ln275_fu_1383_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then 
                ii_0_i_i_i_reg_1120 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_999_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                indvar_flatten_reg_999 <= add_ln275_reg_2591;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                indvar_flatten_reg_999 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    intra_i_0_i_i_i_reg_1065_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                intra_i_0_i_i_i_reg_1065 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state65) and (grp_TopDown_20_6_1024_s_fu_1187_ap_done = ap_const_logic_1))) then 
                intra_i_0_i_i_i_reg_1065 <= intra_i_reg_2722;
            end if; 
        end if;
    end process;

    j_0_i_i_i_reg_1165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                j_0_i_i_i_reg_1165 <= ap_const_lv13_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_0))) then 
                j_0_i_i_i_reg_1165 <= j_fu_1792_p2;
            end if; 
        end if;
    end process;

    k_0_i_i_i_reg_1131_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln374_reg_2881 = ap_const_lv1_0))) then 
                k_0_i_i_i_reg_1131 <= k_reg_2885;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state71) and (icmp_ln371_fu_1760_p2 = ap_const_lv1_0))) then 
                k_0_i_i_i_reg_1131 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    p_0259_0_i_i_i_reg_1032_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0))) then 
                p_0259_0_i_i_i_reg_1032 <= select_ln308_reg_2631;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                p_0259_0_i_i_i_reg_1032 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0259_2_i_i_i_reg_1087_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                p_0259_2_i_i_i_reg_1087 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_reg_2727 = ap_const_lv1_0))) then 
                p_0259_2_i_i_i_reg_1087 <= select_ln356_reg_2741;
            end if; 
        end if;
    end process;

    p_0301_0_i_i_i_reg_1143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                p_0301_0_i_i_i_reg_1143 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_0))) then 
                p_0301_0_i_i_i_reg_1143 <= id_V_fu_1949_p3;
            end if; 
        end if;
    end process;

    p_0331_0_i_i_i_reg_1021_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1433_p2 = ap_const_lv1_0))) then 
                p_0331_0_i_i_i_reg_1021 <= idx1_V_1_fu_1501_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                p_0331_0_i_i_i_reg_1021 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0331_2_i_i_i_reg_1076_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                p_0331_2_i_i_i_reg_1076 <= ap_const_lv16_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1600_p2 = ap_const_lv1_0))) then 
                p_0331_2_i_i_i_reg_1076 <= idx1_V_fu_1668_p2;
            end if; 
        end if;
    end process;

    slice_0_i_i_i_reg_1010_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
                slice_0_i_i_i_reg_1010 <= slice_fu_1755_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                slice_0_i_i_i_reg_1010 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    t_V_12_reg_1154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
                t_V_12_reg_1154 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2890 = ap_const_lv1_0))) then 
                t_V_12_reg_1154 <= select_ln386_reg_2899;
            end if; 
        end if;
    end process;

    t_V_13_reg_1098_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then 
                t_V_13_reg_1098 <= ap_const_lv16_1;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_reg_2727 = ap_const_lv1_0))) then 
                t_V_13_reg_1098 <= select_ln356_1_reg_2747;
            end if; 
        end if;
    end process;

    t_V_reg_1043_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0))) then 
                t_V_reg_1043 <= select_ln308_1_reg_2639;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
                t_V_reg_1043 <= ap_const_lv16_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln269_2_reg_2520 <= add_ln269_2_fu_1319_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                add_ln275_reg_2591 <= add_ln275_fu_1389_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                add_ln308_reg_2571 <= add_ln308_fu_1372_p2;
                bramtotal_reg_2566 <= bramtotal_fu_1367_p2;
                mul_ln271_reg_2561 <= mul_ln271_fu_2433_p2;
                mul_ln327_reg_2583 <= mul_ln327_fu_2439_p2;
                    ram_row_depth_reg_2548(10 downto 0) <= ram_row_depth_fu_1352_p1(10 downto 0);
                    zext_ln267_1_reg_2543(13 downto 0) <= zext_ln267_1_fu_1349_p1(13 downto 0);
                    zext_ln267_reg_2556(10 downto 0) <= zext_ln267_fu_1355_p1(10 downto 0);
                    zext_ln327_reg_2577(10 downto 0) <= zext_ln327_fu_1377_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                add_ln327_reg_2538 <= add_ln327_fu_1343_p2;
                bramsetsval_reg_2526 <= bramsetsval_fu_1334_p2;
                trunc_ln308_reg_2534 <= trunc_ln308_fu_1339_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_0))) then
                add_ln392_10_reg_2994 <= add_ln392_10_fu_1911_p2;
                add_ln392_11_reg_2999 <= add_ln392_11_fu_1917_p2;
                add_ln392_12_reg_3010 <= add_ln392_12_fu_1927_p2;
                add_ln392_13_reg_3015 <= add_ln392_13_fu_1933_p2;
                add_ln392_1_reg_2919 <= add_ln392_1_fu_1837_p2;
                add_ln392_2_reg_2930 <= add_ln392_2_fu_1847_p2;
                add_ln392_3_reg_2935 <= add_ln392_3_fu_1853_p2;
                add_ln392_4_reg_2946 <= add_ln392_4_fu_1863_p2;
                add_ln392_5_reg_2951 <= add_ln392_5_fu_1869_p2;
                add_ln392_6_reg_2962 <= add_ln392_6_fu_1879_p2;
                add_ln392_7_reg_2967 <= add_ln392_7_fu_1885_p2;
                add_ln392_8_reg_2978 <= add_ln392_8_fu_1895_p2;
                add_ln392_9_reg_2983 <= add_ln392_9_fu_1901_p2;
                add_ln392_reg_2914 <= add_ln392_fu_1831_p2;
                select_ln386_1_reg_2904 <= select_ln386_1_fu_1818_p3;
                trunc_ln647_2_reg_2924 <= trunc_ln647_2_fu_1843_p1;
                trunc_ln647_3_reg_2940 <= trunc_ln647_3_fu_1859_p1;
                trunc_ln647_4_reg_2956 <= trunc_ln647_4_fu_1875_p1;
                trunc_ln647_5_reg_2972 <= trunc_ln647_5_fu_1891_p1;
                trunc_ln647_6_reg_2988 <= trunc_ln647_6_fu_1907_p1;
                trunc_ln647_7_reg_3004 <= trunc_ln647_7_fu_1923_p1;
                trunc_ln647_8_reg_3020 <= trunc_ln647_8_fu_1939_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                high_threshold_read_reg_2460 <= high_threshold_dout;
                low_threshold_read_reg_2455 <= low_threshold_dout;
                op_assign_reg_2486 <= p_dst2_cols_dout(15 downto 5);
                p_dst2_cols_read_reg_2450 <= p_dst2_cols_dout;
                p_src_cols_read_reg_2470 <= p_src_cols_dout;
                p_src_rows_read_reg_2465 <= p_src_rows_dout;
                slice_h_reg_2480 <= p_dst2_rows_dout(15 downto 2);
                trunc_ln412_reg_2475 <= trunc_ln412_fu_1263_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln295_reg_2617_pp0_iter1_reg = ap_const_lv1_0))) then
                iBuff_0_V_addr_reg_2678 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_10_V_addr_reg_2698 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_13_V_addr_reg_2703 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_16_V_addr_reg_2708 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_19_V_addr_reg_2713 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_1_V_addr_reg_2683 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_4_V_addr_reg_2688 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
                iBuff_7_V_addr_reg_2693 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln295_reg_2617 <= icmp_ln295_fu_1433_p2;
                icmp_ln295_reg_2617_pp0_iter1_reg <= icmp_ln295_reg_2617;
                icmp_ln879_21_reg_2662 <= icmp_ln879_21_fu_1511_p2;
                trunc_ln321_reg_2646_pp0_iter1_reg <= trunc_ln321_reg_2646;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln348_reg_2727 <= icmp_ln348_fu_1600_p2;
                icmp_ln348_reg_2727_pp1_iter1_reg <= icmp_ln348_reg_2727;
                trunc_ln321_7_reg_2752_pp1_iter1_reg <= trunc_ln321_7_reg_2752;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln348_reg_2727_pp1_iter2_reg <= icmp_ln348_reg_2727_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln374_reg_2881 <= icmp_ln374_fu_1771_p2;
                icmp_ln374_reg_2881_pp2_iter1_reg <= icmp_ln374_reg_2881;
                k_0_i_i_i_reg_1131_pp2_iter1_reg <= k_0_i_i_i_reg_1131;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln383_reg_2890 <= icmp_ln383_fu_1787_p2;
                icmp_ln383_reg_2890_pp3_iter1_reg <= icmp_ln383_reg_2890;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2890 = ap_const_lv1_0))) then
                icmp_ln879_20_reg_3036 <= icmp_ln879_20_fu_1980_p2;
                icmp_ln879_24_reg_3041 <= icmp_ln879_24_fu_2034_p2;
                icmp_ln879_28_reg_3046 <= icmp_ln879_28_fu_2088_p2;
                icmp_ln879_29_reg_3051 <= icmp_ln879_29_fu_2142_p2;
                icmp_ln879_30_reg_3056 <= icmp_ln879_30_fu_2196_p2;
                icmp_ln879_31_reg_3061 <= icmp_ln879_31_fu_2250_p2;
                icmp_ln879_32_reg_3066 <= icmp_ln879_32_fu_2304_p2;
                icmp_ln879_33_reg_3071 <= icmp_ln879_33_fu_2358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln879_21_reg_2662_pp0_iter2_reg <= icmp_ln879_21_reg_2662;
                icmp_ln879_22_reg_2674_pp0_iter2_reg <= icmp_ln879_22_reg_2674;
                icmp_ln879_23_reg_2666_pp0_iter2_reg <= icmp_ln879_23_reg_2666;
                icmp_ln879_27_reg_2670_pp0_iter2_reg <= icmp_ln879_27_reg_2670;
                index_V_reg_2655_pp0_iter2_reg <= index_V_reg_2655;
                reg_1230_pp0_iter2_reg <= reg_1230;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_21_fu_1511_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln879_22_reg_2674 <= icmp_ln879_22_fu_1528_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln879_21_fu_1511_p2 = ap_const_lv1_0))) then
                icmp_ln879_23_reg_2666 <= icmp_ln879_23_fu_1516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_23_fu_1516_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln879_21_fu_1511_p2 = ap_const_lv1_0))) then
                icmp_ln879_27_reg_2670 <= icmp_ln879_27_fu_1523_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                ii_reg_2876 <= ii_fu_1765_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0))) then
                index_V_reg_2655 <= index_V_fu_1507_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state64)) then
                intra_i_reg_2722 <= intra_i_fu_1594_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                k_reg_2885 <= k_fu_1776_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                mul_ln295_reg_2611 <= mul_ln295_fu_2445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln348_reg_2727_pp1_iter1_reg = ap_const_lv1_0))) then
                op2_V_read_assign_4_reg_2862 <= op2_V_read_assign_4_fu_1710_p22;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln374_reg_2881 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0)))) then
                reg_1230 <= p_dst1_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state57) and (icmp_ln275_fu_1383_p2 = ap_const_lv1_0))) then
                select_ln281_reg_2596 <= select_ln281_fu_1401_p3;
                select_ln295_reg_2601 <= select_ln295_fu_1415_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1433_p2 = ap_const_lv1_0))) then
                select_ln308_1_reg_2639 <= select_ln308_1_fu_1489_p3;
                select_ln308_reg_2631 <= select_ln308_fu_1481_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1600_p2 = ap_const_lv1_0))) then
                select_ln356_1_reg_2747 <= select_ln356_1_fu_1656_p3;
                select_ln356_reg_2741 <= select_ln356_fu_1648_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_0))) then
                select_ln386_reg_2899 <= select_ln386_fu_1810_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln348_fu_1600_p2 = ap_const_lv1_0))) then
                t_V_14_reg_2736 <= t_V_14_fu_1622_p3;
                trunc_ln321_7_reg_2752 <= trunc_ln321_7_fu_1664_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_fu_1433_p2 = ap_const_lv1_0))) then
                t_V_15_reg_2626 <= t_V_15_fu_1455_p3;
                trunc_ln321_reg_2646 <= trunc_ln321_fu_1497_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln275_fu_1383_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                tmp_3_reg_2606 <= p_dst2_cols_read_reg_2450(15 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                udiv_ln268_reg_2497 <= grp_fu_1287_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                udiv_ln269_reg_2515 <= grp_fu_1310_p2;
            end if;
        end if;
    end process;
    zext_ln267_1_reg_2543(25 downto 14) <= "000000000000";
    ram_row_depth_reg_2548(15 downto 11) <= "00000";
    zext_ln267_reg_2556(31 downto 11) <= "000000000000000000000";
    zext_ln327_reg_2577(16 downto 11) <= "000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter2, ap_CS_fsm_state57, icmp_ln275_fu_1383_p2, icmp_ln295_fu_1433_p2, ap_enable_reg_pp0_iter0, icmp_ln340_fu_1588_p2, ap_CS_fsm_state64, icmp_ln348_fu_1600_p2, ap_enable_reg_pp1_iter0, icmp_ln371_fu_1760_p2, ap_CS_fsm_state71, icmp_ln374_fu_1771_p2, ap_enable_reg_pp2_iter0, icmp_ln383_fu_1787_p2, ap_enable_reg_pp3_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter2, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter1, grp_TopDown_20_6_1024_s_fu_1187_ap_done, grp_Canny_fu_1214_ap_done, ap_CS_fsm_state65, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_Canny_fu_1214_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                if (((icmp_ln275_fu_1383_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state57))) then
                    ap_NS_fsm <= ap_ST_fsm_state71;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln295_fu_1433_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln295_fu_1433_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((icmp_ln340_fu_1588_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state64))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state65 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state65) and (grp_TopDown_20_6_1024_s_fu_1187_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln348_fu_1600_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln348_fu_1600_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln371_fu_1760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln374_fu_1771_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln374_fu_1771_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln383_fu_1787_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln269_2_fu_1319_p2 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(zext_ln269_fu_1316_p1));
    add_ln269_fu_1298_p2 <= std_logic_vector(unsigned(ap_const_lv15_9) + unsigned(zext_ln266_fu_1292_p1));
    add_ln275_fu_1389_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_999) + unsigned(ap_const_lv4_1));
    add_ln308_fu_1372_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(bramsetsval_reg_2526));
    add_ln327_fu_1343_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(zext_ln270_fu_1331_p1));
    add_ln392_10_fu_1911_p2 <= std_logic_vector(unsigned(ap_const_lv32_D) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_11_fu_1917_p2 <= std_logic_vector(unsigned(ap_const_lv32_C) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_12_fu_1927_p2 <= std_logic_vector(unsigned(ap_const_lv32_F) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_13_fu_1933_p2 <= std_logic_vector(unsigned(ap_const_lv32_E) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_1_fu_1837_p2 <= std_logic_vector(unsigned(ap_const_lv32_2) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_2_fu_1847_p2 <= std_logic_vector(unsigned(ap_const_lv32_5) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_3_fu_1853_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_4_fu_1863_p2 <= std_logic_vector(unsigned(ap_const_lv32_7) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_5_fu_1869_p2 <= std_logic_vector(unsigned(ap_const_lv32_6) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_6_fu_1879_p2 <= std_logic_vector(unsigned(ap_const_lv32_9) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_7_fu_1885_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_8_fu_1895_p2 <= std_logic_vector(unsigned(ap_const_lv32_B) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_9_fu_1901_p2 <= std_logic_vector(unsigned(ap_const_lv32_A) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln392_fu_1831_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) + unsigned(select_ln386_1_fu_1818_p3));
    add_ln700_fu_1943_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(p_0301_0_i_i_i_reg_1143));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(58);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(62);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(65);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(67);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state63 <= ap_CS_fsm(59);
    ap_CS_fsm_state64 <= ap_CS_fsm(60);
    ap_CS_fsm_state65 <= ap_CS_fsm(61);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(63);
    ap_CS_fsm_state71 <= ap_CS_fsm(64);
    ap_CS_fsm_state75 <= ap_CS_fsm(66);
    ap_CS_fsm_state79 <= ap_CS_fsm(68);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_const_boolean_1 = ap_block_pp0_stage0_subdone) and (ap_ST_fsm_pp0_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln295_reg_2617)
    begin
                ap_block_pp0_stage0_11001 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2617 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln295_reg_2617)
    begin
                ap_block_pp0_stage0_subdone <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln295_reg_2617 = ap_const_lv1_0));
    end process;


    ap_block_pp1_assign_proc : process(ap_CS_fsm, ap_block_pp1_stage0_subdone)
    begin
                ap_block_pp1 <= ((ap_const_boolean_1 = ap_block_pp1_stage0_subdone) and (ap_ST_fsm_pp1_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter3, icmp_ln348_reg_2727_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_01001 <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter3, icmp_ln348_reg_2727_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_11001 <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter3, icmp_ln348_reg_2727_pp1_iter2_reg)
    begin
                ap_block_pp1_stage0_subdone <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_pp2_assign_proc : process(ap_CS_fsm, ap_block_pp2_stage0_subdone)
    begin
                ap_block_pp2 <= ((ap_const_boolean_1 = ap_block_pp2_stage0_subdone) and (ap_ST_fsm_pp2_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2881)
    begin
                ap_block_pp2_stage0_11001 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln374_reg_2881 = ap_const_lv1_0));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(p_dst1_data_V_empty_n, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2881)
    begin
                ap_block_pp2_stage0_subdone <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (icmp_ln374_reg_2881 = ap_const_lv1_0));
    end process;


    ap_block_pp3_assign_proc : process(ap_CS_fsm, ap_block_pp3_stage0_subdone)
    begin
                ap_block_pp3 <= ((ap_const_boolean_1 = ap_block_pp3_stage0_subdone) and (ap_ST_fsm_pp3_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter2, icmp_ln383_reg_2890_pp3_iter1_reg)
    begin
                ap_block_pp3_stage0_01001 <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln383_reg_2890_pp3_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter2, icmp_ln383_reg_2890_pp3_iter1_reg)
    begin
                ap_block_pp3_stage0_11001 <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln383_reg_2890_pp3_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter2, icmp_ln383_reg_2890_pp3_iter1_reg)
    begin
                ap_block_pp3_stage0_subdone <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln383_reg_2890_pp3_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call40_assign_proc : process(real_start, ap_done_reg, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
                ap_block_state1_ignore_call40 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0));
    end process;

        ap_block_state59_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state60_pp0_stage0_iter1_assign_proc : process(p_dst1_data_V_empty_n, icmp_ln295_reg_2617)
    begin
                ap_block_state60_pp0_stage0_iter1 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (icmp_ln295_reg_2617 = ap_const_lv1_0));
    end process;

        ap_block_state61_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state69_pp1_stage0_iter3_assign_proc : process(p_dst1_data_V_full_n, icmp_ln348_reg_2727_pp1_iter2_reg)
    begin
                ap_block_state69_pp1_stage0_iter3 <= ((p_dst1_data_V_full_n = ap_const_logic_0) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state72_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state73_pp2_stage0_iter1_assign_proc : process(p_dst1_data_V_empty_n, icmp_ln374_reg_2881)
    begin
                ap_block_state73_pp2_stage0_iter1 <= ((p_dst1_data_V_empty_n = ap_const_logic_0) and (icmp_ln374_reg_2881 = ap_const_lv1_0));
    end process;

        ap_block_state74_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state78_pp3_stage0_iter2_assign_proc : process(p_dst2_data_V_full_n, icmp_ln383_reg_2890_pp3_iter1_reg)
    begin
                ap_block_state78_pp3_stage0_iter2 <= ((p_dst2_data_V_full_n = ap_const_logic_0) and (icmp_ln383_reg_2890_pp3_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state59_assign_proc : process(icmp_ln295_fu_1433_p2)
    begin
        if ((icmp_ln295_fu_1433_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state59 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state59 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state66_assign_proc : process(icmp_ln348_fu_1600_p2)
    begin
        if ((icmp_ln348_fu_1600_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state66 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state66 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state72_assign_proc : process(icmp_ln374_fu_1771_p2)
    begin
        if ((icmp_ln374_fu_1771_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state72 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state72 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state76_assign_proc : process(icmp_ln383_fu_1787_p2)
    begin
        if ((icmp_ln383_fu_1787_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state76 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state76 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln371_fu_1760_p2, ap_CS_fsm_state71)
    begin
        if (((icmp_ln371_fu_1760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_308_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_308 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_10);
    end process;


    ap_enable_operation_311_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_311 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_D);
    end process;


    ap_enable_operation_314_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_314 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_A);
    end process;


    ap_enable_operation_317_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_317 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_7);
    end process;


    ap_enable_operation_320_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_320 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_4);
    end process;


    ap_enable_operation_323_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_323 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1);
    end process;


    ap_enable_operation_324_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_enable_operation_324 <= (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_0);
    end process;


    ap_enable_operation_325_assign_proc : process(ap_predicate_op325_store_state61)
    begin
                ap_enable_operation_325 <= (ap_predicate_op325_store_state61 = ap_const_boolean_1);
    end process;


    ap_enable_operation_330_assign_proc : process(ap_predicate_op330_store_state62)
    begin
                ap_enable_operation_330 <= (ap_predicate_op330_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_332_assign_proc : process(ap_predicate_op332_store_state62)
    begin
                ap_enable_operation_332 <= (ap_predicate_op332_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_334_assign_proc : process(ap_predicate_op334_store_state62)
    begin
                ap_enable_operation_334 <= (ap_predicate_op334_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_336_assign_proc : process(ap_predicate_op336_store_state62)
    begin
                ap_enable_operation_336 <= (ap_predicate_op336_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_338_assign_proc : process(ap_predicate_op338_store_state62)
    begin
                ap_enable_operation_338 <= (ap_predicate_op338_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_340_assign_proc : process(ap_predicate_op340_store_state62)
    begin
                ap_enable_operation_340 <= (ap_predicate_op340_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_342_assign_proc : process(ap_predicate_op342_store_state62)
    begin
                ap_enable_operation_342 <= (ap_predicate_op342_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_344_assign_proc : process(ap_predicate_op344_store_state62)
    begin
                ap_enable_operation_344 <= (ap_predicate_op344_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_356_assign_proc : process(ap_predicate_op356_store_state62)
    begin
                ap_enable_operation_356 <= (ap_predicate_op356_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_358_assign_proc : process(ap_predicate_op358_store_state62)
    begin
                ap_enable_operation_358 <= (ap_predicate_op358_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_360_assign_proc : process(ap_predicate_op360_store_state62)
    begin
                ap_enable_operation_360 <= (ap_predicate_op360_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_362_assign_proc : process(ap_predicate_op362_store_state62)
    begin
                ap_enable_operation_362 <= (ap_predicate_op362_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_364_assign_proc : process(ap_predicate_op364_store_state62)
    begin
                ap_enable_operation_364 <= (ap_predicate_op364_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_366_assign_proc : process(ap_predicate_op366_store_state62)
    begin
                ap_enable_operation_366 <= (ap_predicate_op366_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_368_assign_proc : process(ap_predicate_op368_store_state62)
    begin
                ap_enable_operation_368 <= (ap_predicate_op368_store_state62 = ap_const_boolean_1);
    end process;


    ap_enable_operation_370_assign_proc : process(ap_predicate_op370_store_state62)
    begin
                ap_enable_operation_370 <= (ap_predicate_op370_store_state62 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_enable_state61_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state61_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state62_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state62_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_k_0_i_i_i_phi_fu_1135_p4_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln374_reg_2881, k_0_i_i_i_reg_1131, k_reg_2885)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln374_reg_2881 = ap_const_lv1_0))) then 
            ap_phi_mux_k_0_i_i_i_phi_fu_1135_p4 <= k_reg_2885;
        else 
            ap_phi_mux_k_0_i_i_i_phi_fu_1135_p4 <= k_0_i_i_i_reg_1131;
        end if; 
    end process;


    ap_phi_mux_p_0259_0_i_i_i_phi_fu_1036_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln295_reg_2617, p_0259_0_i_i_i_reg_1032, select_ln308_reg_2631)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_p_0259_0_i_i_i_phi_fu_1036_p4 <= select_ln308_reg_2631;
        else 
            ap_phi_mux_p_0259_0_i_i_i_phi_fu_1036_p4 <= p_0259_0_i_i_i_reg_1032;
        end if; 
    end process;


    ap_phi_mux_p_0259_2_i_i_i_phi_fu_1091_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln348_reg_2727, p_0259_2_i_i_i_reg_1087, ap_CS_fsm_pp1_stage0, select_ln356_reg_2741, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln348_reg_2727 = ap_const_lv1_0))) then 
            ap_phi_mux_p_0259_2_i_i_i_phi_fu_1091_p4 <= select_ln356_reg_2741;
        else 
            ap_phi_mux_p_0259_2_i_i_i_phi_fu_1091_p4 <= p_0259_2_i_i_i_reg_1087;
        end if; 
    end process;


    ap_phi_mux_t_V_12_phi_fu_1158_p4_assign_proc : process(ap_block_pp3_stage0, icmp_ln383_reg_2890, t_V_12_reg_1154, ap_CS_fsm_pp3_stage0, select_ln386_reg_2899, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln383_reg_2890 = ap_const_lv1_0))) then 
            ap_phi_mux_t_V_12_phi_fu_1158_p4 <= select_ln386_reg_2899;
        else 
            ap_phi_mux_t_V_12_phi_fu_1158_p4 <= t_V_12_reg_1154;
        end if; 
    end process;


    ap_phi_mux_t_V_13_phi_fu_1102_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln348_reg_2727, t_V_13_reg_1098, ap_CS_fsm_pp1_stage0, select_ln356_1_reg_2747, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln348_reg_2727 = ap_const_lv1_0))) then 
            ap_phi_mux_t_V_13_phi_fu_1102_p4 <= select_ln356_1_reg_2747;
        else 
            ap_phi_mux_t_V_13_phi_fu_1102_p4 <= t_V_13_reg_1098;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_1047_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln295_reg_2617, t_V_reg_1043, select_ln308_1_reg_2639)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_t_V_phi_fu_1047_p4 <= select_ln308_1_reg_2639;
        else 
            ap_phi_mux_t_V_phi_fu_1047_p4 <= t_V_reg_1043;
        end if; 
    end process;


    ap_predicate_op325_store_state61_assign_proc : process(trunc_ln321_reg_2646_pp0_iter1_reg)
    begin
                ap_predicate_op325_store_state61 <= ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_13) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_14) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_15) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_16) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_17) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_18) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_19) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1A) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1B) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1C) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1D) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1E) or (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1F)))))))))))));
    end process;


    ap_predicate_op330_store_state62_assign_proc : process(icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op330_store_state62 <= ((icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op332_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op332_store_state62 <= ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op334_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op334_store_state62 <= ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op336_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op336_store_state62 <= ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op338_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op338_store_state62 <= ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op340_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op340_store_state62 <= ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op342_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op342_store_state62 <= ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op344_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg)
    begin
                ap_predicate_op344_store_state62 <= (not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op356_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op356_store_state62 <= ((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op358_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op358_store_state62 <= ((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op360_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op360_store_state62 <= ((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op362_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op362_store_state62 <= ((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op364_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op364_store_state62 <= ((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op366_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op366_store_state62 <= ((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op368_store_state62_assign_proc : process(trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op368_store_state62 <= (not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op370_store_state62_assign_proc : process(icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg)
    begin
                ap_predicate_op370_store_state62 <= ((icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    bit_fu_1957_p2 <= std_logic_vector(unsigned(ap_const_lv32_10) + unsigned(select_ln386_1_fu_1818_p3));
    bramsetsval_fu_1334_p2 <= std_logic_vector(unsigned(add_ln269_2_reg_2520) - unsigned(grp_fu_1325_p2));
    bramtotal_fu_1367_p2 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(bramsetsval_reg_2526));
    dep_V_1_fu_1643_p2 <= std_logic_vector(unsigned(ram_row_depth_reg_2548) + unsigned(ap_phi_mux_p_0259_2_i_i_i_phi_fu_1091_p4));
    dep_V_fu_1476_p2 <= std_logic_vector(unsigned(ram_row_depth_reg_2548) + unsigned(ap_phi_mux_p_0259_0_i_i_i_phi_fu_1036_p4));
    grp_Canny_fu_1214_ap_start <= grp_Canny_fu_1214_ap_start_reg;
    grp_TopDown_20_6_1024_s_fu_1187_ap_start <= grp_TopDown_20_6_1024_s_fu_1187_ap_start_reg;

    grp_fu_1287_ap_start_assign_proc : process(grp_Canny_fu_1214_ap_done, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_Canny_fu_1214_ap_done = ap_const_logic_1))) then 
            grp_fu_1287_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1287_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1287_ce_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_1287_ce <= ap_const_logic_1;
        else 
            grp_fu_1287_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1310_ap_start_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_1310_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1310_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1310_p0 <= std_logic_vector(unsigned(zext_ln268_fu_1295_p1) + unsigned(add_ln269_fu_1298_p2));
    grp_fu_1310_p1 <= zext_ln268_fu_1295_p1(11 - 1 downto 0);

    grp_fu_1325_ap_start_assign_proc : process(ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            grp_fu_1325_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1325_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1325_p0 <= std_logic_vector(unsigned(ap_const_lv16_2) + unsigned(zext_ln269_fu_1316_p1));
    grp_fu_1325_p1 <= ap_const_lv16_3(3 - 1 downto 0);

    high_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, high_threshold_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_blk_n <= high_threshold_empty_n;
        else 
            high_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    high_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_read <= ap_const_logic_1;
        else 
            high_threshold_read <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_0_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_0_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address0;
        else 
            iBuff_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_0_V_address1_assign_proc : process(ap_block_pp0_stage0, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_0_V_addr_reg_2678, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address1, ap_CS_fsm_state65, zext_ln544_8_fu_1564_p1)
    begin
        if (((icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_address1 <= iBuff_0_V_addr_reg_2678;
        elsif (((icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_address1 <= zext_ln544_8_fu_1564_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_0_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_address1;
        else 
            iBuff_0_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_0_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce0;
        else 
            iBuff_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_0_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_0_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_ce1;
        else 
            iBuff_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_d1 <= ap_const_lv64_0;
        elsif (((icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_0_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_0_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_d1;
        else 
            iBuff_0_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_0_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_0_V_we0 <= ap_const_logic_1;
        else 
            iBuff_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_0_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_0_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_0_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_0_V_we1;
        else 
            iBuff_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_10_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_10_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address0;
        else 
            iBuff_10_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_10_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_10_V_addr_reg_2698, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_address1 <= iBuff_10_V_addr_reg_2698;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_10_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_address1;
        else 
            iBuff_10_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_10_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_10_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_10_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce0;
        else 
            iBuff_10_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_10_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_10_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_ce1;
        else 
            iBuff_10_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_10_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_10_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_d1;
        else 
            iBuff_10_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_10_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_A) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_10_V_we0 <= ap_const_logic_1;
        else 
            iBuff_10_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_10_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_10_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_10_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_10_V_we1;
        else 
            iBuff_10_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_11_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_11_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_11_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_address0;
        else 
            iBuff_11_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_11_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_11_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_11_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce0;
        else 
            iBuff_11_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_11_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_ce1;
        else 
            iBuff_11_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_B) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_11_V_we0 <= ap_const_logic_1;
        else 
            iBuff_11_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_11_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_11_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_11_V_we1;
        else 
            iBuff_11_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_12_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_12_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_12_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_address0;
        else 
            iBuff_12_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_12_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_12_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_12_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce0;
        else 
            iBuff_12_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_12_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_ce1;
        else 
            iBuff_12_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_12_V_we0 <= ap_const_logic_1;
        else 
            iBuff_12_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_12_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_12_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_12_V_we1;
        else 
            iBuff_12_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_13_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_13_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address0;
        else 
            iBuff_13_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_13_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_13_V_addr_reg_2703, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_address1 <= iBuff_13_V_addr_reg_2703;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_13_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_address1;
        else 
            iBuff_13_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_13_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_13_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_13_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce0;
        else 
            iBuff_13_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_13_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_13_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_ce1;
        else 
            iBuff_13_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_13_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_13_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_d1;
        else 
            iBuff_13_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_13_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_D) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_13_V_we0 <= ap_const_logic_1;
        else 
            iBuff_13_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_13_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_C) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_13_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_13_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_13_V_we1;
        else 
            iBuff_13_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_14_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_14_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_14_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_address0;
        else 
            iBuff_14_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_14_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_14_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_14_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce0;
        else 
            iBuff_14_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_14_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_ce1;
        else 
            iBuff_14_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_E) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_14_V_we0 <= ap_const_logic_1;
        else 
            iBuff_14_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_14_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_14_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_14_V_we1;
        else 
            iBuff_14_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_15_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_15_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_15_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_address0;
        else 
            iBuff_15_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_15_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_15_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_15_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce0;
        else 
            iBuff_15_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_15_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_ce1;
        else 
            iBuff_15_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_15_V_we0 <= ap_const_logic_1;
        else 
            iBuff_15_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_15_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_15_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_15_V_we1;
        else 
            iBuff_15_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_16_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_16_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address0;
        else 
            iBuff_16_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_16_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_16_V_addr_reg_2708, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_address1 <= iBuff_16_V_addr_reg_2708;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_16_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_address1;
        else 
            iBuff_16_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_16_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_16_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_16_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce0;
        else 
            iBuff_16_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_16_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_16_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_ce1;
        else 
            iBuff_16_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_16_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_16_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_d1;
        else 
            iBuff_16_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_16_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_10) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_16_V_we0 <= ap_const_logic_1;
        else 
            iBuff_16_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_16_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_F) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_16_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_16_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_16_V_we1;
        else 
            iBuff_16_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_17_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_17_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_17_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_address0;
        else 
            iBuff_17_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_17_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_17_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_17_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce0;
        else 
            iBuff_17_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_17_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_ce1;
        else 
            iBuff_17_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_11) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_17_V_we0 <= ap_const_logic_1;
        else 
            iBuff_17_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_17_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_17_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_17_V_we1;
        else 
            iBuff_17_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_18_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_18_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_18_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_address0;
        else 
            iBuff_18_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_18_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_18_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_18_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce0;
        else 
            iBuff_18_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_18_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_ce1;
        else 
            iBuff_18_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_12) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_18_V_we0 <= ap_const_logic_1;
        else 
            iBuff_18_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_18_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_18_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_18_V_we1;
        else 
            iBuff_18_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_19_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_19_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address0;
        else 
            iBuff_19_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_19_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_19_V_addr_reg_2713, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if ((not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif ((not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_address1 <= iBuff_19_V_addr_reg_2713;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_19_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_address1;
        else 
            iBuff_19_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_19_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_19_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_19_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce0;
        else 
            iBuff_19_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce1, ap_CS_fsm_state65)
    begin
        if (((not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or (not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_19_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_19_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_ce1;
        else 
            iBuff_19_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_d1, ap_CS_fsm_state65)
    begin
        if ((not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif ((not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_19_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_19_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_d1;
        else 
            iBuff_19_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_19_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_13) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_14) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_15) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_16) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_17) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_18) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_19) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1A) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1B) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1C) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1D) or ((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1E) or (trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1F))))))))))))))) then 
            iBuff_19_V_we0 <= ap_const_logic_1;
        else 
            iBuff_19_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_19_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_we1, ap_CS_fsm_state65)
    begin
        if (((not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or (not((trunc_ln308_reg_2534 = ap_const_lv5_0)) and not((trunc_ln308_reg_2534 = ap_const_lv5_3)) and not((trunc_ln308_reg_2534 = ap_const_lv5_6)) and not((trunc_ln308_reg_2534 = ap_const_lv5_9)) and not((trunc_ln308_reg_2534 = ap_const_lv5_C)) and not((trunc_ln308_reg_2534 = ap_const_lv5_F)) and (icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_19_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_19_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_19_V_we1;
        else 
            iBuff_19_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_1_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_1_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address0;
        else 
            iBuff_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_1_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_1_V_addr_reg_2683, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_address1 <= iBuff_1_V_addr_reg_2683;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_1_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_address1;
        else 
            iBuff_1_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_1_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_1_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce0;
        else 
            iBuff_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_1_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_1_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_ce1;
        else 
            iBuff_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_1_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_1_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_d1;
        else 
            iBuff_1_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_1_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_1_V_we0 <= ap_const_logic_1;
        else 
            iBuff_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_1_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_1_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_1_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_1_V_we1;
        else 
            iBuff_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_2_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_2_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_2_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_address0;
        else 
            iBuff_2_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_2_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_2_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce0;
        else 
            iBuff_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_2_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_ce1;
        else 
            iBuff_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_2_V_we0 <= ap_const_logic_1;
        else 
            iBuff_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_2_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_2_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_2_V_we1;
        else 
            iBuff_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_3_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_3_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_3_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_address0;
        else 
            iBuff_3_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_3_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_3_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_3_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce0;
        else 
            iBuff_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_3_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_ce1;
        else 
            iBuff_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_3_V_we0 <= ap_const_logic_1;
        else 
            iBuff_3_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_3_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_3_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_3_V_we1;
        else 
            iBuff_3_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_4_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_4_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address0;
        else 
            iBuff_4_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_4_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_4_V_addr_reg_2688, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_address1 <= iBuff_4_V_addr_reg_2688;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_4_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_address1;
        else 
            iBuff_4_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_4_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_4_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_4_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce0;
        else 
            iBuff_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_4_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_4_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_ce1;
        else 
            iBuff_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_4_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_4_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_d1;
        else 
            iBuff_4_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_4_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_4_V_we0 <= ap_const_logic_1;
        else 
            iBuff_4_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_4_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_4_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_4_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_4_V_we1;
        else 
            iBuff_4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_5_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_5_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_5_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_address0;
        else 
            iBuff_5_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_5_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_5_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_5_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce0;
        else 
            iBuff_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_5_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_ce1;
        else 
            iBuff_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_5_V_we0 <= ap_const_logic_1;
        else 
            iBuff_5_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_5_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_5_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_5_V_we1;
        else 
            iBuff_5_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_6_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_6_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_6_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_address0;
        else 
            iBuff_6_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_6_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_6_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_6_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce0;
        else 
            iBuff_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_6_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_ce1;
        else 
            iBuff_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_6_V_we0 <= ap_const_logic_1;
        else 
            iBuff_6_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_6_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_6_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_6_V_we1;
        else 
            iBuff_6_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_7_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_7_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address0;
        else 
            iBuff_7_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_7_V_address1_assign_proc : process(ap_block_pp0_stage0, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, iBuff_7_V_addr_reg_2693, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address1, ap_CS_fsm_state65, sext_ln544_fu_1577_p1)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_address1 <= sext_ln544_fu_1577_p1(10 - 1 downto 0);
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_address1 <= iBuff_7_V_addr_reg_2693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_7_V_address1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_address1;
        else 
            iBuff_7_V_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_7_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_7_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_7_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce0;
        else 
            iBuff_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_7_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_7_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_ce1;
        else 
            iBuff_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_d1_assign_proc : process(ap_block_pp0_stage0, reg_1230_pp0_iter2_reg, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_d1, ap_CS_fsm_state65)
    begin
        if (((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_d1 <= reg_1230_pp0_iter2_reg;
        elsif (((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_7_V_d1 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_7_V_d1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_d1;
        else 
            iBuff_7_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    iBuff_7_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_7_V_we0 <= ap_const_logic_1;
        else 
            iBuff_7_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_7_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln308_reg_2534, icmp_ln879_21_reg_2662_pp0_iter2_reg, icmp_ln879_23_reg_2666_pp0_iter2_reg, icmp_ln879_27_reg_2670_pp0_iter2_reg, icmp_ln879_22_reg_2674_pp0_iter2_reg, ap_enable_reg_pp0_iter3, grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_we1, ap_CS_fsm_state65)
    begin
        if ((((icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_22_reg_2674_pp0_iter2_reg = ap_const_lv1_0)) or ((icmp_ln879_27_reg_2670_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln879_23_reg_2666_pp0_iter2_reg = ap_const_lv1_1) and (trunc_ln308_reg_2534 = ap_const_lv5_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln879_21_reg_2662_pp0_iter2_reg = ap_const_lv1_0)))) then 
            iBuff_7_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_7_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_7_V_we1;
        else 
            iBuff_7_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_8_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_8_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_8_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_address0;
        else 
            iBuff_8_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_8_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_8_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_8_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce0;
        else 
            iBuff_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_8_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_ce1;
        else 
            iBuff_8_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_8) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_8_V_we0 <= ap_const_logic_1;
        else 
            iBuff_8_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_8_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_8_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_8_V_we1;
        else 
            iBuff_8_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_address0_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address0, ap_CS_fsm_state65, zext_ln544_fu_1533_p1, zext_ln544_7_fu_1686_p1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            iBuff_9_V_address0 <= zext_ln544_7_fu_1686_p1(10 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            iBuff_9_V_address0 <= zext_ln544_fu_1533_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_9_V_address0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_address0;
        else 
            iBuff_9_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    iBuff_9_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce0, ap_CS_fsm_state65)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            iBuff_9_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_9_V_ce0 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce0;
        else 
            iBuff_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_ce1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_9_V_ce1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_ce1;
        else 
            iBuff_9_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln321_reg_2646_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((trunc_ln321_reg_2646_pp0_iter1_reg = ap_const_lv5_9) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            iBuff_9_V_we0 <= ap_const_logic_1;
        else 
            iBuff_9_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    iBuff_9_V_we1_assign_proc : process(grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_we1, ap_CS_fsm_state65)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            iBuff_9_V_we1 <= grp_TopDown_20_6_1024_s_fu_1187_iBuff_9_V_we1;
        else 
            iBuff_9_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_1438_p2 <= std_logic_vector(unsigned(i_0_i_i_i_reg_1054) + unsigned(ap_const_lv32_1));
    i_fu_1605_p2 <= std_logic_vector(unsigned(i6_0_i_i_i_reg_1109) + unsigned(ap_const_lv32_1));
    icmp_ln275_fu_1383_p2 <= "1" when (indvar_flatten_reg_999 = ap_const_lv4_8) else "0";
    icmp_ln281_fu_1395_p2 <= "1" when (slice_0_i_i_i_reg_1010 = ap_const_lv3_4) else "0";
    icmp_ln283_fu_1409_p2 <= "1" when (select_ln281_fu_1401_p3 = ap_const_lv3_3) else "0";
    icmp_ln295_fu_1433_p2 <= "1" when (i_0_i_i_i_reg_1054 = mul_ln295_reg_2611) else "0";
    icmp_ln340_fu_1588_p2 <= "1" when (intra_i_0_i_i_i_reg_1065 = ap_const_lv4_8) else "0";
    icmp_ln348_fu_1600_p2 <= "1" when (i6_0_i_i_i_reg_1109 = mul_ln295_reg_2611) else "0";
    icmp_ln371_fu_1760_p2 <= "1" when (ii_0_i_i_i_reg_1120 = trunc_ln412_reg_2475) else "0";
    icmp_ln374_fu_1771_p2 <= "1" when (ap_phi_mux_k_0_i_i_i_phi_fu_1135_p4 = op_assign_reg_2486) else "0";
    icmp_ln383_fu_1787_p2 <= "1" when (j_0_i_i_i_reg_1165 = tmp_3_reg_2606) else "0";
    icmp_ln647_1_fu_2040_p2 <= "1" when (unsigned(add_ln392_3_reg_2935) > unsigned(add_ln392_2_reg_2930)) else "0";
    icmp_ln647_2_fu_2094_p2 <= "1" when (unsigned(add_ln392_5_reg_2951) > unsigned(add_ln392_4_reg_2946)) else "0";
    icmp_ln647_3_fu_2148_p2 <= "1" when (unsigned(add_ln392_7_reg_2967) > unsigned(add_ln392_6_reg_2962)) else "0";
    icmp_ln647_4_fu_2202_p2 <= "1" when (unsigned(add_ln392_9_reg_2983) > unsigned(add_ln392_8_reg_2978)) else "0";
    icmp_ln647_5_fu_2256_p2 <= "1" when (unsigned(add_ln392_11_reg_2999) > unsigned(add_ln392_10_reg_2994)) else "0";
    icmp_ln647_6_fu_2310_p2 <= "1" when (unsigned(add_ln392_13_reg_3015) > unsigned(add_ln392_12_reg_3010)) else "0";
    icmp_ln647_fu_1986_p2 <= "1" when (unsigned(add_ln392_1_reg_2919) > unsigned(add_ln392_reg_2914)) else "0";
    icmp_ln879_18_fu_1471_p2 <= "1" when (select_ln303_1_fu_1463_p3 = add_ln308_reg_2571) else "0";
    icmp_ln879_19_fu_1798_p2 <= "1" when (p_0301_0_i_i_i_reg_1143 = ap_const_lv3_4) else "0";
    icmp_ln879_20_fu_1980_p2 <= "1" when (trunc_ln647_1_fu_1976_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_21_fu_1511_p2 <= "1" when (select_ln308_1_reg_2639 = ap_const_lv16_1) else "0";
    icmp_ln879_22_fu_1528_p2 <= "1" when (select_ln308_reg_2631 = ap_const_lv16_0) else "0";
    icmp_ln879_23_fu_1516_p2 <= "1" when (select_ln308_1_reg_2639 = bramsetsval_reg_2526) else "0";
    icmp_ln879_24_fu_2034_p2 <= "1" when (trunc_ln364_fu_2030_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_25_fu_1611_p2 <= "1" when (p_0331_2_i_i_i_reg_1076 = ram_row_depth_reg_2548) else "0";
    icmp_ln879_26_fu_1638_p2 <= "1" when (select_ln352_1_fu_1630_p3 = add_ln308_reg_2571) else "0";
    icmp_ln879_27_fu_1523_p2 <= "1" when (zext_ln879_fu_1520_p1 = mul_ln327_reg_2583) else "0";
    icmp_ln879_28_fu_2088_p2 <= "1" when (trunc_ln364_1_fu_2084_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_29_fu_2142_p2 <= "1" when (trunc_ln364_2_fu_2138_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_30_fu_2196_p2 <= "1" when (trunc_ln364_3_fu_2192_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_31_fu_2250_p2 <= "1" when (trunc_ln364_4_fu_2246_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_32_fu_2304_p2 <= "1" when (trunc_ln364_5_fu_2300_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_33_fu_2358_p2 <= "1" when (trunc_ln364_6_fu_2354_p1 = ap_const_lv2_3) else "0";
    icmp_ln879_fu_1444_p2 <= "1" when (p_0331_0_i_i_i_reg_1021 = ram_row_depth_reg_2548) else "0";
    id_V_fu_1949_p3 <= 
        ap_const_lv3_1 when (icmp_ln879_19_fu_1798_p2(0) = '1') else 
        add_ln700_fu_1943_p2;
    idx1_V_1_fu_1501_p2 <= std_logic_vector(unsigned(t_V_15_fu_1455_p3) + unsigned(ap_const_lv16_1));
    idx1_V_fu_1668_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(t_V_14_fu_1622_p3));
    idx2_V_1_fu_1616_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_phi_mux_t_V_13_phi_fu_1102_p4));
    idx2_V_fu_1449_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ap_phi_mux_t_V_phi_fu_1047_p4));
    ii_fu_1765_p2 <= std_logic_vector(unsigned(ii_0_i_i_i_reg_1120) + unsigned(ap_const_lv16_1));
    index_V_fu_1507_p2 <= std_logic_vector(unsigned(t_V_15_reg_2626) + unsigned(select_ln308_reg_2631));

    internal_ap_ready_assign_proc : process(icmp_ln371_fu_1760_p2, ap_CS_fsm_state71)
    begin
        if (((icmp_ln371_fu_1760_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    intra_i_fu_1594_p2 <= std_logic_vector(unsigned(intra_i_0_i_i_i_reg_1065) + unsigned(ap_const_lv4_1));
    j_fu_1792_p2 <= std_logic_vector(unsigned(j_0_i_i_i_reg_1165) + unsigned(ap_const_lv13_1));
    k_fu_1776_p2 <= std_logic_vector(unsigned(ap_phi_mux_k_0_i_i_i_phi_fu_1135_p4) + unsigned(ap_const_lv11_1));
    lhs_V_fu_1674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_14_reg_2736),17));

    low_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_blk_n <= low_threshold_empty_n;
        else 
            low_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    low_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_read <= ap_const_logic_1;
        else 
            low_threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln647_1_fu_2024_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_fu_2005_p3),to_integer(unsigned('0' & zext_ln647_1_fu_2020_p1(31-1 downto 0)))));
    lshr_ln647_2_fu_2078_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_2_fu_2059_p3),to_integer(unsigned('0' & zext_ln647_2_fu_2074_p1(31-1 downto 0)))));
    lshr_ln647_3_fu_2132_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_4_fu_2113_p3),to_integer(unsigned('0' & zext_ln647_3_fu_2128_p1(31-1 downto 0)))));
    lshr_ln647_4_fu_2186_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_6_fu_2167_p3),to_integer(unsigned('0' & zext_ln647_4_fu_2182_p1(31-1 downto 0)))));
    lshr_ln647_5_fu_2240_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_8_fu_2221_p3),to_integer(unsigned('0' & zext_ln647_5_fu_2236_p1(31-1 downto 0)))));
    lshr_ln647_6_fu_2294_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_10_fu_2275_p3),to_integer(unsigned('0' & zext_ln647_6_fu_2290_p1(31-1 downto 0)))));
    lshr_ln647_7_fu_2348_p2 <= std_logic_vector(shift_right(unsigned(select_ln647_12_fu_2329_p3),to_integer(unsigned('0' & zext_ln647_7_fu_2344_p1(31-1 downto 0)))));
    lshr_ln647_fu_1970_p2 <= std_logic_vector(shift_right(unsigned(oBuff_V_q0),to_integer(unsigned('0' & zext_ln647_fu_1966_p1(31-1 downto 0)))));
    mul_ln271_fu_2433_p0 <= mul_ln271_fu_2433_p00(11 - 1 downto 0);
    mul_ln271_fu_2433_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_ln268_reg_2497),26));
    mul_ln271_fu_2433_p1 <= mul_ln271_fu_2433_p10(16 - 1 downto 0);
    mul_ln271_fu_2433_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bramsetsval_reg_2526),26));
    mul_ln295_fu_2445_p0 <= zext_ln267_reg_2556(11 - 1 downto 0);
    mul_ln295_fu_2445_p1 <= mul_ln295_fu_2445_p10(26 - 1 downto 0);
    mul_ln295_fu_2445_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln295_reg_2601),32));
    mul_ln327_fu_2439_p1 <= mul_ln327_fu_2439_p10(11 - 1 downto 0);
    mul_ln327_fu_2439_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2486),23));

    oBuff_V_address0_assign_proc : process(ap_block_pp2_stage0, ap_block_pp3_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter2, zext_ln378_fu_1782_p1, zext_ln544_6_fu_1826_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            oBuff_V_address0 <= zext_ln544_6_fu_1826_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            oBuff_V_address0 <= zext_ln378_fu_1782_p1(6 - 1 downto 0);
        else 
            oBuff_V_address0 <= "XXXXXX";
        end if; 
    end process;


    oBuff_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_enable_reg_pp2_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)))) then 
            oBuff_V_ce0 <= ap_const_logic_1;
        else 
            oBuff_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    oBuff_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln374_reg_2881_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln374_reg_2881_pp2_iter1_reg = ap_const_lv1_0))) then 
            oBuff_V_we0 <= ap_const_logic_1;
        else 
            oBuff_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_dst1_data_V_din_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln348_reg_2727_pp1_iter2_reg, op2_V_read_assign_4_reg_2862, grp_Canny_fu_1214_p_dst_mat_data_V_din, ap_CS_fsm_state2, ap_block_pp1_stage0_01001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            p_dst1_data_V_din <= op2_V_read_assign_4_reg_2862;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_dst1_data_V_din <= grp_Canny_fu_1214_p_dst_mat_data_V_din;
        else 
            p_dst1_data_V_din <= grp_Canny_fu_1214_p_dst_mat_data_V_din;
        end if; 
    end process;


    p_dst1_data_V_i_blk_n_assign_proc : process(p_dst1_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln295_reg_2617, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, icmp_ln374_reg_2881)
    begin
        if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (icmp_ln374_reg_2881 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            p_dst1_data_V_i_blk_n <= p_dst1_data_V_empty_n;
        else 
            p_dst1_data_V_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst1_data_V_o_blk_n_assign_proc : process(p_dst1_data_V_full_n, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, icmp_ln348_reg_2727_pp1_iter2_reg)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0))) then 
            p_dst1_data_V_o_blk_n <= p_dst1_data_V_full_n;
        else 
            p_dst1_data_V_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst1_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln295_reg_2617, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, icmp_ln374_reg_2881, ap_block_pp2_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln374_reg_2881 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln295_reg_2617 = ap_const_lv1_0)))) then 
            p_dst1_data_V_read <= ap_const_logic_1;
        else 
            p_dst1_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_dst1_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln348_reg_2727_pp1_iter2_reg, ap_block_pp1_stage0_11001, grp_Canny_fu_1214_p_dst_mat_data_V_write, ap_CS_fsm_state2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln348_reg_2727_pp1_iter2_reg = ap_const_lv1_0))) then 
            p_dst1_data_V_write <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_dst1_data_V_write <= grp_Canny_fu_1214_p_dst_mat_data_V_write;
        else 
            p_dst1_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_cols_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_blk_n <= p_dst2_cols_empty_n;
        else 
            p_dst2_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst2_cols_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_out_blk_n <= p_dst2_cols_out_full_n;
        else 
            p_dst2_cols_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst2_cols_out_din <= p_dst2_cols_dout;

    p_dst2_cols_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_out_write <= ap_const_logic_1;
        else 
            p_dst2_cols_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_cols_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_cols_read <= ap_const_logic_1;
        else 
            p_dst2_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_data_V_blk_n_assign_proc : process(p_dst2_data_V_full_n, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, icmp_ln383_reg_2890_pp3_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln383_reg_2890_pp3_iter1_reg = ap_const_lv1_0))) then 
            p_dst2_data_V_blk_n <= p_dst2_data_V_full_n;
        else 
            p_dst2_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst2_data_V_din <= (((((((icmp_ln879_33_reg_3071 & select_ln879_22_fu_2406_p3) & select_ln879_21_fu_2399_p3) & select_ln879_20_fu_2392_p3) & select_ln879_19_fu_2385_p3) & select_ln879_18_fu_2378_p3) & select_ln879_17_fu_2371_p3) & select_ln879_fu_2364_p3);

    p_dst2_data_V_write_assign_proc : process(ap_enable_reg_pp3_iter2, icmp_ln383_reg_2890_pp3_iter1_reg, ap_block_pp3_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln383_reg_2890_pp3_iter1_reg = ap_const_lv1_0))) then 
            p_dst2_data_V_write <= ap_const_logic_1;
        else 
            p_dst2_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_rows_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_blk_n <= p_dst2_rows_empty_n;
        else 
            p_dst2_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst2_rows_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_dst2_rows_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_out_blk_n <= p_dst2_rows_out_full_n;
        else 
            p_dst2_rows_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst2_rows_out_din <= p_dst2_rows_dout;

    p_dst2_rows_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_out_write <= ap_const_logic_1;
        else 
            p_dst2_rows_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_dst2_rows_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_dst2_rows_read <= ap_const_logic_1;
        else 
            p_dst2_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_blk_n <= p_src_cols_empty_n;
        else 
            p_src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_read <= ap_const_logic_1;
        else 
            p_src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_V_read_assign_proc : process(grp_Canny_fu_1214_p_src_mat_data_V_read, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_src_data_V_read <= grp_Canny_fu_1214_p_src_mat_data_V_read;
        else 
            p_src_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_blk_n <= p_src_rows_empty_n;
        else 
            p_src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, p_dst2_rows_empty_n, p_dst2_cols_empty_n, low_threshold_empty_n, high_threshold_empty_n, p_dst2_rows_out_full_n, p_dst2_cols_out_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (p_dst2_cols_out_full_n = ap_const_logic_0) or (p_dst2_rows_out_full_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (p_dst2_cols_empty_n = ap_const_logic_0) or (p_dst2_rows_empty_n = ap_const_logic_0) or (p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_read <= ap_const_logic_1;
        else 
            p_src_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    pixel_V_fu_1804_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(ap_phi_mux_t_V_12_phi_fu_1158_p4));
    ram_row_depth_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2486),16));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_7_fu_1572_p2 <= std_logic_vector(unsigned(zext_ln215_fu_1569_p1) - unsigned(zext_ln327_reg_2577));
    ret_V_8_fu_1559_p2 <= std_logic_vector(unsigned(zext_ln327_reg_2577) + unsigned(zext_ln215_3_fu_1556_p1));
    ret_V_fu_1680_p2 <= std_logic_vector(unsigned(lhs_V_fu_1674_p1) + unsigned(rhs_V_fu_1677_p1));
    rhs_V_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln356_reg_2741),17));
    select_ln281_fu_1401_p3 <= 
        ap_const_lv3_0 when (icmp_ln281_fu_1395_p2(0) = '1') else 
        slice_0_i_i_i_reg_1010;
    select_ln295_fu_1415_p3 <= 
        zext_ln267_1_reg_2543 when (icmp_ln283_fu_1409_p2(0) = '1') else 
        mul_ln271_reg_2561;
    select_ln303_1_fu_1463_p3 <= 
        idx2_V_fu_1449_p2 when (icmp_ln879_fu_1444_p2(0) = '1') else 
        ap_phi_mux_t_V_phi_fu_1047_p4;
    select_ln308_1_fu_1489_p3 <= 
        ap_const_lv16_1 when (icmp_ln879_18_fu_1471_p2(0) = '1') else 
        select_ln303_1_fu_1463_p3;
    select_ln308_fu_1481_p3 <= 
        dep_V_fu_1476_p2 when (icmp_ln879_18_fu_1471_p2(0) = '1') else 
        ap_phi_mux_p_0259_0_i_i_i_phi_fu_1036_p4;
    select_ln352_1_fu_1630_p3 <= 
        idx2_V_1_fu_1616_p2 when (icmp_ln879_25_fu_1611_p2(0) = '1') else 
        ap_phi_mux_t_V_13_phi_fu_1102_p4;
    select_ln356_1_fu_1656_p3 <= 
        ap_const_lv16_1 when (icmp_ln879_26_fu_1638_p2(0) = '1') else 
        select_ln352_1_fu_1630_p3;
    select_ln356_fu_1648_p3 <= 
        dep_V_1_fu_1643_p2 when (icmp_ln879_26_fu_1638_p2(0) = '1') else 
        ap_phi_mux_p_0259_2_i_i_i_phi_fu_1091_p4;
    select_ln386_1_fu_1818_p3 <= 
        ap_const_lv32_0 when (icmp_ln879_19_fu_1798_p2(0) = '1') else 
        bit_0_i_i_i_reg_1176;
    select_ln386_fu_1810_p3 <= 
        pixel_V_fu_1804_p2 when (icmp_ln879_19_fu_1798_p2(0) = '1') else 
        ap_phi_mux_t_V_12_phi_fu_1158_p4;
    select_ln647_10_fu_2275_p3 <= 
        tmp_25_fu_2260_p4 when (icmp_ln647_5_fu_2256_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_11_fu_2283_p3 <= 
        sub_ln647_5_fu_2270_p2 when (icmp_ln647_5_fu_2256_p2(0) = '1') else 
        trunc_ln647_7_reg_3004;
    select_ln647_12_fu_2329_p3 <= 
        tmp_26_fu_2314_p4 when (icmp_ln647_6_fu_2310_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_13_fu_2337_p3 <= 
        sub_ln647_6_fu_2324_p2 when (icmp_ln647_6_fu_2310_p2(0) = '1') else 
        trunc_ln647_8_reg_3020;
    select_ln647_1_fu_2013_p3 <= 
        sub_ln647_fu_2000_p2 when (icmp_ln647_fu_1986_p2(0) = '1') else 
        trunc_ln647_2_reg_2924;
    select_ln647_2_fu_2059_p3 <= 
        tmp_21_fu_2044_p4 when (icmp_ln647_1_fu_2040_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_3_fu_2067_p3 <= 
        sub_ln647_1_fu_2054_p2 when (icmp_ln647_1_fu_2040_p2(0) = '1') else 
        trunc_ln647_3_reg_2940;
    select_ln647_4_fu_2113_p3 <= 
        tmp_22_fu_2098_p4 when (icmp_ln647_2_fu_2094_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_5_fu_2121_p3 <= 
        sub_ln647_2_fu_2108_p2 when (icmp_ln647_2_fu_2094_p2(0) = '1') else 
        trunc_ln647_4_reg_2956;
    select_ln647_6_fu_2167_p3 <= 
        tmp_23_fu_2152_p4 when (icmp_ln647_3_fu_2148_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_7_fu_2175_p3 <= 
        sub_ln647_3_fu_2162_p2 when (icmp_ln647_3_fu_2148_p2(0) = '1') else 
        trunc_ln647_5_reg_2972;
    select_ln647_8_fu_2221_p3 <= 
        tmp_24_fu_2206_p4 when (icmp_ln647_4_fu_2202_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln647_9_fu_2229_p3 <= 
        sub_ln647_4_fu_2216_p2 when (icmp_ln647_4_fu_2202_p2(0) = '1') else 
        trunc_ln647_6_reg_2988;
    select_ln647_fu_2005_p3 <= 
        tmp_fu_1990_p4 when (icmp_ln647_fu_1986_p2(0) = '1') else 
        oBuff_V_q0;
    select_ln879_17_fu_2371_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_24_reg_3041(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_18_fu_2378_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_28_reg_3046(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_19_fu_2385_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_29_reg_3051(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_20_fu_2392_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_30_reg_3056(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_21_fu_2399_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_31_reg_3061(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_22_fu_2406_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_32_reg_3066(0) = '1') else 
        ap_const_lv8_0;
    select_ln879_fu_2364_p3 <= 
        ap_const_lv8_FF when (icmp_ln879_20_reg_3036(0) = '1') else 
        ap_const_lv8_0;
        sext_ln544_fu_1577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_7_fu_1572_p2),64));

    slice_fu_1755_p2 <= std_logic_vector(unsigned(select_ln281_reg_2596) + unsigned(ap_const_lv3_1));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln647_1_fu_2054_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_3_reg_2940));
    sub_ln647_2_fu_2108_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_4_reg_2956));
    sub_ln647_3_fu_2162_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_5_reg_2972));
    sub_ln647_4_fu_2216_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_6_reg_2988));
    sub_ln647_5_fu_2270_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_7_reg_3004));
    sub_ln647_6_fu_2324_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_8_reg_3020));
    sub_ln647_fu_2000_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(trunc_ln647_2_reg_2924));
    t_V_14_fu_1622_p3 <= 
        ap_const_lv16_0 when (icmp_ln879_25_fu_1611_p2(0) = '1') else 
        p_0331_2_i_i_i_reg_1076;
    t_V_15_fu_1455_p3 <= 
        ap_const_lv16_0 when (icmp_ln879_fu_1444_p2(0) = '1') else 
        p_0331_0_i_i_i_reg_1021;
    
    tmp_21_fu_2044_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_21_fu_2044_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_21_fu_2044_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_21_fu_2044_p4_i) := oBuff_V_q0(64-1-tmp_21_fu_2044_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_21_fu_2044_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_22_fu_2098_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_22_fu_2098_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_22_fu_2098_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_22_fu_2098_p4_i) := oBuff_V_q0(64-1-tmp_22_fu_2098_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_22_fu_2098_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_23_fu_2152_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_23_fu_2152_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_23_fu_2152_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_23_fu_2152_p4_i) := oBuff_V_q0(64-1-tmp_23_fu_2152_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_23_fu_2152_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_24_fu_2206_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_24_fu_2206_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_24_fu_2206_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_24_fu_2206_p4_i) := oBuff_V_q0(64-1-tmp_24_fu_2206_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_24_fu_2206_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_25_fu_2260_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_25_fu_2260_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_25_fu_2260_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_25_fu_2260_p4_i) := oBuff_V_q0(64-1-tmp_25_fu_2260_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_25_fu_2260_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_26_fu_2314_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_26_fu_2314_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_26_fu_2314_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_26_fu_2314_p4_i) := oBuff_V_q0(64-1-tmp_26_fu_2314_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_26_fu_2314_p4 <= resvalue(64-1 downto 0);
    end process;

    
    tmp_fu_1990_p4_proc : process(oBuff_V_q0)
    variable vlo_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(64+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_fu_1990_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(64 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3F(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := oBuff_V_q0;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(64-1-unsigned(ap_const_lv32_3F(6-1 downto 0)));
            for tmp_fu_1990_p4_i in 0 to 64-1 loop
                v0_cpy(tmp_fu_1990_p4_i) := oBuff_V_q0(64-1-tmp_fu_1990_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(64-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_fu_1990_p4 <= resvalue(64-1 downto 0);
    end process;

    trunc_ln308_fu_1339_p1 <= bramsetsval_fu_1334_p2(5 - 1 downto 0);
    trunc_ln321_7_fu_1664_p1 <= select_ln356_1_fu_1656_p3(5 - 1 downto 0);
    trunc_ln321_fu_1497_p1 <= select_ln308_1_fu_1489_p3(5 - 1 downto 0);
    trunc_ln364_1_fu_2084_p1 <= lshr_ln647_2_fu_2078_p2(2 - 1 downto 0);
    trunc_ln364_2_fu_2138_p1 <= lshr_ln647_3_fu_2132_p2(2 - 1 downto 0);
    trunc_ln364_3_fu_2192_p1 <= lshr_ln647_4_fu_2186_p2(2 - 1 downto 0);
    trunc_ln364_4_fu_2246_p1 <= lshr_ln647_5_fu_2240_p2(2 - 1 downto 0);
    trunc_ln364_5_fu_2300_p1 <= lshr_ln647_6_fu_2294_p2(2 - 1 downto 0);
    trunc_ln364_6_fu_2354_p1 <= lshr_ln647_7_fu_2348_p2(2 - 1 downto 0);
    trunc_ln364_fu_2030_p1 <= lshr_ln647_1_fu_2024_p2(2 - 1 downto 0);
    trunc_ln412_fu_1263_p1 <= p_dst2_rows_dout(16 - 1 downto 0);
    trunc_ln647_1_fu_1976_p1 <= lshr_ln647_fu_1970_p2(2 - 1 downto 0);
    trunc_ln647_2_fu_1843_p1 <= add_ln392_1_fu_1837_p2(7 - 1 downto 0);
    trunc_ln647_3_fu_1859_p1 <= add_ln392_3_fu_1853_p2(7 - 1 downto 0);
    trunc_ln647_4_fu_1875_p1 <= add_ln392_5_fu_1869_p2(7 - 1 downto 0);
    trunc_ln647_5_fu_1891_p1 <= add_ln392_7_fu_1885_p2(7 - 1 downto 0);
    trunc_ln647_6_fu_1907_p1 <= add_ln392_9_fu_1901_p2(7 - 1 downto 0);
    trunc_ln647_7_fu_1923_p1 <= add_ln392_11_fu_1917_p2(7 - 1 downto 0);
    trunc_ln647_8_fu_1939_p1 <= add_ln392_13_fu_1933_p2(7 - 1 downto 0);
    trunc_ln647_fu_1963_p1 <= select_ln386_1_reg_2904(6 - 1 downto 0);
    zext_ln215_3_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_reg_2655_pp0_iter2_reg),17));
    zext_ln215_fu_1569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_reg_2655_pp0_iter2_reg),17));
    zext_ln266_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(slice_h_reg_2480),15));
    zext_ln267_1_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(slice_h_reg_2480),26));
    zext_ln267_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2486),32));
    zext_ln268_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_ln268_reg_2497),15));
    zext_ln269_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_ln269_reg_2515),16));
    zext_ln270_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(udiv_ln268_reg_2497),12));
    zext_ln327_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_reg_2486),17));
    zext_ln378_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_i_i_i_reg_1131_pp2_iter1_reg),64));
    zext_ln544_6_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln386_fu_1810_p3),64));
    zext_ln544_7_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_1680_p2),64));
    zext_ln544_8_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_8_fu_1559_p2),64));
    zext_ln544_fu_1533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_V_reg_2655),64));
    zext_ln647_1_fu_2020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_1_fu_2013_p3),64));
    zext_ln647_2_fu_2074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_3_fu_2067_p3),64));
    zext_ln647_3_fu_2128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_5_fu_2121_p3),64));
    zext_ln647_4_fu_2182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_7_fu_2175_p3),64));
    zext_ln647_5_fu_2236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_9_fu_2229_p3),64));
    zext_ln647_6_fu_2290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_11_fu_2283_p3),64));
    zext_ln647_7_fu_2344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln647_13_fu_2337_p3),64));
    zext_ln647_fu_1966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_fu_1963_p1),64));
    zext_ln879_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln308_reg_2631),23));
end behav;
