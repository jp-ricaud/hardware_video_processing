-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFSobel3x3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_data_V_empty_n : IN STD_LOGIC;
    p_src_mat_data_V_read : OUT STD_LOGIC;
    p_out_mat_data_V_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_out_mat_data_V_full_n : IN STD_LOGIC;
    p_out_mat_data_V_write : OUT STD_LOGIC;
    p_out_mat1_data_V_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_out_mat1_data_V_full_n : IN STD_LOGIC;
    p_out_mat1_data_V_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of xFSobel3x3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv18_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_mat_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln439_reg_1211 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln887_6_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln198_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln891_reg_1361 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat1_data_V_blk_n : STD_LOGIC;
    signal index_assign_reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_reg_365 : STD_LOGIC_VECTOR (12 downto 0);
    signal src_buf_2_1_0_reg_433 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_0_0_reg_445 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_1_0_reg_457 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_0_0_reg_469 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_0_reg_481 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_0_0_reg_493 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_8_reg_505 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_8_reg_505_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op171_read_state11 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal row_ind_2_V_load_reg_1152 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_2_V_1_load_reg_1157 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_load_reg_1163 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_532_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_buf_fu_557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln429_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln439_fu_561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln439_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln887_fu_564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln887_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal readind_1_fu_573_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal readind_1_reg_1197 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_fu_578_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1202 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_fu_582_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_reg_1206 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln439_fu_585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal col_V_2_fu_591_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_2_reg_1215 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal readind_fu_597_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_buf_1_fu_610_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln436_fu_616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_V_fu_630_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_1238 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal buf_0_V_addr_reg_1243 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln887_3_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_646_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_reg_1259 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln193_fu_655_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln193_reg_1264 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln330_fu_661_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln330_reg_1269 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln887_4_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln887_5_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_5_reg_1279 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln544_fu_717_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln544_reg_1284 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln330_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_reg_1289 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_1_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_1_reg_1294 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_2_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_2_reg_1299 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_3_fu_759_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_3_reg_1304 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_4_fu_763_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_4_reg_1309 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_5_fu_767_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_5_reg_1314 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln887_6_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1319_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1319_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_3_fu_784_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_3_reg_1323 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln887_7_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1328_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1328_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln198_fu_795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_6_fu_811_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_6_reg_1339 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_6_reg_1339_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_6_reg_1339_pp1_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln891_fu_829_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_cop_0_V_1_fu_922_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_1_fu_929_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_1_fu_936_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_2_fu_1093_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_2_fu_1100_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_2_fu_1107_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_fu_1114_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal ap_phi_mux_i_op_assign_phi_fu_316_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_op_assign_reg_312 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvars_iv_reg_323 : STD_LOGIC_VECTOR (31 downto 0);
    signal readind_0_reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_345 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_t_V_phi_fu_369_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_6_reg_377 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal row_ind_1_V_1_reg_388 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_ind_V_reg_409 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_398 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_7_reg_421 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_t_V_8_phi_fu_509_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln544_2_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_636_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_3_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_4_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_2_V_fu_142 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_2_fu_538_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_1_fu_146 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_fu_150 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal tmp_6_fu_667_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln887_3_fu_621_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_643_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln193_fu_652_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln887_5_fu_683_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln887_4_fu_679_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_1_fu_702_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1354_fu_707_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_2_fu_711_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln895_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_721_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln887_7_fu_775_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln887_6_fu_771_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_800_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_835_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_846_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_864_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_875_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_893_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_904_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_fu_857_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_fu_886_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_fu_915_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_943_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_955_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_4_fu_967_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_971_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_2_fu_981_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_3_fu_985_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_3_fu_975_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_4_fu_989_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1503_1_fu_963_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1503_fu_951_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_fu_1003_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_fu_995_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_fu_1009_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_fu_1013_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln68_1_fu_999_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_2_fu_1026_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_fu_1038_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_5_fu_1050_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_6_fu_1056_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln68_2_fu_1062_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_3_fu_1066_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_2_fu_1070_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln68_1_fu_1076_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1503_2_fu_1034_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1503_3_fu_1046_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln68_3_fu_1080_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component ip_accel_app_mux_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_mux_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component xFAverageGaussianbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => p_src_mat_data_V_dout);

    buf_2_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => p_src_mat_data_V_dout);

    ip_accel_app_mux_eOg_U87 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_2_reg_1206,
        dout => tmp_6_fu_667_p5);

    ip_accel_app_mux_fYi_U88 : component ip_accel_app_mux_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => zero_ind_V_reg_409,
        din1 => row_ind_0_V_reg_398,
        din2 => row_ind_1_V_1_reg_388,
        din3 => trunc_ln544_reg_1284,
        dout => tmp_7_fu_800_p5);

    ip_accel_app_mux_eOg_U89 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_6_reg_1339_pp1_iter2_reg,
        dout => tmp_s_fu_835_p5);

    ip_accel_app_mux_eOg_U90 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_4_reg_1309,
        dout => tmp_2_fu_846_p5);

    ip_accel_app_mux_eOg_U91 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_6_reg_1339_pp1_iter2_reg,
        dout => tmp_10_fu_864_p5);

    ip_accel_app_mux_eOg_U92 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_5_reg_1314,
        dout => tmp_11_fu_875_p5);

    ip_accel_app_mux_eOg_U93 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_6_reg_1339_pp1_iter2_reg,
        dout => tmp_12_fu_893_p5);

    ip_accel_app_mux_eOg_U94 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_3_reg_1304,
        dout => tmp_13_fu_904_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln887_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln887_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_op_assign_1_reg_345_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_op_assign_1_reg_345 <= init_buf_fu_557_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i_op_assign_1_reg_345 <= init_buf_1_fu_610_p2;
            end if; 
        end if;
    end process;

    i_op_assign_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_op_assign_reg_312 <= init_row_ind_fu_532_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_op_assign_reg_312 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    index_assign_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln439_fu_585_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                index_assign_reg_355 <= readind_fu_597_p2;
            elsif (((icmp_ln887_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                index_assign_reg_355 <= readind_0_reg_333;
            end if; 
        end if;
    end process;

    indvars_iv_reg_323_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvars_iv_reg_323 <= zext_ln439_fu_561_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvars_iv_reg_323 <= add_ln436_fu_616_p2;
            end if; 
        end if;
    end process;

    readind_0_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                readind_0_reg_333 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                readind_0_reg_333 <= readind_1_reg_1197;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                row_ind_0_V_reg_398 <= row_ind_1_V_1_reg_388;
            elsif (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_0_V_reg_398 <= row_ind_2_V_1_load_reg_1157;
            end if; 
        end if;
    end process;

    row_ind_1_V_1_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                row_ind_1_V_1_reg_388 <= zero_ind_V_reg_409;
            elsif (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                row_ind_1_V_1_reg_388 <= row_ind_2_V_2_load_reg_1163;
            end if; 
        end if;
    end process;

    src_buf_0_0_0_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_0_0_reg_493 <= buf_cop_0_V_2_fu_1093_p3;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_0_0_reg_493 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_0_1_0_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_1_0_reg_481 <= buf_cop_0_V_1_fu_922_p3;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_0_1_0_reg_481 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_0_0_reg_469_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_0_0_reg_469 <= buf_cop_1_V_2_fu_1100_p3;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_0_0_reg_469 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_1_0_reg_457_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_1_0_reg_457 <= buf_cop_1_V_1_fu_929_p3;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_1_1_0_reg_457 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_0_0_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_0_0_reg_445 <= buf_cop_2_V_2_fu_1107_p3;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_0_0_reg_445 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_1_0_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_1_0_reg_433 <= buf_cop_2_V_1_fu_936_p3;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                src_buf_2_1_0_reg_433 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_6_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_568_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_6_reg_377 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                t_V_6_reg_377 <= col_V_reg_1238;
            end if; 
        end if;
    end process;

    t_V_7_reg_421_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                t_V_7_reg_421 <= row_V_fu_1114_p2;
            elsif (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                t_V_7_reg_421 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    t_V_8_reg_505_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_8_reg_505 <= col_V_3_reg_1323;
            elsif (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                t_V_8_reg_505 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln439_reg_1211 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_365 <= col_V_2_reg_1215;
            elsif (((icmp_ln887_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_reg_365 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                zero_ind_V_reg_409 <= row_ind_0_V_reg_398;
            elsif (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                zero_ind_V_reg_409 <= row_ind_2_V_load_reg_1152;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                add_ln193_reg_1264 <= add_ln193_fu_655_p2;
                add_ln330_reg_1269 <= add_ln330_fu_661_p2;
                ret_V_reg_1259 <= ret_V_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_fu_779_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln198_reg_1335 <= and_ln198_fu_795_p2;
                icmp_ln887_7_reg_1328 <= icmp_ln887_7_fu_790_p2;
                trunc_ln321_6_reg_1339 <= trunc_ln321_6_fu_811_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                and_ln330_1_reg_1294 <= and_ln330_1_fu_741_p2;
                and_ln330_2_reg_1299 <= and_ln330_2_fu_753_p2;
                and_ln330_reg_1289 <= and_ln330_fu_729_p2;
                icmp_ln887_5_reg_1279 <= icmp_ln887_5_fu_692_p2;
                trunc_ln321_3_reg_1304 <= trunc_ln321_3_fu_759_p1;
                trunc_ln321_4_reg_1309 <= trunc_ln321_4_fu_763_p1;
                trunc_ln321_5_reg_1314 <= trunc_ln321_5_fu_767_p1;
                trunc_ln544_reg_1284 <= trunc_ln544_fu_717_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                buf_0_V_addr_reg_1243 <= zext_ln544_fu_636_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_V_2_reg_1215 <= col_V_2_fu_591_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_3_reg_1323 <= col_V_3_fu_784_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                col_V_reg_1238 <= col_V_fu_630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln439_reg_1211 <= icmp_ln439_fu_585_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln887_6_reg_1319 <= icmp_ln887_6_fu_779_p2;
                icmp_ln887_6_reg_1319_pp1_iter1_reg <= icmp_ln887_6_reg_1319;
                icmp_ln887_7_reg_1328_pp1_iter1_reg <= icmp_ln887_7_reg_1328;
                t_V_8_reg_505_pp1_iter1_reg <= t_V_8_reg_505;
                trunc_ln321_6_reg_1339_pp1_iter1_reg <= trunc_ln321_6_reg_1339;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln887_6_reg_1319_pp1_iter2_reg <= icmp_ln887_6_reg_1319_pp1_iter1_reg;
                icmp_ln887_7_reg_1328_pp1_iter2_reg <= icmp_ln887_7_reg_1328_pp1_iter1_reg;
                trunc_ln321_6_reg_1339_pp1_iter2_reg <= trunc_ln321_6_reg_1339_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1319_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln891_reg_1361 <= icmp_ln891_fu_829_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_568_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                readind_1_reg_1197 <= readind_1_fu_573_p2;
                trunc_ln321_reg_1202 <= trunc_ln321_fu_578_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_0) and (ap_phi_mux_i_op_assign_phi_fu_316_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_1_fu_146(1 downto 0) <= row_ind_0_V_2_fu_538_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_2_V_1_load_reg_1157(1 downto 0) <= row_ind_2_V_1_fu_146(1 downto 0);
                    row_ind_2_V_2_load_reg_1163(1 downto 0) <= row_ind_2_V_2_fu_150(1 downto 0);
                    row_ind_2_V_load_reg_1152(1 downto 0) <= row_ind_2_V_fu_142(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_op_assign_phi_fu_316_p4 = ap_const_lv2_1)) and not((ap_phi_mux_i_op_assign_phi_fu_316_p4 = ap_const_lv2_0)) and (icmp_ln429_fu_526_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_2_fu_150(1 downto 0) <= row_ind_0_V_2_fu_538_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_0) and (ap_phi_mux_i_op_assign_phi_fu_316_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_fu_142(1 downto 0) <= row_ind_0_V_2_fu_538_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_568_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln321_2_reg_1206 <= trunc_ln321_2_fu_582_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln439_reg_1181(15 downto 0) <= zext_ln439_fu_561_p1(15 downto 0);
                    zext_ln887_reg_1188(1 downto 0) <= zext_ln887_fu_564_p1(1 downto 0);
            end if;
        end if;
    end process;
    row_ind_2_V_load_reg_1152(12 downto 2) <= "00000000000";
    row_ind_2_V_1_load_reg_1157(12 downto 2) <= "00000000000";
    row_ind_2_V_2_load_reg_1163(12 downto 2) <= "00000000000";
    zext_ln439_reg_1181(31 downto 16) <= "0000000000000000";
    zext_ln887_reg_1188(31 downto 2) <= "000000000000000000000000000000";
    row_ind_2_V_fu_142(12 downto 2) <= "00000000000";
    row_ind_2_V_1_fu_146(12 downto 2) <= "00000000000";
    row_ind_2_V_2_fu_150(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_CS_fsm_state2, icmp_ln429_fu_526_p2, icmp_ln887_fu_568_p2, ap_CS_fsm_state3, icmp_ln439_fu_585_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, icmp_ln887_3_fu_625_p2, icmp_ln887_4_fu_687_p2, ap_CS_fsm_state9, icmp_ln887_6_fu_779_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln429_fu_526_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln887_fu_568_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln439_fu_585_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln439_fu_585_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln887_3_fu_625_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln887_6_fu_779_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln887_6_fu_779_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln193_fu_655_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(trunc_ln193_fu_652_p1));
    add_ln330_fu_661_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(lhs_V_fu_643_p1));
    add_ln436_fu_616_p2 <= std_logic_vector(unsigned(zext_ln439_reg_1181) + unsigned(indvars_iv_reg_323));
    add_ln68_fu_1013_p2 <= std_logic_vector(unsigned(zext_ln68_fu_995_p1) + unsigned(sext_ln68_fu_1009_p1));
    and_ln198_fu_795_p2 <= (icmp_ln887_7_fu_790_p2 and icmp_ln887_5_reg_1279);
    and_ln330_1_fu_741_p2 <= (icmp_ln895_fu_697_p2 and icmp_ln895_2_fu_735_p2);
    and_ln330_2_fu_753_p2 <= (icmp_ln895_fu_697_p2 and icmp_ln895_3_fu_747_p2);
    and_ln330_fu_729_p2 <= (tmp_14_fu_721_p3 and icmp_ln895_fu_697_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln439_reg_1211)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln439_reg_1211 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln439_reg_1211)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln439_reg_1211 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361, ap_predicate_op171_read_state11)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)))) or ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op171_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361, ap_predicate_op171_read_state11)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)))) or ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op171_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361, ap_predicate_op171_read_state11)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)))) or ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op171_read_state11 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter1_assign_proc : process(p_src_mat_data_V_empty_n, ap_predicate_op171_read_state11)
    begin
                ap_block_state11_pp1_stage0_iter1 <= ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op171_read_state11 = ap_const_boolean_1));
    end process;

        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp1_stage0_iter3_assign_proc : process(p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, icmp_ln891_reg_1361)
    begin
                ap_block_state13_pp1_stage0_iter3 <= (((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1361 = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(p_src_mat_data_V_empty_n, icmp_ln439_reg_1211)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((icmp_ln439_reg_1211 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln439_fu_585_p2)
    begin
        if ((icmp_ln439_fu_585_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(icmp_ln887_6_fu_779_p2)
    begin
        if ((icmp_ln887_6_fu_779_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln887_4_fu_687_p2, ap_CS_fsm_state9)
    begin
        if ((((icmp_ln887_4_fu_687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_op_assign_phi_fu_316_p4 <= i_op_assign_reg_312;

    ap_phi_mux_t_V_8_phi_fu_509_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_6_reg_1319, t_V_8_reg_505, col_V_3_reg_1323)
    begin
        if (((icmp_ln887_6_reg_1319 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_8_phi_fu_509_p4 <= col_V_3_reg_1323;
        else 
            ap_phi_mux_t_V_8_phi_fu_509_p4 <= t_V_8_reg_505;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_369_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln439_reg_1211, t_V_reg_365, col_V_2_reg_1215)
    begin
        if (((icmp_ln439_reg_1211 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_t_V_phi_fu_369_p4 <= col_V_2_reg_1215;
        else 
            ap_phi_mux_t_V_phi_fu_369_p4 <= t_V_reg_365;
        end if; 
    end process;


    ap_predicate_op171_read_state11_assign_proc : process(icmp_ln887_6_reg_1319, and_ln198_reg_1335)
    begin
                ap_predicate_op171_read_state11 <= ((ap_const_lv1_1 = and_ln198_reg_1335) and (icmp_ln887_6_reg_1319 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(icmp_ln887_4_fu_687_p2, ap_CS_fsm_state9)
    begin
        if (((icmp_ln887_4_fu_687_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2, zext_ln544_fu_636_p1, zext_ln544_4_fu_822_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address0 <= zext_ln544_4_fu_822_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_0_V_address0 <= zext_ln544_fu_636_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, buf_0_V_addr_reg_1243, ap_CS_fsm_state8, zext_ln544_2_fu_603_p1, zext_ln544_3_fu_815_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= zext_ln544_3_fu_815_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_address1 <= buf_0_V_addr_reg_1243;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_0_V_address1 <= zext_ln544_2_fu_603_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_src_mat_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_state8, tmp_6_fu_667_p5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_d1 <= tmp_6_fu_667_p5;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_0_V_d1 <= p_src_mat_data_V_dout;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_6_reg_1319, and_ln198_reg_1335, ap_block_pp1_stage0_11001, trunc_ln321_reg_1202, ap_block_pp0_stage0_11001, trunc_ln321_3_reg_1304, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_lv1_1 = and_ln198_reg_1335) and (icmp_ln887_6_reg_1319 = ap_const_lv1_1) and (trunc_ln321_3_reg_1304 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_reg_1202 = ap_const_lv2_0)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2, zext_ln544_fu_636_p1, zext_ln544_4_fu_822_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address0 <= zext_ln544_4_fu_822_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_1_V_address0 <= zext_ln544_fu_636_p1(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, zext_ln544_2_fu_603_p1, zext_ln544_3_fu_815_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= zext_ln544_3_fu_815_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= zext_ln544_2_fu_603_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_6_reg_1319, and_ln198_reg_1335, ap_block_pp1_stage0_11001, trunc_ln321_reg_1202, ap_block_pp0_stage0_11001, trunc_ln321_3_reg_1304)
    begin
        if ((((ap_const_lv1_1 = and_ln198_reg_1335) and (icmp_ln887_6_reg_1319 = ap_const_lv1_1) and (trunc_ln321_3_reg_1304 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (trunc_ln321_reg_1202 = ap_const_lv2_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2, zext_ln544_fu_636_p1, zext_ln544_4_fu_822_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_address0 <= zext_ln544_4_fu_822_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buf_2_V_address0 <= zext_ln544_fu_636_p1(11 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, zext_ln544_2_fu_603_p1, zext_ln544_3_fu_815_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_2_V_address1 <= zext_ln544_3_fu_815_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_2_V_address1 <= zext_ln544_2_fu_603_p1(11 - 1 downto 0);
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state7, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_6_reg_1319, and_ln198_reg_1335, ap_block_pp1_stage0_11001, trunc_ln321_reg_1202, ap_block_pp0_stage0_11001, trunc_ln321_3_reg_1304)
    begin
        if (((not((trunc_ln321_3_reg_1304 = ap_const_lv2_0)) and not((trunc_ln321_3_reg_1304 = ap_const_lv2_1)) and (ap_const_lv1_1 = and_ln198_reg_1335) and (icmp_ln887_6_reg_1319 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((trunc_ln321_reg_1202 = ap_const_lv2_0)) and not((trunc_ln321_reg_1202 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_cop_0_V_1_fu_922_p3 <= 
        buf_cop_0_V_fu_857_p3 when (icmp_ln887_7_reg_1328_pp1_iter2_reg(0) = '1') else 
        src_buf_0_1_0_reg_481;
    buf_cop_0_V_2_fu_1093_p3 <= 
        buf_cop_0_V_1_fu_922_p3 when (icmp_ln891_reg_1361(0) = '1') else 
        src_buf_0_1_0_reg_481;
    buf_cop_0_V_fu_857_p3 <= 
        tmp_s_fu_835_p5 when (and_ln330_reg_1289(0) = '1') else 
        tmp_2_fu_846_p5;
    buf_cop_1_V_1_fu_929_p3 <= 
        buf_cop_1_V_fu_886_p3 when (icmp_ln887_7_reg_1328_pp1_iter2_reg(0) = '1') else 
        src_buf_1_1_0_reg_457;
    buf_cop_1_V_2_fu_1100_p3 <= 
        buf_cop_1_V_1_fu_929_p3 when (icmp_ln891_reg_1361(0) = '1') else 
        src_buf_1_1_0_reg_457;
    buf_cop_1_V_fu_886_p3 <= 
        tmp_10_fu_864_p5 when (and_ln330_1_reg_1294(0) = '1') else 
        tmp_11_fu_875_p5;
    buf_cop_2_V_1_fu_936_p3 <= 
        buf_cop_2_V_fu_915_p3 when (icmp_ln887_7_reg_1328_pp1_iter2_reg(0) = '1') else 
        src_buf_2_1_0_reg_433;
    buf_cop_2_V_2_fu_1107_p3 <= 
        buf_cop_2_V_1_fu_936_p3 when (icmp_ln891_reg_1361(0) = '1') else 
        src_buf_2_1_0_reg_433;
    buf_cop_2_V_fu_915_p3 <= 
        tmp_12_fu_893_p5 when (and_ln330_2_reg_1299(0) = '1') else 
        tmp_13_fu_904_p5;
    col_V_2_fu_591_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_phi_fu_369_p4) + unsigned(ap_const_lv13_1));
    col_V_3_fu_784_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_8_phi_fu_509_p4) + unsigned(ap_const_lv13_1));
    col_V_fu_630_p2 <= std_logic_vector(unsigned(t_V_6_reg_377) + unsigned(ap_const_lv13_1));
    icmp_ln429_fu_526_p2 <= "1" when (i_op_assign_reg_312 = ap_const_lv2_3) else "0";
    icmp_ln439_fu_585_p2 <= "1" when (index_assign_reg_355 = indvars_iv_reg_323) else "0";
    icmp_ln887_3_fu_625_p2 <= "1" when (unsigned(zext_ln887_3_fu_621_p1) < unsigned(img_width)) else "0";
    icmp_ln887_4_fu_687_p2 <= "1" when (unsigned(zext_ln887_5_fu_683_p1) < unsigned(ret_V_reg_1259)) else "0";
    icmp_ln887_5_fu_692_p2 <= "1" when (unsigned(zext_ln887_4_fu_679_p1) < unsigned(img_height)) else "0";
    icmp_ln887_6_fu_779_p2 <= "1" when (unsigned(zext_ln887_7_fu_775_p1) < unsigned(add_ln193_reg_1264)) else "0";
    icmp_ln887_7_fu_790_p2 <= "1" when (unsigned(zext_ln887_6_fu_771_p1) < unsigned(img_width)) else "0";
    icmp_ln887_fu_568_p2 <= "1" when (signed(i_op_assign_1_reg_345) < signed(zext_ln887_reg_1188)) else "0";
    icmp_ln891_fu_829_p2 <= "1" when (t_V_8_reg_505_pp1_iter1_reg = ap_const_lv13_0) else "0";
    icmp_ln895_2_fu_735_p2 <= "1" when (signed(ret_V_2_fu_711_p2) < signed(ap_const_lv18_1)) else "0";
    icmp_ln895_3_fu_747_p2 <= "1" when (signed(ret_V_1_fu_702_p2) > signed(ap_const_lv17_0)) else "0";
    icmp_ln895_fu_697_p2 <= "1" when (signed(zext_ln887_5_fu_683_p1) > signed(add_ln330_reg_1269)) else "0";
    init_buf_1_fu_610_p2 <= std_logic_vector(unsigned(i_op_assign_1_reg_345) + unsigned(ap_const_lv32_1));
    init_buf_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_1_fu_146),32));
    init_row_ind_fu_532_p2 <= std_logic_vector(unsigned(i_op_assign_reg_312) + unsigned(ap_const_lv2_1));
    lhs_V_2_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_0_0_0_reg_493),9));
    lhs_V_4_fu_967_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_cop_0_V_1_fu_922_p3),9));
    lhs_V_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));

    p_out_mat1_data_V_blk_n_assign_proc : process(p_out_mat1_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln891_reg_1361 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            p_out_mat1_data_V_blk_n <= p_out_mat1_data_V_full_n;
        else 
            p_out_mat1_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_out_mat1_data_V_din <= std_logic_vector(unsigned(zext_ln1503_3_fu_1046_p1) + unsigned(sub_ln68_3_fu_1080_p2));

    p_out_mat1_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln891_reg_1361 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_out_mat1_data_V_write <= ap_const_logic_1;
        else 
            p_out_mat1_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_out_mat_data_V_blk_n_assign_proc : process(p_out_mat_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln891_reg_1361 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            p_out_mat_data_V_blk_n <= p_out_mat_data_V_full_n;
        else 
            p_out_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_out_mat_data_V_din <= std_logic_vector(unsigned(add_ln68_fu_1013_p2) - unsigned(zext_ln68_1_fu_999_p1));

    p_out_mat_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln891_reg_1361, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln891_reg_1361 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_out_mat_data_V_write <= ap_const_logic_1;
        else 
            p_out_mat_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_data_V_blk_n_assign_proc : process(p_src_mat_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln439_reg_1211, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_6_reg_1319, and_ln198_reg_1335)
    begin
        if ((((ap_const_lv1_1 = and_ln198_reg_1335) and (icmp_ln887_6_reg_1319 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln439_reg_1211 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_data_V_blk_n <= p_src_mat_data_V_empty_n;
        else 
            p_src_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln439_reg_1211, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op171_read_state11, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op171_read_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln439_reg_1211 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_data_V_read <= ap_const_logic_1;
        else 
            p_src_mat_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_fu_955_p3 <= (buf_cop_1_V_1_fu_929_p3 & ap_const_lv1_0);
    r_V_2_fu_1026_p3 <= (src_buf_0_1_0_reg_481 & ap_const_lv1_0);
    r_V_3_fu_1038_p3 <= (src_buf_2_1_0_reg_433 & ap_const_lv1_0);
    r_V_fu_943_p3 <= (src_buf_1_0_0_reg_469 & ap_const_lv1_0);
    readind_1_fu_573_p2 <= std_logic_vector(unsigned(zext_ln439_reg_1181) + unsigned(readind_0_reg_333));
    readind_fu_597_p2 <= std_logic_vector(unsigned(index_assign_reg_355) + unsigned(ap_const_lv32_1));
    ret_V_1_fu_702_p2 <= std_logic_vector(unsigned(zext_ln887_5_fu_683_p1) - unsigned(add_ln330_reg_1269));
    ret_V_2_fu_711_p2 <= std_logic_vector(unsigned(ap_const_lv18_2) - unsigned(sext_ln1354_fu_707_p1));
    ret_V_3_fu_975_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_967_p1) + unsigned(rhs_V_fu_971_p1));
    ret_V_4_fu_989_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_981_p1) + unsigned(rhs_V_3_fu_985_p1));
    ret_V_5_fu_1050_p2 <= std_logic_vector(unsigned(rhs_V_fu_971_p1) + unsigned(rhs_V_3_fu_985_p1));
    ret_V_6_fu_1056_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_967_p1) + unsigned(lhs_V_2_fu_981_p1));
    ret_V_fu_646_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(lhs_V_fu_643_p1));
    rhs_V_3_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf_2_0_0_reg_445),9));
    rhs_V_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_cop_2_V_1_fu_936_p3),9));
    row_V_fu_1114_p2 <= std_logic_vector(unsigned(t_V_7_reg_421) + unsigned(ap_const_lv13_1));
    row_ind_0_V_2_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_312),13));
        sext_ln1354_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_1_fu_702_p2),18));

        sext_ln68_1_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_2_fu_1070_p2),11));

        sext_ln68_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_fu_1003_p2),11));

    sub_ln68_2_fu_1070_p2 <= std_logic_vector(unsigned(zext_ln68_2_fu_1062_p1) - unsigned(zext_ln68_3_fu_1066_p1));
    sub_ln68_3_fu_1080_p2 <= std_logic_vector(signed(sext_ln68_1_fu_1076_p1) - signed(zext_ln1503_2_fu_1034_p1));
    sub_ln68_fu_1003_p2 <= std_logic_vector(unsigned(zext_ln1503_1_fu_963_p1) - unsigned(zext_ln1503_fu_951_p1));
    tmp_14_fu_721_p3 <= ret_V_2_fu_711_p2(17 downto 17);
    trunc_ln193_fu_652_p1 <= img_width(14 - 1 downto 0);
    trunc_ln321_2_fu_582_p1 <= row_ind_2_V_1_load_reg_1157(2 - 1 downto 0);
    trunc_ln321_3_fu_759_p1 <= row_ind_1_V_1_reg_388(2 - 1 downto 0);
    trunc_ln321_4_fu_763_p1 <= zero_ind_V_reg_409(2 - 1 downto 0);
    trunc_ln321_5_fu_767_p1 <= row_ind_0_V_reg_398(2 - 1 downto 0);
    trunc_ln321_6_fu_811_p1 <= tmp_7_fu_800_p5(2 - 1 downto 0);
    trunc_ln321_fu_578_p1 <= i_op_assign_1_reg_345(2 - 1 downto 0);
    trunc_ln544_fu_717_p1 <= ret_V_2_fu_711_p2(2 - 1 downto 0);
    zext_ln1503_1_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_955_p3),10));
    zext_ln1503_2_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_1026_p3),11));
    zext_ln1503_3_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_1038_p3),11));
    zext_ln1503_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_943_p3),10));
    zext_ln439_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_width),32));
    zext_ln544_2_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_365),64));
    zext_ln544_3_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_505),64));
    zext_ln544_4_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_505_pp1_iter1_reg),64));
    zext_ln544_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_377),64));
    zext_ln68_1_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_fu_989_p2),11));
    zext_ln68_2_fu_1062_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_5_fu_1050_p2),10));
    zext_ln68_3_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_fu_1056_p2),10));
    zext_ln68_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_fu_975_p2),11));
    zext_ln887_3_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_377),16));
    zext_ln887_4_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_421),16));
    zext_ln887_5_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_421),17));
    zext_ln887_6_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_8_phi_fu_509_p4),16));
    zext_ln887_7_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_8_phi_fu_509_p4),14));
    zext_ln887_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_2_fu_150),32));
end behav;
