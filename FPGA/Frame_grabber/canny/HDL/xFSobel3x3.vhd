-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFSobel3x3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_data_V_empty_n : IN STD_LOGIC;
    p_src_mat_data_V_read : OUT STD_LOGIC;
    p_out_mat_data_V_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_out_mat_data_V_full_n : IN STD_LOGIC;
    p_out_mat_data_V_write : OUT STD_LOGIC;
    p_out_mat1_data_V_din : OUT STD_LOGIC_VECTOR (10 downto 0);
    p_out_mat1_data_V_full_n : IN STD_LOGIC;
    p_out_mat1_data_V_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of xFSobel3x3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv18_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_mat_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln439_reg_1187 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln887_6_reg_1312 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln198_reg_1328 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal icmp_ln891_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_1347_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat1_data_V_blk_n : STD_LOGIC;
    signal index_assign_reg_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal t_V_reg_362 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_reg_362_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal src_buf_2_1_0_reg_430 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_0_0_reg_442 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_1_0_reg_454 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_0_0_reg_466 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_0_reg_478 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_0_0_reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_8_reg_502 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_8_reg_502_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state13_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op174_read_state14 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal t_V_8_reg_502_pp1_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_ind_2_V_load_reg_1128 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_2_V_1_load_reg_1133 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_load_reg_1139 : STD_LOGIC_VECTOR (12 downto 0);
    signal init_row_ind_fu_536_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal init_buf_fu_561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln429_fu_530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln439_fu_565_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln439_reg_1157 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln887_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln887_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal readind_1_fu_577_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal readind_1_reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln321_fu_582_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1178 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_fu_586_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_reg_1182 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln439_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_2_fu_595_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_2_reg_1191 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal readind_fu_601_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal init_buf_1_fu_614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln436_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_V_fu_634_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_1214 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal buf_0_V_addr_reg_1219 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln887_3_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_650_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_reg_1235 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln193_fu_659_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln193_reg_1240 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln330_fu_665_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln330_reg_1245 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_671_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_1251 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln887_5_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_5_reg_1259 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln887_4_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_reg_1264 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_1_fu_705_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_1_reg_1271 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln544_fu_719_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln544_reg_1277 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal and_ln330_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_1_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_1_reg_1287 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_2_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln330_2_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_3_fu_757_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_3_reg_1297 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_4_fu_761_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_4_reg_1302 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_5_fu_765_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_5_reg_1307 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln887_6_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1312_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1312_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1312_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1312_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_6_reg_1312_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_3_fu_782_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_3_reg_1316 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln887_7_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1321 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1321_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1321_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1321_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_7_reg_1321_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln198_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln198_reg_1328_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_1347_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_6_fu_829_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_6_reg_1354 : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_load_1_reg_1361 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_load_1_reg_1371 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_load_1_reg_1381 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_1_fu_902_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_1_reg_1391 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal buf_cop_1_V_1_fu_909_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_1_reg_1396 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_1_fu_916_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_1_reg_1401 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_x_V_fu_999_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal g_x_V_reg_1406 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_2_fu_1005_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_2_reg_1411 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_fu_1013_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_3_reg_1416 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln68_2_fu_1041_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_2_reg_1421 : STD_LOGIC_VECTOR (9 downto 0);
    signal buf_cop_0_V_2_fu_1047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_2_reg_1426 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_2_fu_1054_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_2_reg_1431 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_2_fu_1061_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_2_reg_1436 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_fu_1090_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal ap_phi_mux_i_op_assign_phi_fu_313_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_op_assign_reg_309 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvars_iv_reg_320 : STD_LOGIC_VECTOR (31 downto 0);
    signal readind_0_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_t_V_phi_fu_366_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_6_reg_374 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal row_ind_1_V_1_reg_385 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_ind_V_reg_406 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_395 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_7_reg_418 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_2_0_0_phi_fu_446_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_1_0_phi_fu_458_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_0_0_phi_fu_470_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_0_0_phi_fu_494_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_t_V_8_phi_fu_506_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln544_2_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_3_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_4_fu_805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_2_V_fu_142 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_2_fu_542_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_1_fu_146 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_fu_150 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln887_3_fu_625_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_647_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln193_fu_656_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln887_5_fu_686_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln887_4_fu_682_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1354_fu_710_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ret_V_2_fu_713_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_14_fu_723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln887_7_fu_773_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln887_6_fu_769_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_818_p5 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_833_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_841_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_856_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_864_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_879_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_887_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_0_V_fu_849_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_1_V_fu_872_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_cop_2_V_fu_895_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_923_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_935_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_4_fu_947_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_fu_951_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lhs_V_2_fu_961_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal rhs_V_3_fu_965_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_3_fu_955_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_4_fu_969_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1503_1_fu_943_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1503_fu_931_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_fu_983_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_fu_975_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln68_fu_989_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln68_fu_993_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln68_1_fu_979_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_5_fu_1021_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_6_fu_1027_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln68_2_fu_1033_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln68_3_fu_1037_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln68_1_fu_1074_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1503_2_fu_1068_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1503_3_fu_1071_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln68_3_fu_1077_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component ip_accel_app_mux_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_mux_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (12 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component xFAverageGaussianbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => reg_514);

    buf_2_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => reg_514);

    ip_accel_app_mux_eOg_U87 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_2_reg_1182,
        dout => tmp_6_fu_671_p5);

    ip_accel_app_mux_fYi_U88 : component ip_accel_app_mux_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 13,
        din3_WIDTH => 2,
        dout_WIDTH => 13)
    port map (
        din0 => zero_ind_V_reg_406,
        din1 => row_ind_0_V_reg_395,
        din2 => row_ind_1_V_1_reg_385,
        din3 => trunc_ln544_reg_1277,
        dout => tmp_7_fu_818_p5);

    ip_accel_app_mux_eOg_U89 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_1_reg_1361,
        din1 => buf_1_V_load_1_reg_1371,
        din2 => buf_2_V_load_1_reg_1381,
        din3 => trunc_ln321_6_reg_1354,
        dout => tmp_s_fu_833_p5);

    ip_accel_app_mux_eOg_U90 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_1_reg_1361,
        din1 => buf_1_V_load_1_reg_1371,
        din2 => buf_2_V_load_1_reg_1381,
        din3 => trunc_ln321_4_reg_1302,
        dout => tmp_2_fu_841_p5);

    ip_accel_app_mux_eOg_U91 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_1_reg_1361,
        din1 => buf_1_V_load_1_reg_1371,
        din2 => buf_2_V_load_1_reg_1381,
        din3 => trunc_ln321_6_reg_1354,
        dout => tmp_10_fu_856_p5);

    ip_accel_app_mux_eOg_U92 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_1_reg_1361,
        din1 => buf_1_V_load_1_reg_1371,
        din2 => buf_2_V_load_1_reg_1381,
        din3 => trunc_ln321_5_reg_1307,
        dout => tmp_11_fu_864_p5);

    ip_accel_app_mux_eOg_U93 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_1_reg_1361,
        din1 => buf_1_V_load_1_reg_1371,
        din2 => buf_2_V_load_1_reg_1381,
        din3 => trunc_ln321_6_reg_1354,
        dout => tmp_12_fu_879_p5);

    ip_accel_app_mux_eOg_U94 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_load_1_reg_1361,
        din1 => buf_1_V_load_1_reg_1371,
        din2 => buf_2_V_load_1_reg_1381,
        din3 => trunc_ln321_3_reg_1297,
        dout => tmp_13_fu_887_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln887_fu_572_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln887_fu_572_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state13)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state13);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_op_assign_1_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_op_assign_1_reg_342 <= init_buf_fu_561_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_op_assign_1_reg_342 <= init_buf_1_fu_614_p2;
            end if; 
        end if;
    end process;

    i_op_assign_reg_309_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_op_assign_reg_309 <= init_row_ind_fu_536_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_op_assign_reg_309 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    index_assign_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln439_fu_589_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                index_assign_reg_352 <= readind_fu_601_p2;
            elsif (((icmp_ln887_fu_572_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                index_assign_reg_352 <= readind_0_reg_330;
            end if; 
        end if;
    end process;

    indvars_iv_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvars_iv_reg_320 <= zext_ln439_fu_565_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvars_iv_reg_320 <= add_ln436_fu_620_p2;
            end if; 
        end if;
    end process;

    readind_0_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                readind_0_reg_330 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                readind_0_reg_330 <= readind_1_reg_1173;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                row_ind_0_V_reg_395 <= row_ind_1_V_1_reg_385;
            elsif (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                row_ind_0_V_reg_395 <= row_ind_2_V_1_load_reg_1133;
            end if; 
        end if;
    end process;

    row_ind_1_V_1_reg_385_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                row_ind_1_V_1_reg_385 <= zero_ind_V_reg_406;
            elsif (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                row_ind_1_V_1_reg_385 <= row_ind_2_V_2_load_reg_1139;
            end if; 
        end if;
    end process;

    src_buf_0_0_0_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_0_0_reg_490 <= buf_cop_0_V_2_reg_1426;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                src_buf_0_0_0_reg_490 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_0_1_0_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_1_0_reg_478 <= buf_cop_0_V_1_reg_1391;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                src_buf_0_1_0_reg_478 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_0_0_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_0_0_reg_466 <= buf_cop_1_V_2_reg_1431;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                src_buf_1_0_0_reg_466 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_1_0_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_1_0_reg_454 <= buf_cop_1_V_1_reg_1396;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                src_buf_1_1_0_reg_454 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_0_0_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_0_0_reg_442 <= buf_cop_2_V_2_reg_1436;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                src_buf_2_0_0_reg_442 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_1_0_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_1_0_reg_430 <= buf_cop_2_V_1_reg_1401;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                src_buf_2_1_0_reg_430 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_6_reg_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_572_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_6_reg_374 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                t_V_6_reg_374 <= col_V_reg_1214;
            end if; 
        end if;
    end process;

    t_V_7_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                t_V_7_reg_418 <= row_V_fu_1090_p2;
            elsif (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                t_V_7_reg_418 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    t_V_8_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_8_reg_502 <= col_V_3_reg_1316;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                t_V_8_reg_502 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln439_reg_1187 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_362 <= col_V_2_reg_1191;
            elsif (((icmp_ln887_fu_572_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                t_V_reg_362 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                zero_ind_V_reg_406 <= row_ind_0_V_reg_395;
            elsif (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                zero_ind_V_reg_406 <= row_ind_2_V_load_reg_1128;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                add_ln193_reg_1240 <= add_ln193_fu_659_p2;
                add_ln330_reg_1245 <= add_ln330_fu_665_p2;
                ret_V_reg_1235 <= ret_V_fu_650_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_fu_777_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln198_reg_1328 <= and_ln198_fu_793_p2;
                icmp_ln887_7_reg_1321 <= icmp_ln887_7_fu_788_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln198_reg_1328_pp1_iter1_reg <= and_ln198_reg_1328;
                icmp_ln887_6_reg_1312 <= icmp_ln887_6_fu_777_p2;
                icmp_ln887_6_reg_1312_pp1_iter1_reg <= icmp_ln887_6_reg_1312;
                icmp_ln887_7_reg_1321_pp1_iter1_reg <= icmp_ln887_7_reg_1321;
                t_V_8_reg_502_pp1_iter1_reg <= t_V_8_reg_502;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                and_ln330_1_reg_1287 <= and_ln330_1_fu_742_p2;
                and_ln330_2_reg_1292 <= and_ln330_2_fu_752_p2;
                and_ln330_reg_1282 <= and_ln330_fu_731_p2;
                trunc_ln321_3_reg_1297 <= trunc_ln321_3_fu_757_p1;
                trunc_ln321_4_reg_1302 <= trunc_ln321_4_fu_761_p1;
                trunc_ln321_5_reg_1307 <= trunc_ln321_5_fu_765_p1;
                trunc_ln544_reg_1277 <= trunc_ln544_fu_719_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                buf_0_V_addr_reg_1219 <= zext_ln544_fu_640_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_0_V_load_1_reg_1361 <= buf_0_V_q0;
                buf_1_V_load_1_reg_1371 <= buf_1_V_q0;
                buf_2_V_load_1_reg_1381 <= buf_2_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                buf_cop_0_V_1_reg_1391 <= buf_cop_0_V_1_fu_902_p3;
                buf_cop_0_V_2_reg_1426 <= buf_cop_0_V_2_fu_1047_p3;
                buf_cop_1_V_1_reg_1396 <= buf_cop_1_V_1_fu_909_p3;
                buf_cop_1_V_2_reg_1431 <= buf_cop_1_V_2_fu_1054_p3;
                buf_cop_2_V_1_reg_1401 <= buf_cop_2_V_1_fu_916_p3;
                buf_cop_2_V_2_reg_1436 <= buf_cop_2_V_2_fu_1061_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                col_V_2_reg_1191 <= col_V_2_fu_595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_3_reg_1316 <= col_V_3_fu_782_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                col_V_reg_1214 <= col_V_fu_634_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                g_x_V_reg_1406 <= g_x_V_fu_999_p2;
                    r_V_2_reg_1411(8 downto 1) <= r_V_2_fu_1005_p3(8 downto 1);
                    r_V_3_reg_1416(8 downto 1) <= r_V_3_fu_1013_p3(8 downto 1);
                sub_ln68_2_reg_1421 <= sub_ln68_2_fu_1041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln439_reg_1187 <= icmp_ln439_fu_589_p2;
                t_V_reg_362_pp0_iter1_reg <= t_V_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_4_fu_690_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                icmp_ln887_5_reg_1259 <= icmp_ln887_5_fu_695_p2;
                icmp_ln895_reg_1264 <= icmp_ln895_fu_700_p2;
                ret_V_1_reg_1271 <= ret_V_1_fu_705_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln887_6_reg_1312_pp1_iter2_reg <= icmp_ln887_6_reg_1312_pp1_iter1_reg;
                icmp_ln887_6_reg_1312_pp1_iter3_reg <= icmp_ln887_6_reg_1312_pp1_iter2_reg;
                icmp_ln887_6_reg_1312_pp1_iter4_reg <= icmp_ln887_6_reg_1312_pp1_iter3_reg;
                icmp_ln887_6_reg_1312_pp1_iter5_reg <= icmp_ln887_6_reg_1312_pp1_iter4_reg;
                icmp_ln887_7_reg_1321_pp1_iter2_reg <= icmp_ln887_7_reg_1321_pp1_iter1_reg;
                icmp_ln887_7_reg_1321_pp1_iter3_reg <= icmp_ln887_7_reg_1321_pp1_iter2_reg;
                icmp_ln887_7_reg_1321_pp1_iter4_reg <= icmp_ln887_7_reg_1321_pp1_iter3_reg;
                icmp_ln891_reg_1347_pp1_iter4_reg <= icmp_ln891_reg_1347;
                icmp_ln891_reg_1347_pp1_iter5_reg <= icmp_ln891_reg_1347_pp1_iter4_reg;
                t_V_8_reg_502_pp1_iter2_reg <= t_V_8_reg_502_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln891_reg_1347 <= icmp_ln891_fu_812_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_572_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                readind_1_reg_1173 <= readind_1_fu_577_p2;
                trunc_ln321_reg_1178 <= trunc_ln321_fu_582_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op174_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln439_reg_1187 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_514 <= p_src_mat_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_0) and (ap_phi_mux_i_op_assign_phi_fu_313_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_1_fu_146(1 downto 0) <= row_ind_0_V_2_fu_542_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_2_V_1_load_reg_1133(1 downto 0) <= row_ind_2_V_1_fu_146(1 downto 0);
                    row_ind_2_V_2_load_reg_1139(1 downto 0) <= row_ind_2_V_2_fu_150(1 downto 0);
                    row_ind_2_V_load_reg_1128(1 downto 0) <= row_ind_2_V_fu_142(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_i_op_assign_phi_fu_313_p4 = ap_const_lv2_1)) and not((ap_phi_mux_i_op_assign_phi_fu_313_p4 = ap_const_lv2_0)) and (icmp_ln429_fu_530_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_2_fu_150(1 downto 0) <= row_ind_0_V_2_fu_542_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_0) and (ap_phi_mux_i_op_assign_phi_fu_313_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_fu_142(1 downto 0) <= row_ind_0_V_2_fu_542_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_6_reg_1251 <= tmp_6_fu_671_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_572_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                trunc_ln321_2_reg_1182 <= trunc_ln321_2_fu_586_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_6_reg_1312_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                trunc_ln321_6_reg_1354 <= trunc_ln321_6_fu_829_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln429_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln439_reg_1157(15 downto 0) <= zext_ln439_fu_565_p1(15 downto 0);
                    zext_ln887_reg_1164(1 downto 0) <= zext_ln887_fu_568_p1(1 downto 0);
            end if;
        end if;
    end process;
    row_ind_2_V_load_reg_1128(12 downto 2) <= "00000000000";
    row_ind_2_V_1_load_reg_1133(12 downto 2) <= "00000000000";
    row_ind_2_V_2_load_reg_1139(12 downto 2) <= "00000000000";
    zext_ln439_reg_1157(31 downto 16) <= "0000000000000000";
    zext_ln887_reg_1164(31 downto 2) <= "000000000000000000000000000000";
    r_V_2_reg_1411(0) <= '0';
    r_V_3_reg_1416(0) <= '0';
    row_ind_2_V_fu_142(12 downto 2) <= "00000000000";
    row_ind_2_V_1_fu_146(12 downto 2) <= "00000000000";
    row_ind_2_V_2_fu_150(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, ap_CS_fsm_state2, icmp_ln429_fu_530_p2, icmp_ln887_fu_572_p2, ap_CS_fsm_state3, icmp_ln439_fu_589_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state8, icmp_ln887_3_fu_629_p2, ap_CS_fsm_state11, icmp_ln887_4_fu_690_p2, icmp_ln887_6_fu_777_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter5, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln429_fu_530_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln887_fu_572_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln439_fu_589_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln439_fu_589_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln887_3_fu_629_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln887_4_fu_690_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln887_6_fu_777_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln887_6_fu_777_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln193_fu_659_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(trunc_ln193_fu_656_p1));
    add_ln330_fu_665_p2 <= std_logic_vector(signed(ap_const_lv17_1FFFF) + signed(lhs_V_fu_647_p1));
    add_ln436_fu_620_p2 <= std_logic_vector(unsigned(zext_ln439_reg_1157) + unsigned(indvars_iv_reg_320));
    add_ln68_fu_993_p2 <= std_logic_vector(unsigned(zext_ln68_fu_975_p1) + unsigned(sext_ln68_fu_989_p1));
    and_ln198_fu_793_p2 <= (icmp_ln887_7_fu_788_p2 and icmp_ln887_5_reg_1259);
    and_ln330_1_fu_742_p2 <= (icmp_ln895_reg_1264 and icmp_ln895_2_fu_736_p2);
    and_ln330_2_fu_752_p2 <= (icmp_ln895_reg_1264 and icmp_ln895_3_fu_747_p2);
    and_ln330_fu_731_p2 <= (tmp_14_fu_723_p3 and icmp_ln895_reg_1264);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(7);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(11);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln439_reg_1187)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln439_reg_1187 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln439_reg_1187)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln439_reg_1187 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg, ap_predicate_op174_read_state14)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)))) or ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op174_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg, ap_predicate_op174_read_state14)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)))) or ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op174_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg, ap_predicate_op174_read_state14)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)))) or ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op174_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state13_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp1_stage0_iter1_assign_proc : process(p_src_mat_data_V_empty_n, ap_predicate_op174_read_state14)
    begin
                ap_block_state14_pp1_stage0_iter1 <= ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op174_read_state14 = ap_const_boolean_1));
    end process;

        ap_block_state15_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp1_stage0_iter6_assign_proc : process(p_out_mat_data_V_full_n, p_out_mat1_data_V_full_n, icmp_ln891_reg_1347_pp1_iter5_reg)
    begin
                ap_block_state19_pp1_stage0_iter6 <= (((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat1_data_V_full_n = ap_const_logic_0)) or ((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(p_src_mat_data_V_empty_n, icmp_ln439_reg_1187)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((icmp_ln439_reg_1187 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln439_fu_589_p2)
    begin
        if ((icmp_ln439_fu_589_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state13_assign_proc : process(icmp_ln887_6_fu_777_p2)
    begin
        if ((icmp_ln887_6_fu_777_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11, icmp_ln887_4_fu_690_p2)
    begin
        if ((((icmp_ln887_4_fu_690_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i_op_assign_phi_fu_313_p4 <= i_op_assign_reg_309;

    ap_phi_mux_src_buf_0_0_0_phi_fu_494_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf_0_0_0_reg_490, icmp_ln887_6_reg_1312_pp1_iter5_reg, buf_cop_0_V_2_reg_1426)
    begin
        if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_0_0_phi_fu_494_p4 <= buf_cop_0_V_2_reg_1426;
        else 
            ap_phi_mux_src_buf_0_0_0_phi_fu_494_p4 <= src_buf_0_0_0_reg_490;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf_0_1_0_reg_478, icmp_ln887_6_reg_1312_pp1_iter5_reg, buf_cop_0_V_1_reg_1391)
    begin
        if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4 <= buf_cop_0_V_1_reg_1391;
        else 
            ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4 <= src_buf_0_1_0_reg_478;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_0_0_phi_fu_470_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf_1_0_0_reg_466, icmp_ln887_6_reg_1312_pp1_iter5_reg, buf_cop_1_V_2_reg_1431)
    begin
        if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_0_0_phi_fu_470_p4 <= buf_cop_1_V_2_reg_1431;
        else 
            ap_phi_mux_src_buf_1_0_0_phi_fu_470_p4 <= src_buf_1_0_0_reg_466;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_1_0_phi_fu_458_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf_1_1_0_reg_454, icmp_ln887_6_reg_1312_pp1_iter5_reg, buf_cop_1_V_1_reg_1396)
    begin
        if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_1_0_phi_fu_458_p4 <= buf_cop_1_V_1_reg_1396;
        else 
            ap_phi_mux_src_buf_1_1_0_phi_fu_458_p4 <= src_buf_1_1_0_reg_454;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_0_0_phi_fu_446_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf_2_0_0_reg_442, icmp_ln887_6_reg_1312_pp1_iter5_reg, buf_cop_2_V_2_reg_1436)
    begin
        if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_0_0_phi_fu_446_p4 <= buf_cop_2_V_2_reg_1436;
        else 
            ap_phi_mux_src_buf_2_0_0_phi_fu_446_p4 <= src_buf_2_0_0_reg_442;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf_2_1_0_reg_430, icmp_ln887_6_reg_1312_pp1_iter5_reg, buf_cop_2_V_1_reg_1401)
    begin
        if (((icmp_ln887_6_reg_1312_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4 <= buf_cop_2_V_1_reg_1401;
        else 
            ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4 <= src_buf_2_1_0_reg_430;
        end if; 
    end process;


    ap_phi_mux_t_V_8_phi_fu_506_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_6_reg_1312, t_V_8_reg_502, col_V_3_reg_1316)
    begin
        if (((icmp_ln887_6_reg_1312 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_8_phi_fu_506_p4 <= col_V_3_reg_1316;
        else 
            ap_phi_mux_t_V_8_phi_fu_506_p4 <= t_V_8_reg_502;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_366_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln439_reg_1187, t_V_reg_362, col_V_2_reg_1191)
    begin
        if (((icmp_ln439_reg_1187 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_t_V_phi_fu_366_p4 <= col_V_2_reg_1191;
        else 
            ap_phi_mux_t_V_phi_fu_366_p4 <= t_V_reg_362;
        end if; 
    end process;


    ap_predicate_op174_read_state14_assign_proc : process(icmp_ln887_6_reg_1312, and_ln198_reg_1328)
    begin
                ap_predicate_op174_read_state14 <= ((ap_const_lv1_1 = and_ln198_reg_1328) and (icmp_ln887_6_reg_1312 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, icmp_ln887_4_fu_690_p2)
    begin
        if (((icmp_ln887_4_fu_690_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3, zext_ln544_fu_640_p1, zext_ln544_4_fu_805_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_0_V_address0 <= zext_ln544_4_fu_805_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_0_V_address0 <= zext_ln544_fu_640_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, buf_0_V_addr_reg_1219, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state10, zext_ln544_2_fu_607_p1, zext_ln544_3_fu_798_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln544_3_fu_798_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_0_V_address1 <= buf_0_V_addr_reg_1219;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln544_2_fu_607_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, reg_514, tmp_6_reg_1251, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            buf_0_V_d1 <= tmp_6_reg_1251;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buf_0_V_d1 <= reg_514;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, trunc_ln321_reg_1178, trunc_ln321_3_reg_1297, icmp_ln887_6_reg_1312_pp1_iter1_reg, and_ln198_reg_1328_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_lv1_1 = and_ln198_reg_1328_pp1_iter1_reg) and (icmp_ln887_6_reg_1312_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln321_3_reg_1297 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln321_reg_1178 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3, zext_ln544_fu_640_p1, zext_ln544_4_fu_805_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_1_V_address0 <= zext_ln544_4_fu_805_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_1_V_address0 <= zext_ln544_fu_640_p1(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, zext_ln544_2_fu_607_p1, zext_ln544_3_fu_798_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= zext_ln544_3_fu_798_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= zext_ln544_2_fu_607_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, trunc_ln321_reg_1178, trunc_ln321_3_reg_1297, icmp_ln887_6_reg_1312_pp1_iter1_reg, and_ln198_reg_1328_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_lv1_1 = and_ln198_reg_1328_pp1_iter1_reg) and (icmp_ln887_6_reg_1312_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln321_3_reg_1297 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln321_reg_1178 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3, zext_ln544_fu_640_p1, zext_ln544_4_fu_805_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_2_V_address0 <= zext_ln544_4_fu_805_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            buf_2_V_address0 <= zext_ln544_fu_640_p1(11 - 1 downto 0);
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, zext_ln544_2_fu_607_p1, zext_ln544_3_fu_798_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_address1 <= zext_ln544_3_fu_798_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_2_V_address1 <= zext_ln544_2_fu_607_p1(11 - 1 downto 0);
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state8, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, trunc_ln321_reg_1178, trunc_ln321_3_reg_1297, icmp_ln887_6_reg_1312_pp1_iter1_reg, and_ln198_reg_1328_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if (((not((trunc_ln321_3_reg_1297 = ap_const_lv2_0)) and not((trunc_ln321_3_reg_1297 = ap_const_lv2_1)) and (ap_const_lv1_1 = and_ln198_reg_1328_pp1_iter1_reg) and (icmp_ln887_6_reg_1312_pp1_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((trunc_ln321_reg_1178 = ap_const_lv2_0)) and not((trunc_ln321_reg_1178 = ap_const_lv2_1)) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_cop_0_V_1_fu_902_p3 <= 
        buf_cop_0_V_fu_849_p3 when (icmp_ln887_7_reg_1321_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4;
    buf_cop_0_V_2_fu_1047_p3 <= 
        buf_cop_0_V_1_fu_902_p3 when (icmp_ln891_reg_1347_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4;
    buf_cop_0_V_fu_849_p3 <= 
        tmp_s_fu_833_p5 when (and_ln330_reg_1282(0) = '1') else 
        tmp_2_fu_841_p5;
    buf_cop_1_V_1_fu_909_p3 <= 
        buf_cop_1_V_fu_872_p3 when (icmp_ln887_7_reg_1321_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_1_1_0_phi_fu_458_p4;
    buf_cop_1_V_2_fu_1054_p3 <= 
        buf_cop_1_V_1_fu_909_p3 when (icmp_ln891_reg_1347_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_1_1_0_phi_fu_458_p4;
    buf_cop_1_V_fu_872_p3 <= 
        tmp_10_fu_856_p5 when (and_ln330_1_reg_1287(0) = '1') else 
        tmp_11_fu_864_p5;
    buf_cop_2_V_1_fu_916_p3 <= 
        buf_cop_2_V_fu_895_p3 when (icmp_ln887_7_reg_1321_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4;
    buf_cop_2_V_2_fu_1061_p3 <= 
        buf_cop_2_V_1_fu_916_p3 when (icmp_ln891_reg_1347_pp1_iter4_reg(0) = '1') else 
        ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4;
    buf_cop_2_V_fu_895_p3 <= 
        tmp_12_fu_879_p5 when (and_ln330_2_reg_1292(0) = '1') else 
        tmp_13_fu_887_p5;
    col_V_2_fu_595_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_phi_fu_366_p4) + unsigned(ap_const_lv13_1));
    col_V_3_fu_782_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_8_phi_fu_506_p4) + unsigned(ap_const_lv13_1));
    col_V_fu_634_p2 <= std_logic_vector(unsigned(t_V_6_reg_374) + unsigned(ap_const_lv13_1));
    g_x_V_fu_999_p2 <= std_logic_vector(unsigned(add_ln68_fu_993_p2) - unsigned(zext_ln68_1_fu_979_p1));
    icmp_ln429_fu_530_p2 <= "1" when (i_op_assign_reg_309 = ap_const_lv2_3) else "0";
    icmp_ln439_fu_589_p2 <= "1" when (index_assign_reg_352 = indvars_iv_reg_320) else "0";
    icmp_ln887_3_fu_629_p2 <= "1" when (unsigned(zext_ln887_3_fu_625_p1) < unsigned(img_width)) else "0";
    icmp_ln887_4_fu_690_p2 <= "1" when (unsigned(zext_ln887_5_fu_686_p1) < unsigned(ret_V_reg_1235)) else "0";
    icmp_ln887_5_fu_695_p2 <= "1" when (unsigned(zext_ln887_4_fu_682_p1) < unsigned(img_height)) else "0";
    icmp_ln887_6_fu_777_p2 <= "1" when (unsigned(zext_ln887_7_fu_773_p1) < unsigned(add_ln193_reg_1240)) else "0";
    icmp_ln887_7_fu_788_p2 <= "1" when (unsigned(zext_ln887_6_fu_769_p1) < unsigned(img_width)) else "0";
    icmp_ln887_fu_572_p2 <= "1" when (signed(i_op_assign_1_reg_342) < signed(zext_ln887_reg_1164)) else "0";
    icmp_ln891_fu_812_p2 <= "1" when (t_V_8_reg_502_pp1_iter2_reg = ap_const_lv13_0) else "0";
    icmp_ln895_2_fu_736_p2 <= "1" when (signed(ret_V_2_fu_713_p2) < signed(ap_const_lv18_1)) else "0";
    icmp_ln895_3_fu_747_p2 <= "1" when (signed(ret_V_1_reg_1271) > signed(ap_const_lv17_0)) else "0";
    icmp_ln895_fu_700_p2 <= "1" when (signed(zext_ln887_5_fu_686_p1) > signed(add_ln330_reg_1245)) else "0";
    init_buf_1_fu_614_p2 <= std_logic_vector(unsigned(i_op_assign_1_reg_342) + unsigned(ap_const_lv32_1));
    init_buf_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_1_fu_146),32));
    init_row_ind_fu_536_p2 <= std_logic_vector(unsigned(i_op_assign_reg_309) + unsigned(ap_const_lv2_1));
    lhs_V_2_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf_0_0_0_phi_fu_494_p4),9));
    lhs_V_4_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_cop_0_V_1_fu_902_p3),9));
    lhs_V_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));

    p_out_mat1_data_V_blk_n_assign_proc : process(p_out_mat1_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            p_out_mat1_data_V_blk_n <= p_out_mat1_data_V_full_n;
        else 
            p_out_mat1_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_out_mat1_data_V_din <= std_logic_vector(unsigned(zext_ln1503_3_fu_1071_p1) + unsigned(sub_ln68_3_fu_1077_p2));

    p_out_mat1_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_out_mat1_data_V_write <= ap_const_logic_1;
        else 
            p_out_mat1_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_out_mat_data_V_blk_n_assign_proc : process(p_out_mat_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            p_out_mat_data_V_blk_n <= p_out_mat_data_V_full_n;
        else 
            p_out_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_out_mat_data_V_din <= g_x_V_reg_1406;

    p_out_mat_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter6, icmp_ln891_reg_1347_pp1_iter5_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln891_reg_1347_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_out_mat_data_V_write <= ap_const_logic_1;
        else 
            p_out_mat_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_data_V_blk_n_assign_proc : process(p_src_mat_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln439_reg_1187, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_6_reg_1312, and_ln198_reg_1328)
    begin
        if ((((ap_const_lv1_1 = and_ln198_reg_1328) and (icmp_ln887_6_reg_1312 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln439_reg_1187 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_data_V_blk_n <= p_src_mat_data_V_empty_n;
        else 
            p_src_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln439_reg_1187, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op174_read_state14, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_predicate_op174_read_state14 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln439_reg_1187 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_data_V_read <= ap_const_logic_1;
        else 
            p_src_mat_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_1_fu_935_p3 <= (buf_cop_1_V_1_fu_909_p3 & ap_const_lv1_0);
    r_V_2_fu_1005_p3 <= (ap_phi_mux_src_buf_0_1_0_phi_fu_482_p4 & ap_const_lv1_0);
    r_V_3_fu_1013_p3 <= (ap_phi_mux_src_buf_2_1_0_phi_fu_434_p4 & ap_const_lv1_0);
    r_V_fu_923_p3 <= (ap_phi_mux_src_buf_1_0_0_phi_fu_470_p4 & ap_const_lv1_0);
    readind_1_fu_577_p2 <= std_logic_vector(unsigned(zext_ln439_reg_1157) + unsigned(readind_0_reg_330));
    readind_fu_601_p2 <= std_logic_vector(unsigned(index_assign_reg_352) + unsigned(ap_const_lv32_1));
    ret_V_1_fu_705_p2 <= std_logic_vector(unsigned(zext_ln887_5_fu_686_p1) - unsigned(add_ln330_reg_1245));
    ret_V_2_fu_713_p2 <= std_logic_vector(unsigned(ap_const_lv18_2) - unsigned(sext_ln1354_fu_710_p1));
    ret_V_3_fu_955_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_947_p1) + unsigned(rhs_V_fu_951_p1));
    ret_V_4_fu_969_p2 <= std_logic_vector(unsigned(lhs_V_2_fu_961_p1) + unsigned(rhs_V_3_fu_965_p1));
    ret_V_5_fu_1021_p2 <= std_logic_vector(unsigned(rhs_V_fu_951_p1) + unsigned(rhs_V_3_fu_965_p1));
    ret_V_6_fu_1027_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_947_p1) + unsigned(lhs_V_2_fu_961_p1));
    ret_V_fu_650_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(lhs_V_fu_647_p1));
    rhs_V_3_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf_2_0_0_phi_fu_446_p4),9));
    rhs_V_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_cop_2_V_1_fu_916_p3),9));
    row_V_fu_1090_p2 <= std_logic_vector(unsigned(t_V_7_reg_418) + unsigned(ap_const_lv13_1));
    row_ind_0_V_2_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_309),13));
        sext_ln1354_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_1_reg_1271),18));

        sext_ln68_1_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_2_reg_1421),11));

        sext_ln68_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln68_fu_983_p2),11));

    sub_ln68_2_fu_1041_p2 <= std_logic_vector(unsigned(zext_ln68_2_fu_1033_p1) - unsigned(zext_ln68_3_fu_1037_p1));
    sub_ln68_3_fu_1077_p2 <= std_logic_vector(signed(sext_ln68_1_fu_1074_p1) - signed(zext_ln1503_2_fu_1068_p1));
    sub_ln68_fu_983_p2 <= std_logic_vector(unsigned(zext_ln1503_1_fu_943_p1) - unsigned(zext_ln1503_fu_931_p1));
    tmp_14_fu_723_p3 <= ret_V_2_fu_713_p2(17 downto 17);
    trunc_ln193_fu_656_p1 <= img_width(14 - 1 downto 0);
    trunc_ln321_2_fu_586_p1 <= row_ind_2_V_1_load_reg_1133(2 - 1 downto 0);
    trunc_ln321_3_fu_757_p1 <= row_ind_1_V_1_reg_385(2 - 1 downto 0);
    trunc_ln321_4_fu_761_p1 <= zero_ind_V_reg_406(2 - 1 downto 0);
    trunc_ln321_5_fu_765_p1 <= row_ind_0_V_reg_395(2 - 1 downto 0);
    trunc_ln321_6_fu_829_p1 <= tmp_7_fu_818_p5(2 - 1 downto 0);
    trunc_ln321_fu_582_p1 <= i_op_assign_1_reg_342(2 - 1 downto 0);
    trunc_ln544_fu_719_p1 <= ret_V_2_fu_713_p2(2 - 1 downto 0);
    zext_ln1503_1_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_935_p3),10));
    zext_ln1503_2_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_reg_1411),11));
    zext_ln1503_3_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_reg_1416),11));
    zext_ln1503_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_923_p3),10));
    zext_ln439_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_width),32));
    zext_ln544_2_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_362_pp0_iter1_reg),64));
    zext_ln544_3_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_502_pp1_iter1_reg),64));
    zext_ln544_4_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_502_pp1_iter2_reg),64));
    zext_ln544_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_374),64));
    zext_ln68_1_fu_979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_fu_969_p2),11));
    zext_ln68_2_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_5_fu_1021_p2),10));
    zext_ln68_3_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_fu_1027_p2),10));
    zext_ln68_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_fu_955_p2),11));
    zext_ln887_3_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_374),16));
    zext_ln887_4_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_418),16));
    zext_ln887_5_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_418),17));
    zext_ln887_6_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_8_phi_fu_506_p4),16));
    zext_ln887_7_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_8_phi_fu_506_p4),14));
    zext_ln887_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_ind_2_V_2_fu_150),32));
end behav;
