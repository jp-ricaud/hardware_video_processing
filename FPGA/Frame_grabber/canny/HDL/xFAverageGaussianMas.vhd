-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFAverageGaussianMas is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_mat_data_V_empty_n : IN STD_LOGIC;
    p_src_mat_data_V_read : OUT STD_LOGIC;
    p_out_mat_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_mat_data_V_full_n : IN STD_LOGIC;
    p_out_mat_data_V_write : OUT STD_LOGIC;
    img_height_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    img_height_empty_n : IN STD_LOGIC;
    img_height_read : OUT STD_LOGIC;
    img_width_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width_empty_n : IN STD_LOGIC;
    img_width_read : OUT STD_LOGIC;
    img_height_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_height_out_full_n : IN STD_LOGIC;
    img_height_out_write : OUT STD_LOGIC;
    img_width_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    img_width_out_full_n : IN STD_LOGIC;
    img_width_out_write : OUT STD_LOGIC );
end;


architecture behav of xFAverageGaussianMas is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src_mat_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln189_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln887_9_reg_1072 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_8_reg_1068 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_out_mat_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal icmp_ln879_17_reg_1088 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_17_reg_1088_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal img_height_blk_n : STD_LOGIC;
    signal img_width_blk_n : STD_LOGIC;
    signal img_height_out_blk_n : STD_LOGIC;
    signal img_width_out_blk_n : STD_LOGIC;
    signal index_assign_reg_342 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_reg_353 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_11_reg_388 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_11_reg_388_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op96_read_state8 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal src_buf3_V_0_0_i_reg_400 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_412 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_412_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_V_0_0_i_reg_424 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_437 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_437_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_450 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_450_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_V_0_0_i_reg_462 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_490 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal img_height_read_reg_995 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal img_width_read_reg_1001 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln189_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln189_reg_1007_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal in_index_new_fu_502_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln544_fu_508_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_reg_1016 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_reg_1016_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal col_V_fu_513_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln200_fu_522_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln200_reg_1044 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln887_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal select_ln879_fu_614_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_reg_1053 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_14_fu_630_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_14_reg_1058 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_16_fu_646_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_16_reg_1063 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln887_8_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_9_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_9_reg_1072_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_9_reg_1072_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_9_reg_1072_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_9_reg_1072_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_9_reg_1072_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_4_fu_683_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_4_reg_1076 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln544_5_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_5_reg_1081 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_17_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_17_reg_1088_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_17_reg_1088_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_17_reg_1088_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf1_2_V_xfExtractPixels_1_fu_475_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_reg_1107 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal src_buf2_2_V_xfExtractPixels_1_fu_480_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_2_V_reg_1113 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_xfExtractPixels_1_fu_485_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_reg_1119 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_1_fu_775_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_1_reg_1125 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln56_3_fu_816_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln56_3_reg_1130 : STD_LOGIC_VECTOR (9 downto 0);
    signal op2_V_read_assign_3_reg_1135 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln56_1_fu_910_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln56_1_reg_1140 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal add_ln58_fu_932_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_reg_1145 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln256_fu_950_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln256_reg_1150 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_fu_958_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_reg_1155 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter4_state11 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_xfExtractPixels_1_fu_475_ap_ready : STD_LOGIC;
    signal src_buf2_2_V_xfExtractPixels_1_fu_480_ap_ready : STD_LOGIC;
    signal src_buf3_2_V_xfExtractPixels_1_fu_485_ap_ready : STD_LOGIC;
    signal t_V_9_reg_364 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_10_reg_376 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_t_V_11_phi_fu_392_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_src_buf3_V_0_0_i_phi_fu_404_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf2_V_0_0_i_phi_fu_428_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf1_V_0_0_i_phi_fu_466_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf0_V_fu_705_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf1_V_fu_717_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf2_V_fu_729_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_addr_6_gep_fu_300_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_6_gep_fu_306_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_gep_fu_312_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0396_0_i_fu_182 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0390_0_i_fu_186 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0386_0_i_fu_190 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln200_fu_519_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln887_8_fu_528_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln879_15_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_14_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln879_fu_604_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln211_fu_568_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_13_fu_622_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln211_1_fu_576_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_15_fu_638_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln211_2_fu_584_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln887_fu_546_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln887_9_fu_674_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln51_fu_741_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln52_2_fu_745_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln51_fu_755_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_2_fu_752_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_1_fu_748_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln55_fu_765_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln51_3_fu_761_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_fu_771_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln53_1_fu_781_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln54_fu_785_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln54_fu_792_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln56_3_fu_802_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln54_1_fu_789_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln56_2_fu_806_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln54_2_fu_798_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln56_4_fu_812_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal A1_1_fu_822_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal A2_1_fu_829_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln58_4_fu_837_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln58_6_fu_844_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_2_fu_848_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln58_5_fu_840_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln58_7_fu_854_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_3_fu_858_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln52_1_fu_878_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln52_fu_874_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln53_fu_888_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln56_fu_892_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln56_fu_896_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln56_2_fu_906_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln56_1_fu_902_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal A0_fu_882_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal A2_fu_916_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln58_fu_924_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln58_2_fu_928_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_ind_V_fu_938_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln879_16_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal A1_fu_964_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln58_3_fu_975_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln58_1_fu_971_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_1_fu_978_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_864 : BOOLEAN;

    component xfExtractPixels_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_mux_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xFAverageGaussianbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component xFAverageGaussianbkb
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    src_buf1_2_V_xfExtractPixels_1_fu_475 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf1_2_V_xfExtractPixels_1_fu_475_ap_ready,
        val1_V_read => buf0_V_fu_705_p5,
        ap_return => src_buf1_2_V_xfExtractPixels_1_fu_475_ap_return);

    src_buf2_2_V_xfExtractPixels_1_fu_480 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf2_2_V_xfExtractPixels_1_fu_480_ap_ready,
        val1_V_read => buf1_V_fu_717_p5,
        ap_return => src_buf2_2_V_xfExtractPixels_1_fu_480_ap_return);

    src_buf3_2_V_xfExtractPixels_1_fu_485 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf3_2_V_xfExtractPixels_1_fu_485_ap_ready,
        val1_V_read => buf2_V_fu_729_p5,
        ap_return => src_buf3_2_V_xfExtractPixels_1_fu_485_ap_return);

    ip_accel_app_mux_eOg_U76 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => select_ln879_reg_1053,
        dout => buf0_V_fu_705_p5);

    ip_accel_app_mux_eOg_U77 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => select_ln879_14_reg_1058,
        dout => buf1_V_fu_717_p5);

    ip_accel_app_mux_eOg_U78 : component ip_accel_app_mux_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => select_ln879_16_reg_1063,
        dout => buf2_V_fu_729_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln887_9_fu_678_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter4_state11)) then 
                        ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    index_assign_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln189_fu_497_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                index_assign_reg_342 <= in_index_new_fu_502_p2;
            elsif ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                index_assign_reg_342 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    src_buf1_0_V_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_0_V_reg_450 <= src_buf1_2_V_reg_1107;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                src_buf1_0_V_reg_450 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_V_0_0_i_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf1_V_0_0_i_reg_462 <= src_buf1_0_V_reg_450_pp1_iter5_reg;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                src_buf1_V_0_0_i_reg_462 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_0_V_reg_412 <= src_buf2_2_V_reg_1113;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                src_buf2_0_V_reg_412 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_V_0_0_i_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf2_V_0_0_i_reg_424 <= src_buf2_0_V_reg_412_pp1_iter5_reg;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                src_buf2_V_0_0_i_reg_424 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_0_V_reg_437 <= src_buf3_2_V_reg_1119;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                src_buf3_0_V_reg_437 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_V_0_0_i_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf3_V_0_0_i_reg_400 <= src_buf3_0_V_reg_437_pp1_iter5_reg;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                src_buf3_V_0_0_i_reg_400 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_10_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_out_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                t_V_10_reg_376 <= row_V_reg_1155;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_10_reg_376 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    t_V_11_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_11_reg_388 <= col_V_4_reg_1076;
            elsif (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                t_V_11_reg_388 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_9_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_out_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                t_V_9_reg_364 <= select_ln256_reg_1150;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_9_reg_364 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    t_V_reg_353_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln189_fu_497_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_353 <= col_V_fu_513_p2;
            elsif ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_353 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                A0_1_reg_1125 <= A0_1_fu_775_p2;
                add_ln56_3_reg_1130 <= add_ln56_3_fu_816_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln200_reg_1044 <= add_ln200_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln56_1_reg_1140 <= add_ln56_1_fu_910_p2;
                add_ln58_reg_1145 <= add_ln58_fu_932_p2;
                row_V_reg_1155 <= row_V_fu_958_p2;
                select_ln256_reg_1150 <= select_ln256_fu_950_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_4_reg_1076 <= col_V_4_fu_683_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln189_reg_1007 <= icmp_ln189_fu_497_p2;
                icmp_ln189_reg_1007_pp0_iter1_reg <= icmp_ln189_reg_1007;
                    zext_ln544_reg_1016_pp0_iter1_reg(12 downto 0) <= zext_ln544_reg_1016(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln879_17_reg_1088 <= icmp_ln879_17_fu_699_p2;
                    zext_ln544_5_reg_1081(12 downto 0) <= zext_ln544_5_fu_689_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln879_17_reg_1088_pp1_iter3_reg <= icmp_ln879_17_reg_1088;
                icmp_ln879_17_reg_1088_pp1_iter4_reg <= icmp_ln879_17_reg_1088_pp1_iter3_reg;
                icmp_ln879_17_reg_1088_pp1_iter5_reg <= icmp_ln879_17_reg_1088_pp1_iter4_reg;
                icmp_ln879_17_reg_1088_pp1_iter6_reg <= icmp_ln879_17_reg_1088_pp1_iter5_reg;
                icmp_ln887_9_reg_1072_pp1_iter2_reg <= icmp_ln887_9_reg_1072_pp1_iter1_reg;
                icmp_ln887_9_reg_1072_pp1_iter3_reg <= icmp_ln887_9_reg_1072_pp1_iter2_reg;
                icmp_ln887_9_reg_1072_pp1_iter4_reg <= icmp_ln887_9_reg_1072_pp1_iter3_reg;
                icmp_ln887_9_reg_1072_pp1_iter5_reg <= icmp_ln887_9_reg_1072_pp1_iter4_reg;
                src_buf1_0_V_reg_450_pp1_iter5_reg <= src_buf1_0_V_reg_450;
                src_buf2_0_V_reg_412_pp1_iter5_reg <= src_buf2_0_V_reg_412;
                src_buf3_0_V_reg_437_pp1_iter5_reg <= src_buf3_0_V_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_532_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                icmp_ln887_8_reg_1068 <= icmp_ln887_8_fu_654_p2;
                p_0386_0_i_fu_190 <= select_ln879_fu_614_p3;
                p_0390_0_i_fu_186 <= select_ln879_14_fu_630_p3;
                p_0396_0_i_fu_182 <= select_ln879_16_fu_646_p3;
                select_ln879_14_reg_1058 <= select_ln879_14_fu_630_p3;
                select_ln879_16_reg_1063 <= select_ln879_16_fu_646_p3;
                select_ln879_reg_1053 <= select_ln879_fu_614_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln887_9_reg_1072 <= icmp_ln887_9_fu_678_p2;
                icmp_ln887_9_reg_1072_pp1_iter1_reg <= icmp_ln887_9_reg_1072;
                t_V_11_reg_388_pp1_iter1_reg <= t_V_11_reg_388;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                img_height_read_reg_995 <= img_height_dout;
                img_width_read_reg_1001 <= img_width_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                op2_V_read_assign_3_reg_1135 <= add_ln58_3_fu_858_p2(11 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op96_read_state8 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln189_reg_1007 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_490 <= p_src_mat_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_9_reg_1072_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf1_2_V_reg_1107 <= src_buf1_2_V_xfExtractPixels_1_fu_475_ap_return;
                src_buf2_2_V_reg_1113 <= src_buf2_2_V_xfExtractPixels_1_fu_480_ap_return;
                src_buf3_2_V_reg_1119 <= src_buf3_2_V_xfExtractPixels_1_fu_485_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln189_fu_497_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln544_reg_1016(12 downto 0) <= zext_ln544_fu_508_p1(12 downto 0);
            end if;
        end if;
    end process;
    zext_ln544_reg_1016(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln544_reg_1016_pp0_iter1_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln544_5_reg_1081(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_out_mat_data_V_full_n, img_height_empty_n, img_width_empty_n, img_height_out_full_n, img_width_out_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter7, ap_CS_fsm_state16, icmp_ln189_fu_497_p2, ap_enable_reg_pp0_iter0, icmp_ln887_fu_532_p2, ap_CS_fsm_state6, ap_enable_reg_pp1_iter4, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln189_fu_497_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((icmp_ln189_fu_497_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln887_fu_532_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((p_out_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    A0_1_fu_775_p2 <= std_logic_vector(unsigned(zext_ln51_3_fu_761_p1) + unsigned(zext_ln55_fu_771_p1));
    A0_fu_882_p2 <= std_logic_vector(unsigned(zext_ln52_1_fu_878_p1) + unsigned(zext_ln52_fu_874_p1));
    A1_1_fu_822_p3 <= (add_ln56_3_reg_1130 & ap_const_lv1_0);
    A1_fu_964_p3 <= (add_ln56_1_reg_1140 & ap_const_lv1_0);
    A2_1_fu_829_p3 <= (src_buf2_0_V_reg_412_pp1_iter5_reg & ap_const_lv2_0);
    A2_fu_916_p3 <= (src_buf2_0_V_reg_412 & ap_const_lv2_0);
    add_ln200_fu_522_p2 <= std_logic_vector(unsigned(zext_ln200_fu_519_p1) + unsigned(ap_const_lv17_1));
    add_ln51_fu_755_p2 <= std_logic_vector(unsigned(zext_ln51_fu_741_p1) + unsigned(zext_ln52_2_fu_745_p1));
    add_ln54_fu_792_p2 <= std_logic_vector(unsigned(zext_ln53_1_fu_781_p1) + unsigned(zext_ln54_fu_785_p1));
    add_ln55_fu_765_p2 <= std_logic_vector(unsigned(zext_ln51_2_fu_752_p1) + unsigned(zext_ln51_1_fu_748_p1));
    add_ln56_1_fu_910_p2 <= std_logic_vector(unsigned(zext_ln56_2_fu_906_p1) + unsigned(zext_ln56_1_fu_902_p1));
    add_ln56_2_fu_806_p2 <= std_logic_vector(unsigned(zext_ln56_3_fu_802_p1) + unsigned(zext_ln54_1_fu_789_p1));
    add_ln56_3_fu_816_p2 <= std_logic_vector(unsigned(zext_ln54_2_fu_798_p1) + unsigned(zext_ln56_4_fu_812_p1));
    add_ln56_fu_896_p2 <= std_logic_vector(unsigned(zext_ln53_fu_888_p1) + unsigned(zext_ln56_fu_892_p1));
    add_ln58_1_fu_978_p2 <= std_logic_vector(unsigned(zext_ln58_3_fu_975_p1) + unsigned(zext_ln58_1_fu_971_p1));
    add_ln58_2_fu_848_p2 <= std_logic_vector(unsigned(zext_ln58_4_fu_837_p1) + unsigned(zext_ln58_6_fu_844_p1));
    add_ln58_3_fu_858_p2 <= std_logic_vector(unsigned(zext_ln58_5_fu_840_p1) + unsigned(zext_ln58_7_fu_854_p1));
    add_ln58_fu_932_p2 <= std_logic_vector(unsigned(zext_ln58_fu_924_p1) + unsigned(zext_ln58_2_fu_928_p1));
    and_ln879_fu_598_p2 <= (xor_ln879_fu_592_p2 and icmp_ln879_14_fu_556_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state15 <= ap_CS_fsm(5);
    ap_CS_fsm_state16 <= ap_CS_fsm(6);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln189_reg_1007)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln189_reg_1007 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln189_reg_1007)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln189_reg_1007 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, icmp_ln879_17_reg_1088_pp1_iter6_reg, ap_predicate_op96_read_state8)
    begin
                ap_block_pp1_stage0_01001 <= (((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op96_read_state8 = ap_const_boolean_1)) or ((icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, icmp_ln879_17_reg_1088_pp1_iter6_reg, ap_predicate_op96_read_state8)
    begin
                ap_block_pp1_stage0_11001 <= (((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op96_read_state8 = ap_const_boolean_1)) or ((icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_mat_data_V_empty_n, p_out_mat_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, icmp_ln879_17_reg_1088_pp1_iter6_reg, ap_predicate_op96_read_state8)
    begin
                ap_block_pp1_stage0_subdone <= (((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op96_read_state8 = ap_const_boolean_1)) or ((icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, img_height_empty_n, img_width_empty_n, img_height_out_full_n, img_width_out_full_n)
    begin
                ap_block_state1 <= ((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_pp1_stage0_iter7_assign_proc : process(p_out_mat_data_V_full_n, icmp_ln879_17_reg_1088_pp1_iter6_reg)
    begin
                ap_block_state14_pp1_stage0_iter7 <= ((icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (p_out_mat_data_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_src_mat_data_V_empty_n, icmp_ln189_reg_1007)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln189_reg_1007 = ap_const_lv1_0) and (p_src_mat_data_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp1_stage0_iter1_assign_proc : process(p_src_mat_data_V_empty_n, ap_predicate_op96_read_state8)
    begin
                ap_block_state8_pp1_stage0_iter1 <= ((p_src_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op96_read_state8 = ap_const_boolean_1));
    end process;

        ap_block_state9_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_864_assign_proc : process(ap_block_pp1_stage0, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
                ap_condition_864 <= (not((select_ln879_16_reg_1063 = ap_const_lv2_1)) and not((select_ln879_16_reg_1063 = ap_const_lv2_0)) and (icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln189_fu_497_p2)
    begin
        if ((icmp_ln189_fu_497_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter4_state11_assign_proc : process(ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter4_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter4_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln887_fu_532_p2, ap_CS_fsm_state6)
    begin
        if (((icmp_ln887_fu_532_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_src_buf1_V_0_0_i_phi_fu_466_p4_assign_proc : process(ap_block_pp1_stage0, src_buf1_0_V_reg_450_pp1_iter5_reg, src_buf1_V_0_0_i_reg_462, icmp_ln887_9_reg_1072_pp1_iter5_reg, ap_enable_reg_pp1_iter6)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf1_V_0_0_i_phi_fu_466_p4 <= src_buf1_0_V_reg_450_pp1_iter5_reg;
        else 
            ap_phi_mux_src_buf1_V_0_0_i_phi_fu_466_p4 <= src_buf1_V_0_0_i_reg_462;
        end if; 
    end process;


    ap_phi_mux_src_buf2_V_0_0_i_phi_fu_428_p4_assign_proc : process(ap_block_pp1_stage0, src_buf2_0_V_reg_412_pp1_iter5_reg, src_buf2_V_0_0_i_reg_424, icmp_ln887_9_reg_1072_pp1_iter5_reg, ap_enable_reg_pp1_iter6)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf2_V_0_0_i_phi_fu_428_p4 <= src_buf2_0_V_reg_412_pp1_iter5_reg;
        else 
            ap_phi_mux_src_buf2_V_0_0_i_phi_fu_428_p4 <= src_buf2_V_0_0_i_reg_424;
        end if; 
    end process;


    ap_phi_mux_src_buf3_V_0_0_i_phi_fu_404_p4_assign_proc : process(ap_block_pp1_stage0, src_buf3_V_0_0_i_reg_400, src_buf3_0_V_reg_437_pp1_iter5_reg, icmp_ln887_9_reg_1072_pp1_iter5_reg, ap_enable_reg_pp1_iter6)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf3_V_0_0_i_phi_fu_404_p4 <= src_buf3_0_V_reg_437_pp1_iter5_reg;
        else 
            ap_phi_mux_src_buf3_V_0_0_i_phi_fu_404_p4 <= src_buf3_V_0_0_i_reg_400;
        end if; 
    end process;


    ap_phi_mux_t_V_11_phi_fu_392_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_9_reg_1072, t_V_11_reg_388, col_V_4_reg_1076)
    begin
        if (((icmp_ln887_9_reg_1072 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_11_phi_fu_392_p4 <= col_V_4_reg_1076;
        else 
            ap_phi_mux_t_V_11_phi_fu_392_p4 <= t_V_11_reg_388;
        end if; 
    end process;


    ap_predicate_op96_read_state8_assign_proc : process(icmp_ln887_9_reg_1072, icmp_ln887_8_reg_1068)
    begin
                ap_predicate_op96_read_state8 <= ((icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (icmp_ln887_9_reg_1072 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    buf_0_V_addr_6_gep_fu_300_p3 <= zext_ln544_5_fu_689_p1(11 - 1 downto 0);
    buf_0_V_address0 <= zext_ln544_5_reg_1081(11 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln887_8_reg_1068, ap_enable_reg_pp0_iter0, zext_ln544_fu_508_p1, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, zext_ln544_5_fu_689_p1, ap_enable_reg_pp1_iter2, buf_0_V_addr_6_gep_fu_300_p3)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= buf_0_V_addr_6_gep_fu_300_p3;
        elsif (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln544_5_fu_689_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln544_fu_508_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln887_8_reg_1068, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln887_8_reg_1068, reg_490, ap_enable_reg_pp0_iter0, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_d1 <= reg_490;
        elsif ((((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln887_8_reg_1068, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln189_fu_497_p2, ap_enable_reg_pp0_iter0, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((icmp_ln189_fu_497_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (select_ln879_16_reg_1063 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_6_gep_fu_306_p3 <= zext_ln544_5_fu_689_p1(11 - 1 downto 0);
    buf_1_V_address0 <= zext_ln544_5_reg_1081(11 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln887_8_reg_1068, zext_ln544_reg_1016_pp0_iter1_reg, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, zext_ln544_5_fu_689_p1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, buf_1_V_addr_6_gep_fu_306_p3)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= buf_1_V_addr_6_gep_fu_306_p3;
        elsif (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= zext_ln544_5_fu_689_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= zext_ln544_reg_1016_pp0_iter1_reg(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(icmp_ln887_8_reg_1068, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln887_8_reg_1068, reg_490, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buf_1_V_d1 <= reg_490;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(icmp_ln887_8_reg_1068, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln189_reg_1007_pp0_iter1_reg, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((icmp_ln189_reg_1007_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (select_ln879_16_reg_1063 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_312_p3 <= zext_ln544_5_fu_689_p1(11 - 1 downto 0);
    buf_2_V_address0 <= zext_ln544_5_reg_1081(11 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(icmp_ln887_8_reg_1068, zext_ln544_5_fu_689_p1, buf_2_V_addr_gep_fu_312_p3, ap_condition_864)
    begin
        if ((ap_const_boolean_1 = ap_condition_864)) then
            if ((icmp_ln887_8_reg_1068 = ap_const_lv1_1)) then 
                buf_2_V_address1 <= buf_2_V_addr_gep_fu_312_p3;
            elsif ((icmp_ln887_8_reg_1068 = ap_const_lv1_0)) then 
                buf_2_V_address1 <= zext_ln544_5_fu_689_p1(11 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(icmp_ln887_8_reg_1068, ap_block_pp1_stage0_11001, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((not((select_ln879_16_reg_1063 = ap_const_lv2_1)) and not((select_ln879_16_reg_1063 = ap_const_lv2_0)) and (icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((select_ln879_16_reg_1063 = ap_const_lv2_1)) and not((select_ln879_16_reg_1063 = ap_const_lv2_0)) and (icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(icmp_ln887_8_reg_1068, reg_490, ap_condition_864)
    begin
        if ((ap_const_boolean_1 = ap_condition_864)) then
            if ((icmp_ln887_8_reg_1068 = ap_const_lv1_1)) then 
                buf_2_V_d1 <= reg_490;
            elsif ((icmp_ln887_8_reg_1068 = ap_const_lv1_0)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(icmp_ln887_8_reg_1068, ap_block_pp1_stage0_11001, select_ln879_16_reg_1063, icmp_ln887_9_reg_1072_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((not((select_ln879_16_reg_1063 = ap_const_lv2_1)) and not((select_ln879_16_reg_1063 = ap_const_lv2_0)) and (icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((select_ln879_16_reg_1063 = ap_const_lv2_1)) and not((select_ln879_16_reg_1063 = ap_const_lv2_0)) and (icmp_ln887_9_reg_1072_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_4_fu_683_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_11_phi_fu_392_p4) + unsigned(ap_const_lv13_1));
    col_V_fu_513_p2 <= std_logic_vector(unsigned(t_V_reg_353) + unsigned(ap_const_lv13_1));
    icmp_ln189_fu_497_p2 <= "1" when (index_assign_reg_342 = img_width_read_reg_1001) else "0";
    icmp_ln879_14_fu_556_p2 <= "1" when (t_V_9_reg_364 = ap_const_lv13_0) else "0";
    icmp_ln879_15_fu_562_p2 <= "1" when (t_V_9_reg_364 = ap_const_lv13_1) else "0";
    icmp_ln879_16_fu_944_p2 <= "1" when (row_ind_V_fu_938_p2 = ap_const_lv13_3) else "0";
    icmp_ln879_17_fu_699_p2 <= "1" when (t_V_11_reg_388_pp1_iter1_reg = ap_const_lv13_0) else "0";
    icmp_ln879_fu_550_p2 <= "1" when (t_V_9_reg_364 = ap_const_lv13_2) else "0";
    icmp_ln887_8_fu_654_p2 <= "1" when (unsigned(zext_ln887_fu_546_p1) < unsigned(img_height_read_reg_995)) else "0";
    icmp_ln887_9_fu_678_p2 <= "1" when (unsigned(zext_ln887_9_fu_674_p1) < unsigned(img_width_read_reg_1001)) else "0";
    icmp_ln887_fu_532_p2 <= "1" when (unsigned(zext_ln887_8_fu_528_p1) < unsigned(add_ln200_reg_1044)) else "0";

    img_height_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_height_blk_n <= img_height_empty_n;
        else 
            img_height_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_height_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_height_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_height_out_blk_n <= img_height_out_full_n;
        else 
            img_height_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_height_out_din <= img_height_dout;

    img_height_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n, img_width_empty_n, img_height_out_full_n, img_width_out_full_n)
    begin
        if ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_height_out_write <= ap_const_logic_1;
        else 
            img_height_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_height_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n, img_width_empty_n, img_height_out_full_n, img_width_out_full_n)
    begin
        if ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_height_read <= ap_const_logic_1;
        else 
            img_height_read <= ap_const_logic_0;
        end if; 
    end process;


    img_width_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_width_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_width_blk_n <= img_width_empty_n;
        else 
            img_width_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_width_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_width_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_width_out_blk_n <= img_width_out_full_n;
        else 
            img_width_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    img_width_out_din <= img_width_dout;

    img_width_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n, img_width_empty_n, img_height_out_full_n, img_width_out_full_n)
    begin
        if ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_width_out_write <= ap_const_logic_1;
        else 
            img_width_out_write <= ap_const_logic_0;
        end if; 
    end process;


    img_width_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, img_height_empty_n, img_width_empty_n, img_height_out_full_n, img_width_out_full_n)
    begin
        if ((not(((img_width_out_full_n = ap_const_logic_0) or (img_height_out_full_n = ap_const_logic_0) or (img_width_empty_n = ap_const_logic_0) or (img_height_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            img_width_read <= ap_const_logic_1;
        else 
            img_width_read <= ap_const_logic_0;
        end if; 
    end process;

    in_index_new_fu_502_p2 <= std_logic_vector(unsigned(index_assign_reg_342) + unsigned(ap_const_lv16_1));

    internal_ap_ready_assign_proc : process(icmp_ln887_fu_532_p2, ap_CS_fsm_state6)
    begin
        if (((icmp_ln887_fu_532_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_ln879_fu_608_p2 <= (icmp_ln879_fu_550_p2 or and_ln879_fu_598_p2);

    p_out_mat_data_V_blk_n_assign_proc : process(p_out_mat_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter7, icmp_ln879_17_reg_1088_pp1_iter6_reg, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1)))) then 
            p_out_mat_data_V_blk_n <= p_out_mat_data_V_full_n;
        else 
            p_out_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_out_mat_data_V_din_assign_proc : process(p_out_mat_data_V_full_n, ap_enable_reg_pp1_iter7, icmp_ln879_17_reg_1088_pp1_iter6_reg, ap_CS_fsm_state16, op2_V_read_assign_3_reg_1135, ap_block_pp1_stage0_01001, add_ln58_1_fu_978_p2)
    begin
        if (((p_out_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            p_out_mat_data_V_din <= add_ln58_1_fu_978_p2(11 downto 4);
        elsif (((icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1))) then 
            p_out_mat_data_V_din <= op2_V_read_assign_3_reg_1135;
        else 
            p_out_mat_data_V_din <= "XXXXXXXX";
        end if; 
    end process;


    p_out_mat_data_V_write_assign_proc : process(p_out_mat_data_V_full_n, ap_enable_reg_pp1_iter7, icmp_ln879_17_reg_1088_pp1_iter6_reg, ap_CS_fsm_state16, ap_block_pp1_stage0_11001)
    begin
        if ((((p_out_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln879_17_reg_1088_pp1_iter6_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_out_mat_data_V_write <= ap_const_logic_1;
        else 
            p_out_mat_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_mat_data_V_blk_n_assign_proc : process(p_src_mat_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln189_reg_1007, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_9_reg_1072, icmp_ln887_8_reg_1068)
    begin
        if ((((icmp_ln887_8_reg_1068 = ap_const_lv1_1) and (icmp_ln887_9_reg_1072 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln189_reg_1007 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_mat_data_V_blk_n <= p_src_mat_data_V_empty_n;
        else 
            p_src_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_mat_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln189_reg_1007, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op96_read_state8, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op96_read_state8 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln189_reg_1007 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_mat_data_V_read <= ap_const_logic_1;
        else 
            p_src_mat_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_V_fu_958_p2 <= std_logic_vector(unsigned(t_V_10_reg_376) + unsigned(ap_const_lv13_1));
    row_ind_V_fu_938_p2 <= std_logic_vector(unsigned(t_V_9_reg_364) + unsigned(ap_const_lv13_1));
    select_ln211_1_fu_576_p3 <= 
        ap_const_lv2_0 when (icmp_ln879_15_fu_562_p2(0) = '1') else 
        p_0390_0_i_fu_186;
    select_ln211_2_fu_584_p3 <= 
        ap_const_lv2_1 when (icmp_ln879_15_fu_562_p2(0) = '1') else 
        p_0396_0_i_fu_182;
    select_ln211_fu_568_p3 <= 
        ap_const_lv2_2 when (icmp_ln879_15_fu_562_p2(0) = '1') else 
        p_0386_0_i_fu_190;
    select_ln256_fu_950_p3 <= 
        ap_const_lv13_0 when (icmp_ln879_16_fu_944_p2(0) = '1') else 
        row_ind_V_fu_938_p2;
    select_ln879_13_fu_622_p3 <= 
        ap_const_lv2_2 when (and_ln879_fu_598_p2(0) = '1') else 
        ap_const_lv2_1;
    select_ln879_14_fu_630_p3 <= 
        select_ln879_13_fu_622_p3 when (or_ln879_fu_608_p2(0) = '1') else 
        select_ln211_1_fu_576_p3;
    select_ln879_15_fu_638_p3 <= 
        ap_const_lv2_0 when (and_ln879_fu_598_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln879_16_fu_646_p3 <= 
        select_ln879_15_fu_638_p3 when (or_ln879_fu_608_p2(0) = '1') else 
        select_ln211_2_fu_584_p3;
    select_ln879_fu_614_p3 <= 
        zext_ln879_fu_604_p1 when (or_ln879_fu_608_p2(0) = '1') else 
        select_ln211_fu_568_p3;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln879_fu_592_p2 <= (icmp_ln879_fu_550_p2 xor ap_const_lv1_1);
    zext_ln200_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height_read_reg_995),17));
    zext_ln51_1_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf3_V_0_0_i_phi_fu_404_p4),9));
    zext_ln51_2_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_2_V_reg_1119),9));
    zext_ln51_3_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_fu_755_p2),10));
    zext_ln51_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf1_V_0_0_i_phi_fu_466_p4),9));
    zext_ln52_1_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_V_0_0_i_reg_400),9));
    zext_ln52_2_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_2_V_reg_1107),9));
    zext_ln52_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_V_0_0_i_reg_462),9));
    zext_ln53_1_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_src_buf2_V_0_0_i_phi_fu_428_p4),9));
    zext_ln53_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_0_V_reg_450),9));
    zext_ln544_5_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_11_reg_388_pp1_iter1_reg),64));
    zext_ln544_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_353),64));
    zext_ln54_1_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf2_2_V_reg_1113),9));
    zext_ln54_2_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln54_fu_792_p2),10));
    zext_ln54_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf1_0_V_reg_450),9));
    zext_ln55_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln55_fu_765_p2),10));
    zext_ln56_1_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_fu_896_p2),10));
    zext_ln56_2_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_0_V_reg_437),10));
    zext_ln56_3_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf3_0_V_reg_437),9));
    zext_ln56_4_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_2_fu_806_p2),10));
    zext_ln56_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_buf2_V_0_0_i_reg_424),9));
    zext_ln58_1_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_fu_964_p3),12));
    zext_ln58_2_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_fu_916_p3),11));
    zext_ln58_3_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_reg_1145),12));
    zext_ln58_4_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_1_reg_1125),11));
    zext_ln58_5_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_1_fu_822_p3),12));
    zext_ln58_6_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A2_1_fu_829_p3),11));
    zext_ln58_7_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln58_2_fu_848_p2),12));
    zext_ln58_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_fu_882_p2),11));
    zext_ln879_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln879_fu_598_p2),2));
    zext_ln887_8_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_10_reg_376),17));
    zext_ln887_9_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_11_phi_fu_392_p4),16));
    zext_ln887_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_10_reg_376),16));
end behav;
