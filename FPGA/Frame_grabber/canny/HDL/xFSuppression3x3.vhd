-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xFSuppression3x3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_magnitude_mat_data_V_dout : IN STD_LOGIC_VECTOR (13 downto 0);
    p_magnitude_mat_data_V_empty_n : IN STD_LOGIC;
    p_magnitude_mat_data_V_read : OUT STD_LOGIC;
    p_phase_mat_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_phase_mat_data_V_empty_n : IN STD_LOGIC;
    p_phase_mat_data_V_read : OUT STD_LOGIC;
    p_dst_mat_data_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_dst_mat_data_V_full_n : IN STD_LOGIC;
    p_dst_mat_data_V_write : OUT STD_LOGIC;
    low_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    low_threshold_empty_n : IN STD_LOGIC;
    low_threshold_read : OUT STD_LOGIC;
    high_threshold_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    high_threshold_empty_n : IN STD_LOGIC;
    high_threshold_read : OUT STD_LOGIC;
    imgheight_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    imgheight_empty_n : IN STD_LOGIC;
    imgheight_read : OUT STD_LOGIC;
    imgwidth_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    imgwidth_empty_n : IN STD_LOGIC;
    imgwidth_read : OUT STD_LOGIC;
    imgheight_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    imgheight_out_full_n : IN STD_LOGIC;
    imgheight_out_write : OUT STD_LOGIC;
    imgwidth_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    imgwidth_out_full_n : IN STD_LOGIC;
    imgwidth_out_write : OUT STD_LOGIC );
end;


architecture behav of xFSuppression3x3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_magnitude_mat_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln332_reg_1486 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln887_2_reg_1575 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_1_reg_1558 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_phase_mat_data_V_blk_n : STD_LOGIC;
    signal p_dst_mat_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln887_2_reg_1575_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_reg_1593 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_reg_1593_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal low_threshold_blk_n : STD_LOGIC;
    signal high_threshold_blk_n : STD_LOGIC;
    signal imgheight_blk_n : STD_LOGIC;
    signal imgwidth_blk_n : STD_LOGIC;
    signal imgheight_out_blk_n : STD_LOGIC;
    signal imgwidth_out_blk_n : STD_LOGIC;
    signal index_assign_reg_481 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_reg_492 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_5_reg_551 : STD_LOGIC_VECTOR (12 downto 0);
    signal l20_buf_V_0_0_i_reg_563 : STD_LOGIC_VECTOR (15 downto 0);
    signal l20_buf_0_V_reg_575 : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_0_V_reg_588 : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_V_0_0_i_reg_600 : STD_LOGIC_VECTOR (15 downto 0);
    signal angle_buf_V_1_0_i_reg_613 : STD_LOGIC_VECTOR (7 downto 0);
    signal l00_buf_0_V_reg_625 : STD_LOGIC_VECTOR (15 downto 0);
    signal l00_buf_V_0_0_i_reg_637 : STD_LOGIC_VECTOR (15 downto 0);
    signal low_threshold_read_reg_1464 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal high_threshold_read_reg_1469 : STD_LOGIC_VECTOR (7 downto 0);
    signal imgheight_read_reg_1474 : STD_LOGIC_VECTOR (15 downto 0);
    signal imgwidth_read_reg_1480 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln332_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal read_index1_fu_763_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln544_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_reg_1495 : STD_LOGIC_VECTOR (63 downto 0);
    signal col_V_fu_774_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln346_fu_788_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln346_reg_1524 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln895_fu_794_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln895_reg_1529 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln895_1_fu_797_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln895_1_reg_1534 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln887_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln879_fu_886_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_reg_1543 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_2_fu_902_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_2_reg_1548 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_4_fu_918_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_4_reg_1553 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln887_1_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_fu_931_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1562 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_fu_935_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_1_reg_1566 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln242_fu_939_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln242_reg_1570 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_2_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op133_read_state7 : BOOLEAN;
    signal ap_predicate_op146_read_state7 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op226_write_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln887_2_reg_1575_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_1_fu_967_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_1_reg_1579 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln544_1_fu_973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_reg_1584 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_6_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l00_buf_2_V_xfExtractPixels_fu_650_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal l10_buf_2_V_xfExtractPixels_fu_655_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal l20_buf_2_V_xfExtractPixels_fu_660_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal angle_buf_2_V_xfExtractPixels_1_fu_665_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln398_fu_1422_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal read_ind_V_1_fu_1436_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln405_fu_1450_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_V_fu_1458_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal angle_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal angle_0_V_ce0 : STD_LOGIC;
    signal angle_0_V_we0 : STD_LOGIC;
    signal angle_0_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal angle_0_V_ce1 : STD_LOGIC;
    signal angle_0_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal angle_1_V_ce0 : STD_LOGIC;
    signal angle_1_V_we0 : STD_LOGIC;
    signal angle_1_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal angle_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal angle_1_V_ce1 : STD_LOGIC;
    signal angle_1_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_we0 : STD_LOGIC;
    signal buf_0_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_we0 : STD_LOGIC;
    signal buf_1_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_we0 : STD_LOGIC;
    signal buf_2_V_d0 : STD_LOGIC_VECTOR (14 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_q1 : STD_LOGIC_VECTOR (14 downto 0);
    signal l00_buf_2_V_xfExtractPixels_fu_650_ap_ready : STD_LOGIC;
    signal l10_buf_2_V_xfExtractPixels_fu_655_ap_ready : STD_LOGIC;
    signal l20_buf_2_V_xfExtractPixels_fu_660_ap_ready : STD_LOGIC;
    signal angle_buf_2_V_xfExtractPixels_1_fu_665_ap_ready : STD_LOGIC;
    signal angle_buf_2_V_xfExtractPixels_1_fu_665_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_1_reg_503 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_2_reg_515 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_3_reg_527 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_4_reg_539 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_t_V_5_phi_fu_555_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_l20_buf_V_0_0_i_phi_fu_567_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_l20_buf_0_V_phi_fu_580_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_l10_buf_0_V_phi_fu_592_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_l10_buf_V_0_0_i_phi_fu_604_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_l00_buf_0_V_phi_fu_629_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_l00_buf_V_0_0_i_phi_fu_641_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf0_V_fu_1020_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf1_V_fu_1032_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf2_V_fu_1044_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_0_V_addr_1_gep_fu_390_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_gep_fu_396_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_gep_fu_402_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal angle_0_V_addr_1_gep_fu_411_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal angle_1_V_addr_gep_fu_417_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_0327_0_i_fu_232 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0319_0_i_fu_236 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0300_0_i_fu_240 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_V_fu_1224_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal tmp_V_2_fu_1389_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln321_2_fu_992_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln321_fu_780_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln321_3_fu_987_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln321_1_fu_997_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_670_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_676_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_683_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_683_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_691_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_705_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_712_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_712_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_720_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_727_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_727_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_735_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_735_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_743_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_750_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_750_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln346_fu_785_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln887_1_fu_800_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln879_2_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_fu_870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln879_fu_876_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln358_fu_840_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_1_fu_894_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln358_1_fu_848_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln879_3_fu_910_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln358_2_fu_856_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln887_fu_818_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln887_2_fu_958_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln321_3_fu_987_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln321_2_fu_992_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln321_1_fu_997_p0 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln321_4_fu_1008_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln321_5_fu_1012_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln321_6_fu_1016_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln57_1_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_1_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_697_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln57_1_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_1_fu_1090_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_9_fu_1082_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_712_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln81_2_fu_1110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_7_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln81_3_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln81_1_fu_1122_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln57_1_fu_1096_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln108_1_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_10_fu_1130_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln108_1_fu_1144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln108_1_fu_1158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_11_fu_1150_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_10_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln134_4_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln134_3_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln134_5_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln134_1_fu_1196_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln879_2_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_2_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln108_1_fu_1164_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln895_1_fu_1204_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln57_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln57_fu_1247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln57_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_5_fu_1253_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln81_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln81_1_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln81_fu_1293_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln57_fu_1267_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln108_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_6_fu_1301_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln108_fu_1315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln108_fu_1329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_7_fu_1321_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln134_1_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln134_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln134_2_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln134_fu_1361_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln879_1_fu_1377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_1_fu_1383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln108_fu_1335_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln895_fu_1369_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_ind_V_fu_1398_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln879_3_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_ind_V_fu_1404_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln879_4_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal write_ind_V_fu_1410_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln879_5_fu_1444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_1059 : BOOLEAN;
    signal ap_condition_1063 : BOOLEAN;

    component xfExtractPixels IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component xfExtractPixels_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_mux_mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component xFSuppression3x3_hbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xFSuppression3x3_jbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (14 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    angle_0_V_U : component xFSuppression3x3_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => angle_0_V_address0,
        ce0 => angle_0_V_ce0,
        we0 => angle_0_V_we0,
        d0 => angle_0_V_d0,
        address1 => angle_0_V_address1,
        ce1 => angle_0_V_ce1,
        q1 => angle_0_V_q1);

    angle_1_V_U : component xFSuppression3x3_hbi
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => angle_1_V_address0,
        ce0 => angle_1_V_ce0,
        we0 => angle_1_V_we0,
        d0 => angle_1_V_d0,
        address1 => angle_1_V_address1,
        ce1 => angle_1_V_ce1,
        q1 => angle_1_V_q1);

    buf_0_V_U : component xFSuppression3x3_jbC
    generic map (
        DataWidth => 15,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        we0 => buf_0_V_we0,
        d0 => buf_0_V_d0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        q1 => buf_0_V_q1);

    buf_1_V_U : component xFSuppression3x3_jbC
    generic map (
        DataWidth => 15,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        we0 => buf_1_V_we0,
        d0 => buf_1_V_d0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        q1 => buf_1_V_q1);

    buf_2_V_U : component xFSuppression3x3_jbC
    generic map (
        DataWidth => 15,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        we0 => buf_2_V_we0,
        d0 => buf_2_V_d0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        q1 => buf_2_V_q1);

    l00_buf_2_V_xfExtractPixels_fu_650 : component xfExtractPixels
    port map (
        ap_ready => l00_buf_2_V_xfExtractPixels_fu_650_ap_ready,
        val1_V_read => buf0_V_fu_1020_p5,
        ap_return => l00_buf_2_V_xfExtractPixels_fu_650_ap_return);

    l10_buf_2_V_xfExtractPixels_fu_655 : component xfExtractPixels
    port map (
        ap_ready => l10_buf_2_V_xfExtractPixels_fu_655_ap_ready,
        val1_V_read => buf1_V_fu_1032_p5,
        ap_return => l10_buf_2_V_xfExtractPixels_fu_655_ap_return);

    l20_buf_2_V_xfExtractPixels_fu_660 : component xfExtractPixels
    port map (
        ap_ready => l20_buf_2_V_xfExtractPixels_fu_660_ap_ready,
        val1_V_read => buf2_V_fu_1044_p5,
        ap_return => l20_buf_2_V_xfExtractPixels_fu_660_ap_return);

    angle_buf_2_V_xfExtractPixels_1_fu_665 : component xfExtractPixels_1
    port map (
        ap_ready => angle_buf_2_V_xfExtractPixels_1_fu_665_ap_ready,
        val1_V_read => angle_buf_2_V_xfExtractPixels_1_fu_665_val1_V_read,
        ap_return => angle_buf_2_V_xfExtractPixels_1_fu_665_ap_return);

    ip_accel_app_mux_mb6_U137 : component ip_accel_app_mux_mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => sext_ln321_4_fu_1008_p1,
        din1 => sext_ln321_5_fu_1012_p1,
        din2 => sext_ln321_6_fu_1016_p1,
        din3 => select_ln879_reg_1543,
        dout => buf0_V_fu_1020_p5);

    ip_accel_app_mux_mb6_U138 : component ip_accel_app_mux_mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => sext_ln321_4_fu_1008_p1,
        din1 => sext_ln321_5_fu_1012_p1,
        din2 => sext_ln321_6_fu_1016_p1,
        din3 => select_ln879_2_reg_1548,
        dout => buf1_V_fu_1032_p5);

    ip_accel_app_mux_mb6_U139 : component ip_accel_app_mux_mb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 2,
        dout_WIDTH => 16)
    port map (
        din0 => sext_ln321_4_fu_1008_p1,
        din1 => sext_ln321_5_fu_1012_p1,
        din2 => sext_ln321_6_fu_1016_p1,
        din3 => select_ln879_4_reg_1553,
        dout => buf2_V_fu_1044_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln887_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln887_2_fu_962_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    angle_buf_V_1_0_i_reg_613_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                angle_buf_V_1_0_i_reg_613 <= angle_buf_2_V_xfExtractPixels_1_fu_665_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                angle_buf_V_1_0_i_reg_613 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    index_assign_reg_481_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln332_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                index_assign_reg_481 <= read_index1_fu_763_p2;
            elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                index_assign_reg_481 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    l00_buf_0_V_reg_625_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                l00_buf_0_V_reg_625 <= l00_buf_2_V_xfExtractPixels_fu_650_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                l00_buf_0_V_reg_625 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    l00_buf_V_0_0_i_reg_637_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                l00_buf_V_0_0_i_reg_637 <= l00_buf_0_V_reg_625;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                l00_buf_V_0_0_i_reg_637 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    l10_buf_0_V_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                l10_buf_0_V_reg_588 <= l10_buf_2_V_xfExtractPixels_fu_655_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                l10_buf_0_V_reg_588 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    l10_buf_V_0_0_i_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                l10_buf_V_0_0_i_reg_600 <= l10_buf_0_V_reg_588;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                l10_buf_V_0_0_i_reg_600 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    l20_buf_0_V_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                l20_buf_0_V_reg_575 <= l20_buf_2_V_xfExtractPixels_fu_660_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                l20_buf_0_V_reg_575 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    l20_buf_V_0_0_i_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1))) then 
                l20_buf_V_0_0_i_reg_563 <= l20_buf_0_V_reg_575;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                l20_buf_V_0_0_i_reg_563 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    t_V_1_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                t_V_1_reg_503 <= select_ln398_fu_1422_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_1_reg_503 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    t_V_2_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                t_V_2_reg_515 <= read_ind_V_1_fu_1436_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_2_reg_515 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    t_V_3_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                t_V_3_reg_527 <= select_ln405_fu_1450_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_3_reg_527 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_4_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                t_V_4_reg_539 <= row_V_fu_1458_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                t_V_4_reg_539 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    t_V_5_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1))) then 
                t_V_5_reg_551 <= col_V_1_reg_1579;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then 
                t_V_5_reg_551 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln332_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_492 <= col_V_fu_774_p2;
            elsif ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_492 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln346_reg_1524 <= add_ln346_fu_788_p2;
                    zext_ln895_1_reg_1534(7 downto 0) <= zext_ln895_1_fu_797_p1(7 downto 0);
                    zext_ln895_reg_1529(7 downto 0) <= zext_ln895_fu_794_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                col_V_1_reg_1579 <= col_V_1_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                high_threshold_read_reg_1469 <= high_threshold_dout;
                imgheight_read_reg_1474 <= imgheight_dout;
                imgwidth_read_reg_1480 <= imgwidth_dout;
                low_threshold_read_reg_1464 <= low_threshold_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln332_reg_1486 <= icmp_ln332_fu_758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1))) then
                icmp_ln879_6_reg_1593 <= icmp_ln879_6_fu_1002_p2;
                    zext_ln544_1_reg_1584(12 downto 0) <= zext_ln544_1_fu_973_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln879_6_reg_1593_pp1_iter2_reg <= icmp_ln879_6_reg_1593;
                icmp_ln887_2_reg_1575_pp1_iter2_reg <= icmp_ln887_2_reg_1575_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_fu_804_p2 = ap_const_lv1_1))) then
                icmp_ln887_1_reg_1558 <= icmp_ln887_1_fu_926_p2;
                p_0300_0_i_fu_240 <= select_ln879_fu_886_p3;
                p_0319_0_i_fu_236 <= select_ln879_2_fu_902_p3;
                p_0327_0_i_fu_232 <= select_ln879_4_fu_918_p3;
                select_ln879_2_reg_1548 <= select_ln879_2_fu_902_p3;
                select_ln879_4_reg_1553 <= select_ln879_4_fu_918_p3;
                select_ln879_reg_1543 <= select_ln879_fu_886_p3;
                trunc_ln242_reg_1570 <= trunc_ln242_fu_939_p1;
                trunc_ln321_1_reg_1566 <= trunc_ln321_1_fu_935_p1;
                trunc_ln321_reg_1562 <= trunc_ln321_fu_931_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln887_2_reg_1575 <= icmp_ln887_2_fu_962_p2;
                icmp_ln887_2_reg_1575_pp1_iter1_reg <= icmp_ln887_2_reg_1575;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln332_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln544_reg_1495(12 downto 0) <= zext_ln544_fu_769_p1(12 downto 0);
            end if;
        end if;
    end process;
    zext_ln544_reg_1495(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln895_reg_1529(15 downto 8) <= "00000000";
    zext_ln895_1_reg_1534(15 downto 8) <= "00000000";
    zext_ln544_1_reg_1584(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_dst_mat_data_V_full_n, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, icmp_ln332_fu_758_p2, ap_enable_reg_pp0_iter0, icmp_ln887_fu_804_p2, ap_CS_fsm_state5, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln332_fu_758_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln332_fu_758_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln887_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state10 => 
                if (((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln346_fu_788_p2 <= std_logic_vector(unsigned(zext_ln346_fu_785_p1) + unsigned(ap_const_lv17_1));
    and_ln108_1_fu_1158_p2 <= (or_ln108_1_fu_1144_p2 and grp_fu_720_p2);
    and_ln108_fu_1329_p2 <= (or_ln108_fu_1315_p2 and grp_fu_720_p2);
    and_ln134_1_fu_1349_p2 <= (icmp_ln895_2_fu_1275_p2 and grp_fu_750_p2);
    and_ln134_2_fu_1355_p2 <= (and_ln134_fu_1343_p2 and and_ln134_1_fu_1349_p2);
    and_ln134_3_fu_1178_p2 <= (grp_fu_743_p2 and grp_fu_670_p2);
    and_ln134_4_fu_1184_p2 <= (icmp_ln895_10_fu_1172_p2 and grp_fu_750_p2);
    and_ln134_5_fu_1190_p2 <= (and_ln134_4_fu_1184_p2 and and_ln134_3_fu_1178_p2);
    and_ln134_fu_1343_p2 <= (grp_fu_743_p2 and grp_fu_670_p2);
    and_ln57_1_fu_1090_p2 <= (or_ln57_1_fu_1076_p2 and grp_fu_676_p2);
    and_ln57_fu_1261_p2 <= (or_ln57_fu_1247_p2 and grp_fu_676_p2);
    and_ln81_1_fu_1287_p2 <= (icmp_ln895_2_fu_1275_p2 and and_ln81_fu_1281_p2);
    and_ln81_2_fu_1110_p2 <= (grp_fu_712_p2 and grp_fu_705_p2);
    and_ln81_3_fu_1116_p2 <= (icmp_ln895_7_fu_1104_p2 and and_ln81_2_fu_1110_p2);
    and_ln81_fu_1281_p2 <= (grp_fu_712_p2 and grp_fu_705_p2);
    and_ln879_1_fu_1383_p2 <= (xor_ln879_1_fu_1377_p2 and grp_fu_670_p2);
    and_ln879_2_fu_1218_p2 <= (xor_ln879_2_fu_1212_p2 and grp_fu_670_p2);
    and_ln879_fu_870_p2 <= (xor_ln879_fu_864_p2 and icmp_ln879_1_fu_828_p2);
    angle_0_V_addr_1_gep_fu_411_p3 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);

    angle_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, zext_ln544_reg_1495, trunc_ln321_1_reg_1566, zext_ln544_1_fu_973_p1, angle_0_V_addr_1_gep_fu_411_p3)
    begin
        if (((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            angle_0_V_address0 <= angle_0_V_addr_1_gep_fu_411_p3;
        elsif (((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            angle_0_V_address0 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            angle_0_V_address0 <= zext_ln544_reg_1495(11 - 1 downto 0);
        else 
            angle_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    angle_0_V_address1 <= zext_ln544_1_reg_1584(11 - 1 downto 0);

    angle_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_block_pp0_stage0_11001, trunc_ln321_1_reg_1566, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            angle_0_V_ce0 <= ap_const_logic_1;
        else 
            angle_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    angle_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            angle_0_V_ce1 <= ap_const_logic_1;
        else 
            angle_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    angle_0_V_d0_assign_proc : process(p_phase_mat_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, trunc_ln321_1_reg_1566)
    begin
        if (((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            angle_0_V_d0 <= ap_const_lv8_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            angle_0_V_d0 <= p_phase_mat_data_V_dout;
        else 
            angle_0_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    angle_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln332_reg_1486, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_block_pp0_stage0_11001, trunc_ln321_1_reg_1566, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln332_reg_1486 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((trunc_ln321_1_reg_1566 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            angle_0_V_we0 <= ap_const_logic_1;
        else 
            angle_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    angle_1_V_addr_gep_fu_417_p3 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);

    angle_1_V_address0_assign_proc : process(icmp_ln887_1_reg_1558, zext_ln544_1_fu_973_p1, angle_1_V_addr_gep_fu_417_p3, ap_condition_1059)
    begin
        if ((ap_const_boolean_1 = ap_condition_1059)) then
            if ((icmp_ln887_1_reg_1558 = ap_const_lv1_1)) then 
                angle_1_V_address0 <= angle_1_V_addr_gep_fu_417_p3;
            elsif ((icmp_ln887_1_reg_1558 = ap_const_lv1_0)) then 
                angle_1_V_address0 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);
            else 
                angle_1_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            angle_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    angle_1_V_address1 <= zext_ln544_1_reg_1584(11 - 1 downto 0);

    angle_1_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, trunc_ln321_1_reg_1566, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (trunc_ln321_1_reg_1566 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (trunc_ln321_1_reg_1566 = ap_const_lv1_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            angle_1_V_ce0 <= ap_const_logic_1;
        else 
            angle_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    angle_1_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            angle_1_V_ce1 <= ap_const_logic_1;
        else 
            angle_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    angle_1_V_d0_assign_proc : process(p_phase_mat_data_V_dout, icmp_ln887_1_reg_1558, ap_condition_1059)
    begin
        if ((ap_const_boolean_1 = ap_condition_1059)) then
            if ((icmp_ln887_1_reg_1558 = ap_const_lv1_1)) then 
                angle_1_V_d0 <= p_phase_mat_data_V_dout;
            elsif ((icmp_ln887_1_reg_1558 = ap_const_lv1_0)) then 
                angle_1_V_d0 <= ap_const_lv8_0;
            else 
                angle_1_V_d0 <= "XXXXXXXX";
            end if;
        else 
            angle_1_V_d0 <= "XXXXXXXX";
        end if; 
    end process;


    angle_1_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, trunc_ln321_1_reg_1566, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (trunc_ln321_1_reg_1566 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (trunc_ln321_1_reg_1566 = ap_const_lv1_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            angle_1_V_we0 <= ap_const_logic_1;
        else 
            angle_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    angle_buf_2_V_xfExtractPixels_1_fu_665_val1_V_read <= 
        angle_1_V_q1 when (trunc_ln242_reg_1570(0) = '1') else 
        angle_0_V_q1;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(5);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln332_reg_1486)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln332_reg_1486 = ap_const_lv1_0) and (p_phase_mat_data_V_empty_n = ap_const_logic_0)) or ((icmp_ln332_reg_1486 = ap_const_lv1_0) and (p_magnitude_mat_data_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln332_reg_1486)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln332_reg_1486 = ap_const_lv1_0) and (p_phase_mat_data_V_empty_n = ap_const_logic_0)) or ((icmp_ln332_reg_1486 = ap_const_lv1_0) and (p_magnitude_mat_data_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, p_dst_mat_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op133_read_state7, ap_predicate_op146_read_state7, ap_predicate_op226_write_state9)
    begin
                ap_block_pp1_stage0_01001 <= (((p_dst_mat_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op226_write_state9 = ap_const_boolean_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((p_phase_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state7 = ap_const_boolean_1)) or ((p_magnitude_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, p_dst_mat_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op133_read_state7, ap_predicate_op146_read_state7, ap_predicate_op226_write_state9)
    begin
                ap_block_pp1_stage0_11001 <= (((p_dst_mat_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op226_write_state9 = ap_const_boolean_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((p_phase_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state7 = ap_const_boolean_1)) or ((p_magnitude_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, p_dst_mat_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_predicate_op133_read_state7, ap_predicate_op146_read_state7, ap_predicate_op226_write_state9)
    begin
                ap_block_pp1_stage0_subdone <= (((p_dst_mat_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op226_write_state9 = ap_const_boolean_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((p_phase_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state7 = ap_const_boolean_1)) or ((p_magnitude_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state7 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
                ap_block_state1 <= ((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, icmp_ln332_reg_1486)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((icmp_ln332_reg_1486 = ap_const_lv1_0) and (p_phase_mat_data_V_empty_n = ap_const_logic_0)) or ((icmp_ln332_reg_1486 = ap_const_lv1_0) and (p_magnitude_mat_data_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(p_magnitude_mat_data_V_empty_n, p_phase_mat_data_V_empty_n, ap_predicate_op133_read_state7, ap_predicate_op146_read_state7)
    begin
                ap_block_state7_pp1_stage0_iter1 <= (((p_phase_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op146_read_state7 = ap_const_boolean_1)) or ((p_magnitude_mat_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op133_read_state7 = ap_const_boolean_1)));
    end process;

        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter3_assign_proc : process(p_dst_mat_data_V_full_n, ap_predicate_op226_write_state9)
    begin
                ap_block_state9_pp1_stage0_iter3 <= ((p_dst_mat_data_V_full_n = ap_const_logic_0) and (ap_predicate_op226_write_state9 = ap_const_boolean_1));
    end process;


    ap_condition_1059_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, trunc_ln321_1_reg_1566)
    begin
                ap_condition_1059 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (trunc_ln321_1_reg_1566 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0));
    end process;


    ap_condition_1063_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, trunc_ln321_reg_1562)
    begin
                ap_condition_1063 <= (not((trunc_ln321_reg_1562 = ap_const_lv2_1)) and not((trunc_ln321_reg_1562 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln332_fu_758_p2)
    begin
        if ((icmp_ln332_fu_758_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln887_fu_804_p2, ap_CS_fsm_state5)
    begin
        if (((icmp_ln887_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4 <= angle_buf_V_1_0_i_reg_613;
    ap_phi_mux_l00_buf_0_V_phi_fu_629_p4 <= l00_buf_0_V_reg_625;
    ap_phi_mux_l00_buf_V_0_0_i_phi_fu_641_p4 <= l00_buf_V_0_0_i_reg_637;
    ap_phi_mux_l10_buf_0_V_phi_fu_592_p4 <= l10_buf_0_V_reg_588;
    ap_phi_mux_l10_buf_V_0_0_i_phi_fu_604_p4 <= l10_buf_V_0_0_i_reg_600;
    ap_phi_mux_l20_buf_0_V_phi_fu_580_p4 <= l20_buf_0_V_reg_575;
    ap_phi_mux_l20_buf_V_0_0_i_phi_fu_567_p4 <= l20_buf_V_0_0_i_reg_563;

    ap_phi_mux_t_V_5_phi_fu_555_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, t_V_5_reg_551, col_V_1_reg_1579)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            ap_phi_mux_t_V_5_phi_fu_555_p4 <= col_V_1_reg_1579;
        else 
            ap_phi_mux_t_V_5_phi_fu_555_p4 <= t_V_5_reg_551;
        end if; 
    end process;


    ap_predicate_op133_read_state7_assign_proc : process(icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558)
    begin
                ap_predicate_op133_read_state7 <= ((icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1));
    end process;


    ap_predicate_op146_read_state7_assign_proc : process(icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558)
    begin
                ap_predicate_op146_read_state7 <= ((icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1));
    end process;


    ap_predicate_op226_write_state9_assign_proc : process(icmp_ln887_2_reg_1575_pp1_iter2_reg, icmp_ln879_6_reg_1593_pp1_iter2_reg)
    begin
                ap_predicate_op226_write_state9 <= ((icmp_ln879_6_reg_1593_pp1_iter2_reg = ap_const_lv1_0) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    buf_0_V_addr_1_gep_fu_390_p3 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);

    buf_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_enable_reg_pp0_iter0, zext_ln544_fu_769_p1, trunc_ln321_reg_1562, zext_ln544_1_fu_973_p1, buf_0_V_addr_1_gep_fu_390_p3)
    begin
        if (((trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_0_V_address0 <= buf_0_V_addr_1_gep_fu_390_p3;
        elsif (((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_0_V_address0 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address0 <= zext_ln544_fu_769_p1(11 - 1 downto 0);
        else 
            buf_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    buf_0_V_address1 <= zext_ln544_1_reg_1584(11 - 1 downto 0);

    buf_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln321_reg_1562, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_enable_reg_pp0_iter0, trunc_ln321_reg_1562, sext_ln321_2_fu_992_p1)
    begin
        if (((trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_0_V_d0 <= sext_ln321_2_fu_992_p1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            buf_0_V_d0 <= ap_const_lv15_0;
        else 
            buf_0_V_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, icmp_ln332_fu_758_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln321_reg_1562, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln332_fu_758_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            buf_0_V_we0 <= ap_const_logic_1;
        else 
            buf_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_1_gep_fu_396_p3 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);

    buf_1_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, zext_ln544_reg_1495, trunc_ln321_reg_1562, zext_ln544_1_fu_973_p1, buf_1_V_addr_1_gep_fu_396_p3)
    begin
        if (((trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_1_V_address0 <= buf_1_V_addr_1_gep_fu_396_p3;
        elsif (((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_1_V_address0 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address0 <= zext_ln544_reg_1495(11 - 1 downto 0);
        else 
            buf_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    buf_1_V_address1 <= zext_ln544_1_reg_1584(11 - 1 downto 0);

    buf_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_block_pp0_stage0_11001, trunc_ln321_reg_1562, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, trunc_ln321_reg_1562, sext_ln321_fu_780_p1, sext_ln321_3_fu_987_p1)
    begin
        if (((trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_1_V_d0 <= sext_ln321_3_fu_987_p1;
        elsif (((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            buf_1_V_d0 <= ap_const_lv15_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_d0 <= sext_ln321_fu_780_p1;
        else 
            buf_1_V_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln332_reg_1486, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, ap_block_pp0_stage0_11001, trunc_ln321_reg_1562, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln332_reg_1486 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (trunc_ln321_reg_1562 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            buf_1_V_we0 <= ap_const_logic_1;
        else 
            buf_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_402_p3 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);

    buf_2_V_address0_assign_proc : process(icmp_ln887_1_reg_1558, zext_ln544_1_fu_973_p1, buf_2_V_addr_gep_fu_402_p3, ap_condition_1063)
    begin
        if ((ap_const_boolean_1 = ap_condition_1063)) then
            if ((icmp_ln887_1_reg_1558 = ap_const_lv1_1)) then 
                buf_2_V_address0 <= buf_2_V_addr_gep_fu_402_p3;
            elsif ((icmp_ln887_1_reg_1558 = ap_const_lv1_0)) then 
                buf_2_V_address0 <= zext_ln544_1_fu_973_p1(11 - 1 downto 0);
            else 
                buf_2_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    buf_2_V_address1 <= zext_ln544_1_reg_1584(11 - 1 downto 0);

    buf_2_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, trunc_ln321_reg_1562, ap_block_pp1_stage0_11001)
    begin
        if (((not((trunc_ln321_reg_1562 = ap_const_lv2_1)) and not((trunc_ln321_reg_1562 = ap_const_lv2_0)) and (icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or (not((trunc_ln321_reg_1562 = ap_const_lv2_1)) and not((trunc_ln321_reg_1562 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d0_assign_proc : process(icmp_ln887_1_reg_1558, sext_ln321_1_fu_997_p1, ap_condition_1063)
    begin
        if ((ap_const_boolean_1 = ap_condition_1063)) then
            if ((icmp_ln887_1_reg_1558 = ap_const_lv1_1)) then 
                buf_2_V_d0 <= sext_ln321_1_fu_997_p1;
            elsif ((icmp_ln887_1_reg_1558 = ap_const_lv1_0)) then 
                buf_2_V_d0 <= ap_const_lv15_0;
            else 
                buf_2_V_d0 <= "XXXXXXXXXXXXXXX";
            end if;
        else 
            buf_2_V_d0 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558, trunc_ln321_reg_1562, ap_block_pp1_stage0_11001)
    begin
        if (((not((trunc_ln321_reg_1562 = ap_const_lv2_1)) and not((trunc_ln321_reg_1562 = ap_const_lv2_0)) and (icmp_ln887_1_reg_1558 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)) or (not((trunc_ln321_reg_1562 = ap_const_lv2_1)) and not((trunc_ln321_reg_1562 = ap_const_lv2_0)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1)))) then 
            buf_2_V_we0 <= ap_const_logic_1;
        else 
            buf_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_1_fu_967_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_5_phi_fu_555_p4) + unsigned(ap_const_lv13_1));
    col_V_fu_774_p2 <= std_logic_vector(unsigned(t_V_reg_492) + unsigned(ap_const_lv13_1));

    grp_fu_670_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_670_p1 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_670_p1 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_670_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_670_p2 <= "1" when (signed(zext_ln895_reg_1529) < signed(grp_fu_670_p1)) else "0";

    grp_fu_676_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, angle_buf_V_1_0_i_reg_613, ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_676_p0 <= angle_buf_V_1_0_i_reg_613;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_676_p0 <= ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4;
        else 
            grp_fu_676_p0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_fu_676_p2 <= "1" when (grp_fu_676_p0 = ap_const_lv8_0) else "0";

    grp_fu_683_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_V_0_0_i_reg_600, ap_phi_mux_l10_buf_V_0_0_i_phi_fu_604_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_683_p0 <= l10_buf_V_0_0_i_reg_600;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_683_p0 <= ap_phi_mux_l10_buf_V_0_0_i_phi_fu_604_p4;
        else 
            grp_fu_683_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_683_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_683_p1 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_683_p1 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_683_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_683_p2 <= "1" when (signed(grp_fu_683_p0) < signed(grp_fu_683_p1)) else "0";

    grp_fu_691_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_691_p1 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_691_p1 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_691_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_691_p2 <= "1" when (signed(zext_ln895_1_reg_1534) < signed(grp_fu_691_p1)) else "0";
    grp_fu_697_p3 <= 
        ap_const_lv2_3 when (grp_fu_691_p2(0) = '1') else 
        ap_const_lv2_1;

    grp_fu_705_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, angle_buf_V_1_0_i_reg_613, ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_705_p0 <= angle_buf_V_1_0_i_reg_613;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_705_p0 <= ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4;
        else 
            grp_fu_705_p0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_fu_705_p2 <= "1" when (grp_fu_705_p0 = ap_const_lv8_2D) else "0";

    grp_fu_712_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_712_p0 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_712_p0 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_712_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_712_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l20_buf_V_0_0_i_reg_563, ap_phi_mux_l20_buf_V_0_0_i_phi_fu_567_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_712_p1 <= l20_buf_V_0_0_i_reg_563;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_712_p1 <= ap_phi_mux_l20_buf_V_0_0_i_phi_fu_567_p4;
        else 
            grp_fu_712_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_712_p2 <= "1" when (signed(grp_fu_712_p0) > signed(grp_fu_712_p1)) else "0";

    grp_fu_720_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, angle_buf_V_1_0_i_reg_613, ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_720_p0 <= angle_buf_V_1_0_i_reg_613;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_720_p0 <= ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4;
        else 
            grp_fu_720_p0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_fu_720_p2 <= "1" when (grp_fu_720_p0 = ap_const_lv8_5A) else "0";

    grp_fu_727_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l00_buf_0_V_reg_625, ap_phi_mux_l00_buf_0_V_phi_fu_629_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_727_p0 <= l00_buf_0_V_reg_625;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_727_p0 <= ap_phi_mux_l00_buf_0_V_phi_fu_629_p4;
        else 
            grp_fu_727_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_727_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_727_p1 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_727_p1 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_727_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_727_p2 <= "1" when (signed(grp_fu_727_p0) < signed(grp_fu_727_p1)) else "0";

    grp_fu_735_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_735_p0 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_735_p0 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_735_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_735_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l20_buf_0_V_reg_575, ap_phi_mux_l20_buf_0_V_phi_fu_580_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_735_p1 <= l20_buf_0_V_reg_575;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_735_p1 <= ap_phi_mux_l20_buf_0_V_phi_fu_580_p4;
        else 
            grp_fu_735_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_735_p2 <= "1" when (signed(grp_fu_735_p0) < signed(grp_fu_735_p1)) else "0";

    grp_fu_743_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, angle_buf_V_1_0_i_reg_613, ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_743_p0 <= angle_buf_V_1_0_i_reg_613;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_743_p0 <= ap_phi_mux_angle_buf_V_1_0_i_phi_fu_617_p4;
        else 
            grp_fu_743_p0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_fu_743_p2 <= "1" when (grp_fu_743_p0 = ap_const_lv8_87) else "0";

    grp_fu_750_p0_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l10_buf_0_V_reg_588, ap_phi_mux_l10_buf_0_V_phi_fu_592_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_750_p0 <= l10_buf_0_V_reg_588;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_750_p0 <= ap_phi_mux_l10_buf_0_V_phi_fu_592_p4;
        else 
            grp_fu_750_p0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_750_p1_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, l00_buf_V_0_0_i_reg_637, ap_phi_mux_l00_buf_V_0_0_i_phi_fu_641_p4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_750_p1 <= l00_buf_V_0_0_i_reg_637;
        elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            grp_fu_750_p1 <= ap_phi_mux_l00_buf_V_0_0_i_phi_fu_641_p4;
        else 
            grp_fu_750_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_750_p2 <= "1" when (signed(grp_fu_750_p0) > signed(grp_fu_750_p1)) else "0";

    high_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, high_threshold_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_blk_n <= high_threshold_empty_n;
        else 
            high_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    high_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            high_threshold_read <= ap_const_logic_1;
        else 
            high_threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln332_fu_758_p2 <= "1" when (index_assign_reg_481 = imgwidth_read_reg_1480) else "0";
    icmp_ln879_1_fu_828_p2 <= "1" when (t_V_1_reg_503 = ap_const_lv13_0) else "0";
    icmp_ln879_2_fu_834_p2 <= "1" when (t_V_1_reg_503 = ap_const_lv13_1) else "0";
    icmp_ln879_3_fu_1416_p2 <= "1" when (row_ind_V_fu_1398_p2 = ap_const_lv13_3) else "0";
    icmp_ln879_4_fu_1430_p2 <= "1" when (read_ind_V_fu_1404_p2 = ap_const_lv13_2) else "0";
    icmp_ln879_5_fu_1444_p2 <= "1" when (write_ind_V_fu_1410_p2 = ap_const_lv13_2) else "0";
    icmp_ln879_6_fu_1002_p2 <= "1" when (t_V_5_reg_551 = ap_const_lv13_0) else "0";
    icmp_ln879_fu_822_p2 <= "1" when (t_V_1_reg_503 = ap_const_lv13_2) else "0";
    icmp_ln887_1_fu_926_p2 <= "1" when (unsigned(zext_ln887_fu_818_p1) < unsigned(imgheight_read_reg_1474)) else "0";
    icmp_ln887_2_fu_962_p2 <= "1" when (unsigned(zext_ln887_2_fu_958_p1) < unsigned(imgwidth_read_reg_1480)) else "0";
    icmp_ln887_fu_804_p2 <= "1" when (unsigned(zext_ln887_1_fu_800_p1) < unsigned(add_ln346_reg_1524)) else "0";
    icmp_ln891_1_fu_1070_p2 <= "1" when (signed(l10_buf_0_V_reg_588) < signed(l10_buf_2_V_xfExtractPixels_fu_655_ap_return)) else "0";
    icmp_ln895_10_fu_1172_p2 <= "1" when (signed(l10_buf_0_V_reg_588) > signed(l20_buf_2_V_xfExtractPixels_fu_660_ap_return)) else "0";
    icmp_ln895_2_fu_1275_p2 <= "1" when (signed(l10_buf_0_V_reg_588) > signed(ap_const_lv16_0)) else "0";
    icmp_ln895_7_fu_1104_p2 <= "1" when (signed(l10_buf_0_V_reg_588) > signed(l00_buf_2_V_xfExtractPixels_fu_650_ap_return)) else "0";

    imgheight_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgheight_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_blk_n <= imgheight_empty_n;
        else 
            imgheight_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgheight_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgheight_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_out_blk_n <= imgheight_out_full_n;
        else 
            imgheight_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgheight_out_din <= imgheight_dout;

    imgheight_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_out_write <= ap_const_logic_1;
        else 
            imgheight_out_write <= ap_const_logic_0;
        end if; 
    end process;


    imgheight_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgheight_read <= ap_const_logic_1;
        else 
            imgheight_read <= ap_const_logic_0;
        end if; 
    end process;


    imgwidth_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgwidth_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_blk_n <= imgwidth_empty_n;
        else 
            imgwidth_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgwidth_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, imgwidth_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_out_blk_n <= imgwidth_out_full_n;
        else 
            imgwidth_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgwidth_out_din <= imgwidth_dout;

    imgwidth_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_out_write <= ap_const_logic_1;
        else 
            imgwidth_out_write <= ap_const_logic_0;
        end if; 
    end process;


    imgwidth_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            imgwidth_read <= ap_const_logic_1;
        else 
            imgwidth_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(icmp_ln887_fu_804_p2, ap_CS_fsm_state5)
    begin
        if (((icmp_ln887_fu_804_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    low_threshold_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_blk_n <= low_threshold_empty_n;
        else 
            low_threshold_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    low_threshold_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, low_threshold_empty_n, high_threshold_empty_n, imgheight_empty_n, imgwidth_empty_n, imgheight_out_full_n, imgwidth_out_full_n)
    begin
        if ((not(((imgwidth_out_full_n = ap_const_logic_0) or (imgheight_out_full_n = ap_const_logic_0) or (imgwidth_empty_n = ap_const_logic_0) or (imgheight_empty_n = ap_const_logic_0) or (high_threshold_empty_n = ap_const_logic_0) or (low_threshold_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            low_threshold_read <= ap_const_logic_1;
        else 
            low_threshold_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln108_1_fu_1144_p2 <= (xor_ln108_1_fu_1138_p2 or grp_fu_735_p2);
    or_ln108_fu_1315_p2 <= (xor_ln108_fu_1309_p2 or grp_fu_735_p2);
    or_ln57_1_fu_1076_p2 <= (xor_ln57_1_fu_1064_p2 or icmp_ln891_1_fu_1070_p2);
    or_ln57_fu_1247_p2 <= (xor_ln57_fu_1233_p2 or tmp_fu_1239_p3);
    or_ln879_fu_880_p2 <= (icmp_ln879_fu_822_p2 or and_ln879_fu_870_p2);

    p_dst_mat_data_V_blk_n_assign_proc : process(p_dst_mat_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter3, icmp_ln887_2_reg_1575_pp1_iter2_reg, icmp_ln879_6_reg_1593_pp1_iter2_reg, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((icmp_ln879_6_reg_1593_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (icmp_ln887_2_reg_1575_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            p_dst_mat_data_V_blk_n <= p_dst_mat_data_V_full_n;
        else 
            p_dst_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_dst_mat_data_V_din_assign_proc : process(p_dst_mat_data_V_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op226_write_state9, tmp_V_fu_1224_p3, ap_block_pp1_stage0_01001, tmp_V_2_fu_1389_p3)
    begin
        if (((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            p_dst_mat_data_V_din <= tmp_V_2_fu_1389_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op226_write_state9 = ap_const_boolean_1))) then 
            p_dst_mat_data_V_din <= tmp_V_fu_1224_p3;
        else 
            p_dst_mat_data_V_din <= "XX";
        end if; 
    end process;


    p_dst_mat_data_V_write_assign_proc : process(p_dst_mat_data_V_full_n, ap_enable_reg_pp1_iter3, ap_CS_fsm_state10, ap_predicate_op226_write_state9, ap_block_pp1_stage0_11001)
    begin
        if ((((p_dst_mat_data_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_predicate_op226_write_state9 = ap_const_boolean_1)))) then 
            p_dst_mat_data_V_write <= ap_const_logic_1;
        else 
            p_dst_mat_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_magnitude_mat_data_V_blk_n_assign_proc : process(p_magnitude_mat_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln332_reg_1486, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558)
    begin
        if ((((icmp_ln332_reg_1486 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            p_magnitude_mat_data_V_blk_n <= p_magnitude_mat_data_V_empty_n;
        else 
            p_magnitude_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_magnitude_mat_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln332_reg_1486, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op133_read_state7, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln332_reg_1486 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op133_read_state7 = ap_const_boolean_1)))) then 
            p_magnitude_mat_data_V_read <= ap_const_logic_1;
        else 
            p_magnitude_mat_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_phase_mat_data_V_blk_n_assign_proc : process(p_phase_mat_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln332_reg_1486, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_2_reg_1575, icmp_ln887_1_reg_1558)
    begin
        if ((((icmp_ln332_reg_1486 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_1558 = ap_const_lv1_1) and (icmp_ln887_2_reg_1575 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            p_phase_mat_data_V_blk_n <= p_phase_mat_data_V_empty_n;
        else 
            p_phase_mat_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_phase_mat_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln332_reg_1486, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0_11001, ap_predicate_op146_read_state7, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln332_reg_1486 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op146_read_state7 = ap_const_boolean_1)))) then 
            p_phase_mat_data_V_read <= ap_const_logic_1;
        else 
            p_phase_mat_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    read_ind_V_1_fu_1436_p3 <= 
        ap_const_lv13_0 when (icmp_ln879_4_fu_1430_p2(0) = '1') else 
        read_ind_V_fu_1404_p2;
    read_ind_V_fu_1404_p2 <= std_logic_vector(unsigned(t_V_2_reg_515) + unsigned(ap_const_lv13_1));
    read_index1_fu_763_p2 <= std_logic_vector(unsigned(index_assign_reg_481) + unsigned(ap_const_lv16_1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_V_fu_1458_p2 <= std_logic_vector(unsigned(t_V_4_reg_539) + unsigned(ap_const_lv13_1));
    row_ind_V_fu_1398_p2 <= std_logic_vector(unsigned(t_V_1_reg_503) + unsigned(ap_const_lv13_1));
    select_ln108_1_fu_1164_p3 <= 
        ap_const_lv2_0 when (and_ln108_1_fu_1158_p2(0) = '1') else 
        select_ln879_11_fu_1150_p3;
    select_ln108_fu_1335_p3 <= 
        ap_const_lv2_0 when (and_ln108_fu_1329_p2(0) = '1') else 
        select_ln879_7_fu_1321_p3;
    select_ln134_1_fu_1196_p3 <= 
        grp_fu_697_p3 when (and_ln134_5_fu_1190_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln134_fu_1361_p3 <= 
        grp_fu_697_p3 when (and_ln134_2_fu_1355_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln358_1_fu_848_p3 <= 
        ap_const_lv2_0 when (icmp_ln879_2_fu_834_p2(0) = '1') else 
        p_0319_0_i_fu_236;
    select_ln358_2_fu_856_p3 <= 
        ap_const_lv2_1 when (icmp_ln879_2_fu_834_p2(0) = '1') else 
        p_0327_0_i_fu_232;
    select_ln358_fu_840_p3 <= 
        ap_const_lv2_2 when (icmp_ln879_2_fu_834_p2(0) = '1') else 
        p_0300_0_i_fu_240;
    select_ln398_fu_1422_p3 <= 
        ap_const_lv13_0 when (icmp_ln879_3_fu_1416_p2(0) = '1') else 
        row_ind_V_fu_1398_p2;
    select_ln405_fu_1450_p3 <= 
        ap_const_lv13_0 when (icmp_ln879_5_fu_1444_p2(0) = '1') else 
        write_ind_V_fu_1410_p2;
    select_ln57_1_fu_1096_p3 <= 
        ap_const_lv2_0 when (and_ln57_1_fu_1090_p2(0) = '1') else 
        select_ln879_9_fu_1082_p3;
    select_ln57_fu_1267_p3 <= 
        ap_const_lv2_0 when (and_ln57_fu_1261_p2(0) = '1') else 
        select_ln879_5_fu_1253_p3;
    select_ln81_1_fu_1122_p3 <= 
        grp_fu_697_p3 when (and_ln81_3_fu_1116_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln81_fu_1293_p3 <= 
        grp_fu_697_p3 when (and_ln81_1_fu_1287_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln879_10_fu_1130_p3 <= 
        select_ln81_1_fu_1122_p3 when (grp_fu_705_p2(0) = '1') else 
        select_ln57_1_fu_1096_p3;
    select_ln879_11_fu_1150_p3 <= 
        grp_fu_697_p3 when (grp_fu_720_p2(0) = '1') else 
        select_ln879_10_fu_1130_p3;
    select_ln879_1_fu_894_p3 <= 
        ap_const_lv2_2 when (and_ln879_fu_870_p2(0) = '1') else 
        ap_const_lv2_1;
    select_ln879_2_fu_902_p3 <= 
        select_ln879_1_fu_894_p3 when (or_ln879_fu_880_p2(0) = '1') else 
        select_ln358_1_fu_848_p3;
    select_ln879_3_fu_910_p3 <= 
        ap_const_lv2_0 when (and_ln879_fu_870_p2(0) = '1') else 
        ap_const_lv2_2;
    select_ln879_4_fu_918_p3 <= 
        select_ln879_3_fu_910_p3 when (or_ln879_fu_880_p2(0) = '1') else 
        select_ln358_2_fu_856_p3;
    select_ln879_5_fu_1253_p3 <= 
        grp_fu_697_p3 when (grp_fu_676_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln879_6_fu_1301_p3 <= 
        select_ln81_fu_1293_p3 when (grp_fu_705_p2(0) = '1') else 
        select_ln57_fu_1267_p3;
    select_ln879_7_fu_1321_p3 <= 
        grp_fu_697_p3 when (grp_fu_720_p2(0) = '1') else 
        select_ln879_6_fu_1301_p3;
    select_ln879_9_fu_1082_p3 <= 
        grp_fu_697_p3 when (grp_fu_676_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln879_fu_886_p3 <= 
        zext_ln879_fu_876_p1 when (or_ln879_fu_880_p2(0) = '1') else 
        select_ln358_fu_840_p3;
    select_ln895_1_fu_1204_p3 <= 
        select_ln134_1_fu_1196_p3 when (grp_fu_670_p2(0) = '1') else 
        ap_const_lv2_0;
    select_ln895_fu_1369_p3 <= 
        select_ln134_fu_1361_p3 when (grp_fu_670_p2(0) = '1') else 
        ap_const_lv2_0;
    sext_ln321_1_fu_997_p0 <= p_magnitude_mat_data_V_dout;
        sext_ln321_1_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln321_1_fu_997_p0),15));

    sext_ln321_2_fu_992_p0 <= p_magnitude_mat_data_V_dout;
        sext_ln321_2_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln321_2_fu_992_p0),15));

    sext_ln321_3_fu_987_p0 <= p_magnitude_mat_data_V_dout;
        sext_ln321_3_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln321_3_fu_987_p0),15));

        sext_ln321_4_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(buf_0_V_q1),16));

        sext_ln321_5_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(buf_1_V_q1),16));

        sext_ln321_6_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(buf_2_V_q1),16));

        sext_ln321_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_magnitude_mat_data_V_dout),15));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_V_2_fu_1389_p3 <= 
        select_ln108_fu_1335_p3 when (and_ln879_1_fu_1383_p2(0) = '1') else 
        select_ln895_fu_1369_p3;
    tmp_V_fu_1224_p3 <= 
        select_ln108_1_fu_1164_p3 when (and_ln879_2_fu_1218_p2(0) = '1') else 
        select_ln895_1_fu_1204_p3;
    tmp_fu_1239_p3 <= l10_buf_0_V_reg_588(15 downto 15);
    trunc_ln242_fu_939_p1 <= t_V_3_reg_527(1 - 1 downto 0);
    trunc_ln321_1_fu_935_p1 <= t_V_2_reg_515(1 - 1 downto 0);
    trunc_ln321_fu_931_p1 <= t_V_1_reg_503(2 - 1 downto 0);
    write_ind_V_fu_1410_p2 <= std_logic_vector(unsigned(t_V_3_reg_527) + unsigned(ap_const_lv13_1));
    xor_ln108_1_fu_1138_p2 <= (grp_fu_727_p2 xor ap_const_lv1_1);
    xor_ln108_fu_1309_p2 <= (grp_fu_727_p2 xor ap_const_lv1_1);
    xor_ln57_1_fu_1064_p2 <= (grp_fu_683_p2 xor ap_const_lv1_1);
    xor_ln57_fu_1233_p2 <= (grp_fu_683_p2 xor ap_const_lv1_1);
    xor_ln879_1_fu_1377_p2 <= (grp_fu_743_p2 xor ap_const_lv1_1);
    xor_ln879_2_fu_1212_p2 <= (grp_fu_743_p2 xor ap_const_lv1_1);
    xor_ln879_fu_864_p2 <= (icmp_ln879_fu_822_p2 xor ap_const_lv1_1);
    zext_ln346_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(imgheight_read_reg_1474),17));
    zext_ln544_1_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_5_reg_551),64));
    zext_ln544_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_492),64));
    zext_ln879_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln879_fu_870_p2),2));
    zext_ln887_1_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_4_reg_539),17));
    zext_ln887_2_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_5_phi_fu_555_p4),16));
    zext_ln887_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_4_reg_539),16));
    zext_ln895_1_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(high_threshold_read_reg_1469),16));
    zext_ln895_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(low_threshold_read_reg_1464),16));
end behav;
