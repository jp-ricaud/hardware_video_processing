-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xfdilate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_V_empty_n : IN STD_LOGIC;
    p_src_data_V_read : OUT STD_LOGIC;
    p_dst_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_V_full_n : IN STD_LOGIC;
    p_dst_data_V_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_0_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_0_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_0_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_1_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_1_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_1_2_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_2_0_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_2_1_read : IN STD_LOGIC_VECTOR (7 downto 0);
    kernel_2_2_read : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of xfdilate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln267_reg_1090 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln887_3_reg_1190 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_4_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_2_reg_1171 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal icmp_ln891_reg_1221 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_reg_1221_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal index_assign_reg_358 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_1_0_reg_369 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_2_reg_437 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_2_reg_437_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op136_read_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal src_buf_2_0_0_reg_449 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_1_0_reg_460 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_1_0_0_reg_472 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_0_reg_484 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_0_0_reg_496 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_0_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_ind_2_V_load_reg_1066 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_2_V_1_load_reg_1071 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_load_reg_1076 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln254_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal init_row_ind_fu_551_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln267_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln273_fu_581_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal add_ln700_fu_592_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_col_V_fu_607_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln293_fu_621_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln293_reg_1112 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln887_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_fu_630_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln109_reg_1117 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln62_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln62_reg_1122 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_reg_1127 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_1_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_1_reg_1132 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_2_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_2_reg_1137 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_3_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_3_reg_1142 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_4_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_4_reg_1147 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_5_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_5_reg_1152 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_6_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_6_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_7_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln64_7_reg_1162 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_1_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln887_2_fu_694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_fu_699_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_1175 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_fu_703_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_reg_1180 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_fu_707_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_reg_1185 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln887_3_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_3_reg_1190_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_3_reg_1190_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_3_reg_1190_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_fu_724_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal col_V_reg_1194 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln887_4_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_4_reg_1199_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_4_reg_1199_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_reg_1225 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_reg_1230 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_reg_1235 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln62_6_fu_940_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln62_6_reg_1242 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_fu_983_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter3_state11 : STD_LOGIC;
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_xfExtractPixels_fu_521_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_val_assign_phi_fu_351_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal val_assign_reg_347 : STD_LOGIC_VECTOR (1 downto 0);
    signal t_V_reg_381 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal row_ind_1_V_1_reg_392 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_ind_V_reg_413 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_402 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_1_reg_425 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_t_V_2_phi_fu_441_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_src_buf_2_0_0_phi_fu_453_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_1_0_phi_fu_464_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_1_0_0_phi_fu_476_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_1_0_phi_fu_488_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_src_buf_0_0_0_phi_fu_500_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln544_fu_587_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_2_fu_735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_0_V_addr_1_gep_fu_303_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_gep_fu_309_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_gep_fu_315_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln544_3_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_2_V_fu_134 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_2_fu_557_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_1_fu_138 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_fu_142 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln887_fu_598_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln293_fu_618_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln109_fu_627_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln887_2_fu_685_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln887_1_fu_681_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln887_4_fu_715_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln887_3_fu_711_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_cop_0_V_fu_758_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_769_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_796_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln64_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_fu_826_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_1_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_1_fu_845_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_2_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_1_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_2_fu_864_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_3_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_2_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_3_fu_883_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_4_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_3_fu_897_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_4_fu_902_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_5_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_4_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_5_fu_921_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_6_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_5_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_7_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_6_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_7_fu_958_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln895_8_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln64_7_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_807 : BOOLEAN;

    component xfExtractPixels IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_mux_bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xfdilate_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component xfdilate_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    src_buf_temp_copy_ex_xfExtractPixels_fu_521 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_xfExtractPixels_fu_521_val1_V_read,
        ap_return => src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_return);

    src_buf_temp_copy_ex_1_xfExtractPixels_fu_526 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_val1_V_read,
        ap_return => src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_return);

    src_buf_temp_copy_ex_2_xfExtractPixels_fu_531 : component xfExtractPixels
    port map (
        ap_ready => src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_val1_V_read,
        ap_return => src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_ap_return);

    ip_accel_app_mux_bkb_U62 : component ip_accel_app_mux_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_1_reg_1180,
        dout => buf_cop_0_V_fu_758_p5);

    ip_accel_app_mux_bkb_U63 : component ip_accel_app_mux_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_2_reg_1185,
        dout => tmp_6_fu_769_p5);

    ip_accel_app_mux_bkb_U64 : component ip_accel_app_mux_bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_reg_1175,
        dout => tmp_7_fu_796_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln254_fu_545_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln254_fu_545_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((icmp_ln887_3_fu_719_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter3_state11)) or ((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter3_state11))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    index_assign_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln254_fu_545_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                index_assign_reg_358 <= ap_const_lv16_0;
            elsif (((icmp_ln267_fu_576_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                index_assign_reg_358 <= add_ln273_fu_581_p2;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                row_ind_0_V_reg_402 <= row_ind_1_V_1_reg_392;
            elsif (((icmp_ln887_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                row_ind_0_V_reg_402 <= row_ind_2_V_1_load_reg_1071;
            end if; 
        end if;
    end process;

    row_ind_1_V_1_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                row_ind_1_V_1_reg_392 <= zero_ind_V_reg_413;
            elsif (((icmp_ln887_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                row_ind_1_V_1_reg_392 <= row_ind_2_V_2_load_reg_1076;
            end if; 
        end if;
    end process;

    src_buf_0_0_0_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_0_0_reg_496 <= src_buf_0_1_0_reg_484;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_0_0_0_reg_496 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_0_1_0_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_0_1_0_reg_484 <= src_buf_temp_copy_ex_reg_1225;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_0_1_0_reg_484 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_0_0_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_0_0_reg_472 <= src_buf_1_1_0_reg_460;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_1_0_0_reg_472 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_1_1_0_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_1_1_0_reg_460 <= src_buf_temp_copy_ex_1_reg_1230;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_1_1_0_reg_460 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_0_0_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_0_0_reg_449 <= src_buf_2_1_0_reg_508;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_2_0_0_reg_449 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf_2_1_0_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                src_buf_2_1_0_reg_508 <= src_buf_temp_copy_ex_2_reg_1235;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_2_1_0_reg_508 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    t_V_1_0_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln254_fu_545_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_1_0_reg_369 <= ap_const_lv13_0;
            elsif (((icmp_ln267_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_1_0_reg_369 <= add_ln700_fu_592_p2;
            end if; 
        end if;
    end process;

    t_V_1_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                t_V_1_reg_425 <= row_V_fu_983_p2;
            elsif (((icmp_ln887_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                t_V_1_reg_425 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    t_V_2_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                t_V_2_reg_437 <= col_V_reg_1194;
            elsif (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                t_V_2_reg_437 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    t_V_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                t_V_reg_381 <= i_col_V_fu_607_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_reg_381 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    val_assign_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln254_fu_545_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                val_assign_reg_347 <= init_row_ind_fu_551_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                val_assign_reg_347 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_413_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                zero_ind_V_reg_413 <= row_ind_0_V_reg_402;
            elsif (((icmp_ln887_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                zero_ind_V_reg_413 <= row_ind_2_V_load_reg_1066;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln109_reg_1117 <= add_ln109_fu_630_p2;
                add_ln293_reg_1112 <= add_ln293_fu_621_p2;
                icmp_ln62_reg_1122 <= icmp_ln62_fu_636_p2;
                icmp_ln64_1_reg_1132 <= icmp_ln64_1_fu_646_p2;
                icmp_ln64_2_reg_1137 <= icmp_ln64_2_fu_651_p2;
                icmp_ln64_3_reg_1142 <= icmp_ln64_3_fu_656_p2;
                icmp_ln64_4_reg_1147 <= icmp_ln64_4_fu_661_p2;
                icmp_ln64_5_reg_1152 <= icmp_ln64_5_fu_666_p2;
                icmp_ln64_6_reg_1157 <= icmp_ln64_6_fu_671_p2;
                icmp_ln64_7_reg_1162 <= icmp_ln64_7_fu_676_p2;
                icmp_ln64_reg_1127 <= icmp_ln64_fu_641_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                col_V_reg_1194 <= col_V_fu_724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln267_reg_1090 <= icmp_ln267_fu_576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                icmp_ln887_2_reg_1171 <= icmp_ln887_2_fu_694_p2;
                trunc_ln321_1_reg_1180 <= trunc_ln321_1_fu_703_p1;
                trunc_ln321_2_reg_1185 <= trunc_ln321_2_fu_707_p1;
                trunc_ln321_reg_1175 <= trunc_ln321_fu_699_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln887_3_reg_1190 <= icmp_ln887_3_fu_719_p2;
                icmp_ln887_3_reg_1190_pp1_iter1_reg <= icmp_ln887_3_reg_1190;
                icmp_ln887_4_reg_1199_pp1_iter1_reg <= icmp_ln887_4_reg_1199;
                t_V_2_reg_437_pp1_iter1_reg <= t_V_2_reg_437;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln887_3_reg_1190_pp1_iter2_reg <= icmp_ln887_3_reg_1190_pp1_iter1_reg;
                icmp_ln887_3_reg_1190_pp1_iter3_reg <= icmp_ln887_3_reg_1190_pp1_iter2_reg;
                icmp_ln887_4_reg_1199_pp1_iter2_reg <= icmp_ln887_4_reg_1199_pp1_iter1_reg;
                icmp_ln891_reg_1221_pp1_iter3_reg <= icmp_ln891_reg_1221;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_fu_719_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln887_4_reg_1199 <= icmp_ln887_4_fu_730_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln891_reg_1221 <= icmp_ln891_fu_752_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln254_fu_545_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_351_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_1_fu_138(1 downto 0) <= row_ind_0_V_2_fu_557_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_2_V_1_load_reg_1071(1 downto 0) <= row_ind_2_V_1_fu_138(1 downto 0);
                    row_ind_2_V_2_load_reg_1076(1 downto 0) <= row_ind_2_V_2_fu_142(1 downto 0);
                    row_ind_2_V_load_reg_1066(1 downto 0) <= row_ind_2_V_fu_134(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_val_assign_phi_fu_351_p4 = ap_const_lv2_1)) and not((ap_phi_mux_val_assign_phi_fu_351_p4 = ap_const_lv2_0)) and (icmp_ln254_fu_545_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_2_fu_142(1 downto 0) <= row_ind_0_V_2_fu_557_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln254_fu_545_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_351_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_fu_134(1 downto 0) <= row_ind_0_V_2_fu_557_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter2_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln62_6_reg_1242 <= select_ln62_6_fu_940_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_3_reg_1190_pp1_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                src_buf_temp_copy_ex_1_reg_1230 <= src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_return;
                src_buf_temp_copy_ex_2_reg_1235 <= src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_ap_return;
                src_buf_temp_copy_ex_reg_1225 <= src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_return;
            end if;
        end if;
    end process;
    row_ind_2_V_load_reg_1066(12 downto 2) <= "00000000000";
    row_ind_2_V_1_load_reg_1071(12 downto 2) <= "00000000000";
    row_ind_2_V_2_load_reg_1076(12 downto 2) <= "00000000000";
    row_ind_2_V_fu_134(12 downto 2) <= "00000000000";
    row_ind_2_V_1_fu_138(12 downto 2) <= "00000000000";
    row_ind_2_V_2_fu_142(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln254_fu_545_p2, icmp_ln267_fu_576_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, icmp_ln887_fu_602_p2, icmp_ln887_1_fu_689_p2, ap_CS_fsm_state7, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln254_fu_545_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln267_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln267_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln887_fu_602_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln109_fu_630_p2 <= std_logic_vector(unsigned(ap_const_lv14_1) + unsigned(trunc_ln109_fu_627_p1));
    add_ln273_fu_581_p2 <= std_logic_vector(unsigned(index_assign_reg_358) + unsigned(ap_const_lv16_1));
    add_ln293_fu_621_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(zext_ln293_fu_618_p1));
    add_ln700_fu_592_p2 <= std_logic_vector(unsigned(t_V_1_0_reg_369) + unsigned(ap_const_lv13_1));
    and_ln64_1_fu_859_p2 <= (icmp_ln895_2_fu_853_p2 and icmp_ln64_1_reg_1132);
    and_ln64_2_fu_878_p2 <= (icmp_ln895_3_fu_872_p2 and icmp_ln64_2_reg_1137);
    and_ln64_3_fu_897_p2 <= (icmp_ln895_4_fu_891_p2 and icmp_ln64_3_reg_1142);
    and_ln64_4_fu_916_p2 <= (icmp_ln895_5_fu_910_p2 and icmp_ln64_4_reg_1147);
    and_ln64_5_fu_935_p2 <= (icmp_ln895_6_fu_929_p2 and icmp_ln64_5_reg_1152);
    and_ln64_6_fu_953_p2 <= (icmp_ln895_7_fu_948_p2 and icmp_ln64_6_reg_1157);
    and_ln64_7_fu_970_p2 <= (icmp_ln895_8_fu_965_p2 and icmp_ln64_7_reg_1162);
    and_ln64_fu_840_p2 <= (icmp_ln895_1_fu_834_p2 and icmp_ln64_reg_1127);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln267_reg_1090)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln267_reg_1090 = ap_const_lv1_0) and (p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln267_reg_1090)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln267_reg_1090 = ap_const_lv1_0) and (p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_src_data_V_empty_n, p_dst_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln891_reg_1221_pp1_iter3_reg, ap_predicate_op136_read_state9)
    begin
                ap_block_pp1_stage0_01001 <= (((icmp_ln891_reg_1221_pp1_iter3_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op136_read_state9 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_src_data_V_empty_n, p_dst_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln891_reg_1221_pp1_iter3_reg, ap_predicate_op136_read_state9)
    begin
                ap_block_pp1_stage0_11001 <= (((icmp_ln891_reg_1221_pp1_iter3_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op136_read_state9 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_src_data_V_empty_n, p_dst_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, icmp_ln891_reg_1221_pp1_iter3_reg, ap_predicate_op136_read_state9)
    begin
                ap_block_pp1_stage0_subdone <= (((icmp_ln891_reg_1221_pp1_iter3_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_predicate_op136_read_state9 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_pp1_stage0_iter4_assign_proc : process(p_dst_data_V_full_n, icmp_ln891_reg_1221_pp1_iter3_reg)
    begin
                ap_block_state12_pp1_stage0_iter4 <= ((icmp_ln891_reg_1221_pp1_iter3_reg = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_V_empty_n, icmp_ln267_reg_1090)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln267_reg_1090 = ap_const_lv1_0) and (p_src_data_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter1_assign_proc : process(p_src_data_V_empty_n, ap_predicate_op136_read_state9)
    begin
                ap_block_state9_pp1_stage0_iter1 <= ((p_src_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op136_read_state9 = ap_const_boolean_1));
    end process;


    ap_condition_807_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, trunc_ln321_reg_1175)
    begin
                ap_condition_807 <= (not((trunc_ln321_reg_1175 = ap_const_lv2_0)) and not((trunc_ln321_reg_1175 = ap_const_lv2_1)) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln267_fu_576_p2)
    begin
        if ((icmp_ln267_fu_576_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter3_state11_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter3_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter3_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln887_1_fu_689_p2, ap_CS_fsm_state7)
    begin
        if ((((icmp_ln887_1_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_0_0_phi_fu_500_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_0_1_0_reg_484, src_buf_0_0_0_reg_496, icmp_ln887_3_reg_1190_pp1_iter3_reg)
    begin
        if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_0_0_phi_fu_500_p4 <= src_buf_0_1_0_reg_484;
        else 
            ap_phi_mux_src_buf_0_0_0_phi_fu_500_p4 <= src_buf_0_0_0_reg_496;
        end if; 
    end process;


    ap_phi_mux_src_buf_0_1_0_phi_fu_488_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_0_1_0_reg_484, icmp_ln887_3_reg_1190_pp1_iter3_reg, src_buf_temp_copy_ex_reg_1225)
    begin
        if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_0_1_0_phi_fu_488_p4 <= src_buf_temp_copy_ex_reg_1225;
        else 
            ap_phi_mux_src_buf_0_1_0_phi_fu_488_p4 <= src_buf_0_1_0_reg_484;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_0_0_phi_fu_476_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_1_1_0_reg_460, src_buf_1_0_0_reg_472, icmp_ln887_3_reg_1190_pp1_iter3_reg)
    begin
        if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_0_0_phi_fu_476_p4 <= src_buf_1_1_0_reg_460;
        else 
            ap_phi_mux_src_buf_1_0_0_phi_fu_476_p4 <= src_buf_1_0_0_reg_472;
        end if; 
    end process;


    ap_phi_mux_src_buf_1_1_0_phi_fu_464_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_1_1_0_reg_460, icmp_ln887_3_reg_1190_pp1_iter3_reg, src_buf_temp_copy_ex_1_reg_1230)
    begin
        if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_1_1_0_phi_fu_464_p4 <= src_buf_temp_copy_ex_1_reg_1230;
        else 
            ap_phi_mux_src_buf_1_1_0_phi_fu_464_p4 <= src_buf_1_1_0_reg_460;
        end if; 
    end process;


    ap_phi_mux_src_buf_2_0_0_phi_fu_453_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, src_buf_2_0_0_reg_449, src_buf_2_1_0_reg_508, icmp_ln887_3_reg_1190_pp1_iter3_reg)
    begin
        if (((icmp_ln887_3_reg_1190_pp1_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_phi_mux_src_buf_2_0_0_phi_fu_453_p4 <= src_buf_2_1_0_reg_508;
        else 
            ap_phi_mux_src_buf_2_0_0_phi_fu_453_p4 <= src_buf_2_0_0_reg_449;
        end if; 
    end process;


    ap_phi_mux_t_V_2_phi_fu_441_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, t_V_2_reg_437, col_V_reg_1194)
    begin
        if (((icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_t_V_2_phi_fu_441_p4 <= col_V_reg_1194;
        else 
            ap_phi_mux_t_V_2_phi_fu_441_p4 <= t_V_2_reg_437;
        end if; 
    end process;

    ap_phi_mux_val_assign_phi_fu_351_p4 <= val_assign_reg_347;

    ap_predicate_op136_read_state9_assign_proc : process(icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171)
    begin
                ap_predicate_op136_read_state9 <= ((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(icmp_ln887_1_fu_689_p2, ap_CS_fsm_state7)
    begin
        if (((icmp_ln887_1_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    buf_0_V_addr_1_gep_fu_303_p3 <= zext_ln544_2_fu_735_p1(11 - 1 downto 0);
    buf_0_V_address0 <= zext_ln544_3_fu_745_p1(11 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_CS_fsm_state6, trunc_ln321_reg_1175, zext_ln544_1_fu_613_p1, zext_ln544_2_fu_735_p1, buf_0_V_addr_1_gep_fu_303_p3)
    begin
        if (((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_gep_fu_303_p3;
        elsif (((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_address1 <= zext_ln544_2_fu_735_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_0_V_address1 <= zext_ln544_1_fu_613_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_block_pp1_stage0_11001, ap_CS_fsm_state6, trunc_ln321_reg_1175)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_src_data_V_dout, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_CS_fsm_state6, trunc_ln321_reg_1175)
    begin
        if (((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_0_V_d1 <= p_src_data_V_dout;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_block_pp1_stage0_11001, ap_CS_fsm_state6, icmp_ln887_fu_602_p2, trunc_ln321_reg_1175)
    begin
        if ((((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_fu_602_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_1_gep_fu_309_p3 <= zext_ln544_2_fu_735_p1(11 - 1 downto 0);
    buf_1_V_address0 <= zext_ln544_3_fu_745_p1(11 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, trunc_ln321_reg_1175, zext_ln544_fu_587_p1, zext_ln544_2_fu_735_p1, buf_1_V_addr_1_gep_fu_309_p3)
    begin
        if (((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= buf_1_V_addr_1_gep_fu_309_p3;
        elsif (((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_address1 <= zext_ln544_2_fu_735_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            buf_1_V_address1 <= zext_ln544_fu_587_p1(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln321_reg_1175)
    begin
        if ((((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(p_src_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, trunc_ln321_reg_1175)
    begin
        if (((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            buf_1_V_d1 <= p_src_data_V_dout;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln267_reg_1090, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln321_reg_1175)
    begin
        if ((((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (trunc_ln321_reg_1175 = ap_const_lv2_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln267_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_315_p3 <= zext_ln544_2_fu_735_p1(11 - 1 downto 0);
    buf_2_V_address0 <= zext_ln544_3_fu_745_p1(11 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(icmp_ln887_2_reg_1171, zext_ln544_2_fu_735_p1, buf_2_V_addr_gep_fu_315_p3, ap_condition_807)
    begin
        if ((ap_const_boolean_1 = ap_condition_807)) then
            if ((icmp_ln887_2_reg_1171 = ap_const_lv1_1)) then 
                buf_2_V_address1 <= buf_2_V_addr_gep_fu_315_p3;
            elsif ((icmp_ln887_2_reg_1171 = ap_const_lv1_0)) then 
                buf_2_V_address1 <= zext_ln544_2_fu_735_p1(11 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_block_pp1_stage0_11001, trunc_ln321_reg_1175)
    begin
        if (((not((trunc_ln321_reg_1175 = ap_const_lv2_0)) and not((trunc_ln321_reg_1175 = ap_const_lv2_1)) and (icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((trunc_ln321_reg_1175 = ap_const_lv2_0)) and not((trunc_ln321_reg_1175 = ap_const_lv2_1)) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(p_src_data_V_dout, icmp_ln887_2_reg_1171, ap_condition_807)
    begin
        if ((ap_const_boolean_1 = ap_condition_807)) then
            if ((icmp_ln887_2_reg_1171 = ap_const_lv1_1)) then 
                buf_2_V_d1 <= p_src_data_V_dout;
            elsif ((icmp_ln887_2_reg_1171 = ap_const_lv1_0)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171, ap_block_pp1_stage0_11001, trunc_ln321_reg_1175)
    begin
        if (((not((trunc_ln321_reg_1175 = ap_const_lv2_0)) and not((trunc_ln321_reg_1175 = ap_const_lv2_1)) and (icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not((trunc_ln321_reg_1175 = ap_const_lv2_0)) and not((trunc_ln321_reg_1175 = ap_const_lv2_1)) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (icmp_ln887_2_reg_1171 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_fu_724_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_2_phi_fu_441_p4) + unsigned(ap_const_lv13_1));
    i_col_V_fu_607_p2 <= std_logic_vector(unsigned(t_V_reg_381) + unsigned(ap_const_lv13_1));
    icmp_ln254_fu_545_p2 <= "1" when (val_assign_reg_347 = ap_const_lv2_3) else "0";
    icmp_ln267_fu_576_p2 <= "1" when (index_assign_reg_358 = img_width) else "0";
    icmp_ln62_fu_636_p2 <= "1" when (kernel_0_0_read = ap_const_lv8_0) else "0";
    icmp_ln64_1_fu_646_p2 <= "0" when (kernel_0_2_read = ap_const_lv8_0) else "1";
    icmp_ln64_2_fu_651_p2 <= "0" when (kernel_1_0_read = ap_const_lv8_0) else "1";
    icmp_ln64_3_fu_656_p2 <= "0" when (kernel_1_1_read = ap_const_lv8_0) else "1";
    icmp_ln64_4_fu_661_p2 <= "0" when (kernel_1_2_read = ap_const_lv8_0) else "1";
    icmp_ln64_5_fu_666_p2 <= "0" when (kernel_2_0_read = ap_const_lv8_0) else "1";
    icmp_ln64_6_fu_671_p2 <= "0" when (kernel_2_1_read = ap_const_lv8_0) else "1";
    icmp_ln64_7_fu_676_p2 <= "0" when (kernel_2_2_read = ap_const_lv8_0) else "1";
    icmp_ln64_fu_641_p2 <= "0" when (kernel_0_1_read = ap_const_lv8_0) else "1";
    icmp_ln887_1_fu_689_p2 <= "1" when (unsigned(zext_ln887_2_fu_685_p1) < unsigned(add_ln293_reg_1112)) else "0";
    icmp_ln887_2_fu_694_p2 <= "1" when (unsigned(zext_ln887_1_fu_681_p1) < unsigned(img_height)) else "0";
    icmp_ln887_3_fu_719_p2 <= "1" when (unsigned(zext_ln887_4_fu_715_p1) < unsigned(add_ln109_reg_1117)) else "0";
    icmp_ln887_4_fu_730_p2 <= "1" when (unsigned(zext_ln887_3_fu_711_p1) < unsigned(img_width)) else "0";
    icmp_ln887_fu_602_p2 <= "1" when (unsigned(zext_ln887_fu_598_p1) < unsigned(img_width)) else "0";
    icmp_ln891_fu_752_p2 <= "1" when (t_V_2_reg_437_pp1_iter1_reg = ap_const_lv13_0) else "0";
    icmp_ln895_1_fu_834_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_0_1_0_phi_fu_488_p4) > unsigned(select_ln62_fu_826_p3)) else "0";
    icmp_ln895_2_fu_853_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_return) > unsigned(select_ln62_1_fu_845_p3)) else "0";
    icmp_ln895_3_fu_872_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_0_0_phi_fu_476_p4) > unsigned(select_ln62_2_fu_864_p3)) else "0";
    icmp_ln895_4_fu_891_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_1_1_0_phi_fu_464_p4) > unsigned(select_ln62_3_fu_883_p3)) else "0";
    icmp_ln895_5_fu_910_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_return) > unsigned(select_ln62_4_fu_902_p3)) else "0";
    icmp_ln895_6_fu_929_p2 <= "1" when (unsigned(ap_phi_mux_src_buf_2_0_0_phi_fu_453_p4) > unsigned(select_ln62_5_fu_921_p3)) else "0";
    icmp_ln895_7_fu_948_p2 <= "1" when (unsigned(src_buf_2_1_0_reg_508) > unsigned(select_ln62_6_reg_1242)) else "0";
    icmp_ln895_8_fu_965_p2 <= "1" when (unsigned(src_buf_temp_copy_ex_2_reg_1235) > unsigned(select_ln62_7_fu_958_p3)) else "0";
    icmp_ln895_fu_815_p2 <= "1" when (ap_phi_mux_src_buf_0_0_0_phi_fu_500_p4 = ap_const_lv8_0) else "0";
    init_row_ind_fu_551_p2 <= std_logic_vector(unsigned(val_assign_reg_347) + unsigned(ap_const_lv2_1));
    or_ln64_fu_821_p2 <= (icmp_ln895_fu_815_p2 or icmp_ln62_reg_1122);

    p_dst_data_V_blk_n_assign_proc : process(p_dst_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter4, icmp_ln891_reg_1221_pp1_iter3_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln891_reg_1221_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            p_dst_data_V_blk_n <= p_dst_data_V_full_n;
        else 
            p_dst_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_V_din <= 
        src_buf_temp_copy_ex_2_reg_1235 when (and_ln64_7_fu_970_p2(0) = '1') else 
        select_ln62_7_fu_958_p3;

    p_dst_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter4, icmp_ln891_reg_1221_pp1_iter3_reg, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln891_reg_1221_pp1_iter3_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_dst_data_V_write <= ap_const_logic_1;
        else 
            p_dst_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_V_blk_n_assign_proc : process(p_src_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln267_reg_1090, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln887_3_reg_1190, icmp_ln887_4_reg_1199, icmp_ln887_2_reg_1171)
    begin
        if ((((icmp_ln887_2_reg_1171 = ap_const_lv1_1) and (icmp_ln887_4_reg_1199 = ap_const_lv1_1) and (icmp_ln887_3_reg_1190 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln267_reg_1090 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_V_blk_n <= p_src_data_V_empty_n;
        else 
            p_src_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln267_reg_1090, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op136_read_state9, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op136_read_state9 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln267_reg_1090 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_V_read <= ap_const_logic_1;
        else 
            p_src_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    row_V_fu_983_p2 <= std_logic_vector(unsigned(t_V_1_reg_425) + unsigned(ap_const_lv13_1));
    row_ind_0_V_2_fu_557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(val_assign_reg_347),13));
    select_ln62_1_fu_845_p3 <= 
        ap_phi_mux_src_buf_0_1_0_phi_fu_488_p4 when (and_ln64_fu_840_p2(0) = '1') else 
        select_ln62_fu_826_p3;
    select_ln62_2_fu_864_p3 <= 
        src_buf_temp_copy_ex_xfExtractPixels_fu_521_ap_return when (and_ln64_1_fu_859_p2(0) = '1') else 
        select_ln62_1_fu_845_p3;
    select_ln62_3_fu_883_p3 <= 
        ap_phi_mux_src_buf_1_0_0_phi_fu_476_p4 when (and_ln64_2_fu_878_p2(0) = '1') else 
        select_ln62_2_fu_864_p3;
    select_ln62_4_fu_902_p3 <= 
        ap_phi_mux_src_buf_1_1_0_phi_fu_464_p4 when (and_ln64_3_fu_897_p2(0) = '1') else 
        select_ln62_3_fu_883_p3;
    select_ln62_5_fu_921_p3 <= 
        src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_ap_return when (and_ln64_4_fu_916_p2(0) = '1') else 
        select_ln62_4_fu_902_p3;
    select_ln62_6_fu_940_p3 <= 
        ap_phi_mux_src_buf_2_0_0_phi_fu_453_p4 when (and_ln64_5_fu_935_p2(0) = '1') else 
        select_ln62_5_fu_921_p3;
    select_ln62_7_fu_958_p3 <= 
        src_buf_2_1_0_reg_508 when (and_ln64_6_fu_953_p2(0) = '1') else 
        select_ln62_6_reg_1242;
    select_ln62_fu_826_p3 <= 
        ap_const_lv8_0 when (or_ln64_fu_821_p2(0) = '1') else 
        ap_phi_mux_src_buf_0_0_0_phi_fu_500_p4;
    src_buf_temp_copy_ex_1_xfExtractPixels_fu_526_val1_V_read <= 
        tmp_6_fu_769_p5 when (icmp_ln887_4_reg_1199_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    src_buf_temp_copy_ex_2_xfExtractPixels_fu_531_val1_V_read <= 
        tmp_7_fu_796_p5 when (icmp_ln887_4_reg_1199_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    src_buf_temp_copy_ex_xfExtractPixels_fu_521_val1_V_read <= 
        buf_cop_0_V_fu_758_p5 when (icmp_ln887_4_reg_1199_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_0;
    trunc_ln109_fu_627_p1 <= img_width(14 - 1 downto 0);
    trunc_ln321_1_fu_703_p1 <= zero_ind_V_reg_413(2 - 1 downto 0);
    trunc_ln321_2_fu_707_p1 <= row_ind_0_V_reg_402(2 - 1 downto 0);
    trunc_ln321_fu_699_p1 <= row_ind_1_V_1_reg_392(2 - 1 downto 0);
    zext_ln293_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));
    zext_ln544_1_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_381),64));
    zext_ln544_2_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_437),64));
    zext_ln544_3_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_437_pp1_iter1_reg),64));
    zext_ln544_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_0_reg_369),64));
    zext_ln887_1_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_425),16));
    zext_ln887_2_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_1_reg_425),17));
    zext_ln887_3_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_2_phi_fu_441_p4),16));
    zext_ln887_4_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_t_V_2_phi_fu_441_p4),14));
    zext_ln887_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_381),16));
end behav;
