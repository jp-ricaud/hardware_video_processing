#*****************************************************************************************
# Vivado (TM) v2018.3.1 (64-bit)
#
# vivado_prj-1.tcl: Tcl script for re-creating project 'CustomLogic'
#
# Generated by Vivado on Fri Aug 07 16:31:52 +0200 2020
# IP Build 2486929 on Tue Mar 26 06:44:21 MDT 2019
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (vivado_prj-1.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "D:/cam/02_coaxlink/hdl_enc/CustomLogicPkt.vp"
#    "D:/cam/02_coaxlink/hdl_enc/DmaBackEndPkt.vp"
#    "D:/cam/02_coaxlink/hdl_enc/CustomLogicPkt.vhdp"
#    "D:/cam/02_coaxlink/ips/axi_dwidth_clk_converter_S128_M512/axi_dwidth_clk_converter_S128_M512.xci"
#    "D:/cam/02_coaxlink/ips/axi_dwidth_clk_converter_S256_M512/axi_dwidth_clk_converter_S256_M512.xci"
#    "D:/cam/02_coaxlink/ips/axi_interconnect_3xS512_M512/axi_interconnect_3xS512_M512.xci"
#    "D:/cam/02_coaxlink/ips/axi_lite_clock_converter/axi_lite_clock_converter.xci"
#    "D:/cam/02_coaxlink/ips/axis_data_fifo_256b/axis_data_fifo_256b.xci"
#    "D:/cam/02_coaxlink/ips/clk_wiz_cxp12/clk_wiz_cxp12.xci"
#    "D:/cam/02_coaxlink/ips/CounterDsp/CounterDsp.xci"
#    "D:/cam/02_coaxlink/ips/EventSignalingBram/EventSignalingBram.xci"
#    "D:/cam/02_coaxlink/ips/EventSignalingFifo_ku/EventSignalingFifo_ku.xci"
#    "D:/cam/02_coaxlink/ips/ExtIOConfigBram/ExtIOConfigBram.xci"
#    "D:/cam/02_coaxlink/ips/fifo_memento/fifo_memento.xci"
#    "D:/cam/02_coaxlink/ips/FrameSizeDwDsp/FrameSizeDwDsp.xci"
#    "D:/cam/02_coaxlink/ips/gth_cxp_low_cxp12/gth_cxp_low_cxp12.xci"
#    "D:/cam/02_coaxlink/ips/LinkStreamFifo_132bx2048/LinkStreamFifo_132bx2048.xci"
#    "D:/cam/02_coaxlink/ips/LUT12x8/LUT12x8.xci"
#    "D:/cam/02_coaxlink/ips/mem_if/mem_if.xci"
#    "D:/cam/02_coaxlink/ips/MultiplierDsp/MultiplierDsp.xci"
#    "D:/cam/02_coaxlink/ips/PacketFlowFifo_34bx512/PacketFlowFifo_34bx512.xci"
#    "D:/cam/02_coaxlink/ips/PEGBram/PEGBram.xci"
#    "D:/cam/02_coaxlink/ips/PEGFifo_ku/PEGFifo_ku.xci"
#    "D:/cam/02_coaxlink/ips/PIXO_FIFO_259x1024/PIXO_FIFO_259x1024.xci"
#    "D:/cam/02_coaxlink/ips/PoCXP_uBlaze.elf"
#    "D:/cam/02_coaxlink/ips/PoCXP_uBlaze/PoCXP_uBlaze.xci"
#    "D:/cam/02_coaxlink/ips/reg2mem_rddwc/reg2mem_rddwc.xci"
#    "D:/cam/02_coaxlink/ips/reg2mem_rdfifo/reg2mem_rdfifo.xci"
#    "D:/cam/02_coaxlink/ips/reg2mem_wrdwc/reg2mem_wrdwc.xci"
#    "D:/cam/02_coaxlink/ips/reg2mem_wrfifo/reg2mem_wrfifo.xci"
#    "D:/cam/02_coaxlink/ips/sout_fifo_wr128_rd256/sout_fifo_wr128_rd256.xci"
#    "D:/cam/02_coaxlink/ips/WrAxiAddrFifo/WrAxiAddrFifo.xci"
#    "D:/cam/04_ref_design/canny/frame_to_line.vhd"
#    "D:/cam/04_ref_design/canny/mem_traffic_gen.vhd"
#    "D:/cam/04_ref_design/canny/control_registers.vhd"
#    "D:/cam/04_ref_design/canny/pix_lut8b.vhd"
#    "D:/cam/04_ref_design/canny/pix_threshold_proc.vhd"
#    "D:/cam/04_ref_design/canny/pix_threshold.vhd"
#    "D:/cam/04_ref_design/canny/pix_threshold_wrp.vhd"
#    "D:/cam/04_ref_design/canny/CustomLogic.vhd"
#    "D:/cam/04_ref_design/canny/lut_bram_8x256/lut_bram_8x256.xci"
#    "D:/cam/04_ref_design/canny/sim/onboardmem/onboardmem.xci"
#    "D:/cam/04_ref_design/canny/AXIvideo2xfMat.vhd"
#    "D:/cam/04_ref_design/canny/Block_Mat_exit1516_p.vhd"
#    "D:/cam/04_ref_design/canny/Block_Mat_exit15_pro.vhd"
#    "D:/cam/04_ref_design/canny/Canny.vhd"
#    "D:/cam/04_ref_design/canny/PixelProcessNew_1_s.vhd"
#    "D:/cam/04_ref_design/canny/TopDown_20_6_1024_s.vhd"
#    "D:/cam/04_ref_design/canny/canny_accel.vhd"
#    "D:/cam/04_ref_design/canny/canny_accel_iBuffyd2.vhd"
#    "D:/cam/04_ref_design/canny/canny_accel_oBuff_V.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w11_d2_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w14_d5760_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w16_d2_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w16_d2_A_x.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w16_d3_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w16_d4_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w24_d2_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w2_d2_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w32_d2_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w32_d3_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w57_d1_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w64_d1_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w8_d1_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w8_d2_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w8_d2_A_x.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w8_d3_A.vhd"
#    "D:/cam/04_ref_design/canny/fifo_w8_d6_A.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mul_VhK.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mul_WhU.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mul_Xh4.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mul_g8j.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mul_wdI.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mul_xdS.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mux_eOg.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mux_fYi.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mux_mb6.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mux_udo.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_mux_vdy.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_udivShg.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_udivThq.vhd"
#    "D:/cam/04_ref_design/canny/ip_accel_app_uremUhA.vhd"
#    "D:/cam/04_ref_design/canny/start_for_canny_aYie.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFAnglercU.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFCannyncg.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFDupliqcK.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFMagnisc4.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFPackNtde.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFSobelpcA.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xFSupprocq.vhd"
#    "D:/cam/04_ref_design/canny/start_for_xfMat2AZio.vhd"
#    "D:/cam/04_ref_design/canny/xFAngleKernel.vhd"
#    "D:/cam/04_ref_design/canny/xFAverageGaussianMas.vhd"
#    "D:/cam/04_ref_design/canny/xFAverageGaussianbkb.vhd"
#    "D:/cam/04_ref_design/canny/xFCannyKernel.vhd"
#    "D:/cam/04_ref_design/canny/xFCannyKernel_Block_s.vhd"
#    "D:/cam/04_ref_design/canny/xFCannyKernel_entry2.vhd"
#    "D:/cam/04_ref_design/canny/xFDuplicate_rows.vhd"
#    "D:/cam/04_ref_design/canny/xFMagnitudeKernel.vhd"
#    "D:/cam/04_ref_design/canny/xFPackNMS1096.vhd"
#    "D:/cam/04_ref_design/canny/xFSobel.vhd"
#    "D:/cam/04_ref_design/canny/xFSobel3x3.vhd"
#    "D:/cam/04_ref_design/canny/xFSuppression3x3.vhd"
#    "D:/cam/04_ref_design/canny/xFSuppression3x3_hbi.vhd"
#    "D:/cam/04_ref_design/canny/xFSuppression3x3_jbC.vhd"
#    "D:/cam/04_ref_design/canny/xfExtractPixels.vhd"
#    "D:/cam/04_ref_design/canny/xfExtractPixels_1.vhd"
#    "D:/cam/04_ref_design/canny/xfMat2AXIvideo.vhd"
#    "D:/cam/02_coaxlink/constr/CxlCxp12_loc_common.xdc"
#    "D:/cam/02_coaxlink/constr/CxlCxp12_xil_x8_gen3.xdc"
#    "D:/cam/02_coaxlink/constr/CxlCxp12_timing_common.xdc"
#    "D:/cam/02_coaxlink/constr/Bitstream_settings.xdc"
#    "D:/cam/04_ref_design/canny/CustomLogic.xdc"
#    "D:/cam/04_ref_design/canny/sim/CustomLogicSimPkt.vhdp"
#    "D:/cam/04_ref_design/canny/sim/SimulationCtrl_tb.vhd"
#    "D:/cam/04_ref_design/canny/sim/tb_top.vhd"
#    "D:/cam/04_ref_design/canny/sim/tb_top_behav.wcfg"
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "CustomLogic"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "vivado_prj-1.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../07_vivado_project_canny"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xcku035-fbva676-2-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcku035-fbva676-2-e" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "source_mgmt_mode" -value "DisplayOnly" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "1" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "1" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "1" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "1" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../02_coaxlink/hdl_enc/CustomLogicPkt.vp"] \
 [file normalize "${origin_dir}/../02_coaxlink/hdl_enc/DmaBackEndPkt.vp"] \
 [file normalize "${origin_dir}/../02_coaxlink/hdl_enc/CustomLogicPkt.vhdp"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/axi_dwidth_clk_converter_S128_M512/axi_dwidth_clk_converter_S128_M512.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/axi_dwidth_clk_converter_S256_M512/axi_dwidth_clk_converter_S256_M512.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/axi_interconnect_3xS512_M512/axi_interconnect_3xS512_M512.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/axi_lite_clock_converter/axi_lite_clock_converter.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/axis_data_fifo_256b/axis_data_fifo_256b.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/clk_wiz_cxp12/clk_wiz_cxp12.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/CounterDsp/CounterDsp.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/EventSignalingBram/EventSignalingBram.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/EventSignalingFifo_ku/EventSignalingFifo_ku.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/ExtIOConfigBram/ExtIOConfigBram.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/fifo_memento/fifo_memento.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/FrameSizeDwDsp/FrameSizeDwDsp.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/gth_cxp_low_cxp12/gth_cxp_low_cxp12.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/LinkStreamFifo_132bx2048/LinkStreamFifo_132bx2048.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/LUT12x8/LUT12x8.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/mem_if/mem_if.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/MultiplierDsp/MultiplierDsp.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/PacketFlowFifo_34bx512/PacketFlowFifo_34bx512.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/PEGBram/PEGBram.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/PEGFifo_ku/PEGFifo_ku.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/PIXO_FIFO_259x1024/PIXO_FIFO_259x1024.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/PoCXP_uBlaze.elf"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/PoCXP_uBlaze/PoCXP_uBlaze.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/reg2mem_rddwc/reg2mem_rddwc.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/reg2mem_rdfifo/reg2mem_rdfifo.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/reg2mem_wrdwc/reg2mem_wrdwc.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/reg2mem_wrfifo/reg2mem_wrfifo.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/sout_fifo_wr128_rd256/sout_fifo_wr128_rd256.xci"] \
 [file normalize "${origin_dir}/../02_coaxlink/ips/WrAxiAddrFifo/WrAxiAddrFifo.xci"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/frame_to_line.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/mem_traffic_gen.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/control_registers.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/pix_lut8b.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/pix_threshold_proc.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/pix_threshold.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/pix_threshold_wrp.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/CustomLogic.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/lut_bram_8x256/lut_bram_8x256.xci"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/sim/onboardmem/onboardmem.xci"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/AXIvideo2xfMat.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/Block_Mat_exit1516_p.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/Block_Mat_exit15_pro.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/Canny.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/PixelProcessNew_1_s.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/TopDown_20_6_1024_s.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/canny_accel.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/canny_accel_iBuffyd2.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/canny_accel_oBuff_V.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w11_d2_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w14_d5760_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w16_d2_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w16_d2_A_x.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w16_d3_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w16_d4_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w24_d2_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w2_d2_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w32_d2_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w32_d3_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w57_d1_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w64_d1_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w8_d1_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w8_d2_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w8_d2_A_x.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w8_d3_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/fifo_w8_d6_A.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mul_VhK.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mul_WhU.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mul_Xh4.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mul_g8j.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mul_wdI.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mul_xdS.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mux_eOg.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mux_fYi.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mux_mb6.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mux_udo.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_mux_vdy.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_udivShg.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_udivThq.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/ip_accel_app_uremUhA.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_canny_aYie.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFAnglercU.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFCannyncg.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFDupliqcK.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFMagnisc4.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFPackNtde.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFSobelpcA.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xFSupprocq.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/start_for_xfMat2AZio.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFAngleKernel.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFAverageGaussianMas.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFAverageGaussianbkb.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFCannyKernel.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFCannyKernel_Block_s.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFCannyKernel_entry2.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFDuplicate_rows.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFMagnitudeKernel.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFPackNMS1096.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFSobel.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFSobel3x3.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFSuppression3x3.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFSuppression3x3_hbi.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xFSuppression3x3_jbC.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xfExtractPixels.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xfExtractPixels_1.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/xfMat2AXIvideo.vhd"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../02_coaxlink/hdl_enc/CustomLogicPkt.vp"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/hdl_enc/DmaBackEndPkt.vp"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/hdl_enc/CustomLogicPkt.vhdp"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/axi_dwidth_clk_converter_S128_M512/axi_dwidth_clk_converter_S128_M512.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/axi_dwidth_clk_converter_S256_M512/axi_dwidth_clk_converter_S256_M512.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/axi_interconnect_3xS512_M512/axi_interconnect_3xS512_M512.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/axi_lite_clock_converter/axi_lite_clock_converter.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/axis_data_fifo_256b/axis_data_fifo_256b.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/clk_wiz_cxp12/clk_wiz_cxp12.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/CounterDsp/CounterDsp.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/EventSignalingBram/EventSignalingBram.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/EventSignalingFifo_ku/EventSignalingFifo_ku.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/ExtIOConfigBram/ExtIOConfigBram.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/fifo_memento/fifo_memento.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/FrameSizeDwDsp/FrameSizeDwDsp.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/gth_cxp_low_cxp12/gth_cxp_low_cxp12.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/LinkStreamFifo_132bx2048/LinkStreamFifo_132bx2048.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/LUT12x8/LUT12x8.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/mem_if/mem_if.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/MultiplierDsp/MultiplierDsp.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/PacketFlowFifo_34bx512/PacketFlowFifo_34bx512.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/PEGBram/PEGBram.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/PEGFifo_ku/PEGFifo_ku.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/PIXO_FIFO_259x1024/PIXO_FIFO_259x1024.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/PoCXP_uBlaze.elf"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "scoped_to_cells" -value "inst/microblaze_I" -objects $file_obj
set_property -name "scoped_to_ref" -value "PoCXP_uBlaze" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/PoCXP_uBlaze/PoCXP_uBlaze.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/reg2mem_rddwc/reg2mem_rddwc.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/reg2mem_rdfifo/reg2mem_rdfifo.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/reg2mem_wrdwc/reg2mem_wrdwc.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/reg2mem_wrfifo/reg2mem_wrfifo.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/sout_fifo_wr128_rd256/sout_fifo_wr128_rd256.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../02_coaxlink/ips/WrAxiAddrFifo/WrAxiAddrFifo.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/frame_to_line.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/mem_traffic_gen.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/control_registers.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/pix_lut8b.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/pix_threshold_proc.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/pix_threshold.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/pix_threshold_wrp.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/CustomLogic.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/lut_bram_8x256/lut_bram_8x256.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "synthesis implementation" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/sim/onboardmem/onboardmem.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "generate_synth_checkpoint" -value "0" -objects $file_obj
}
set_property -name "registered_with_manager" -value "1" -objects $file_obj
set_property -name "used_in" -value "simulation" -objects $file_obj
set_property -name "used_in_implementation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/AXIvideo2xfMat.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/Block_Mat_exit1516_p.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/Block_Mat_exit15_pro.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/Canny.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/PixelProcessNew_1_s.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/TopDown_20_6_1024_s.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/canny_accel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/canny_accel_iBuffyd2.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/canny_accel_oBuff_V.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w11_d2_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w14_d5760_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w16_d2_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w16_d2_A_x.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w16_d3_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w16_d4_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w24_d2_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w2_d2_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w32_d2_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w32_d3_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w57_d1_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w64_d1_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w8_d1_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w8_d2_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w8_d2_A_x.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w8_d3_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/fifo_w8_d6_A.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mul_VhK.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mul_WhU.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mul_Xh4.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mul_g8j.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mul_wdI.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mul_xdS.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mux_eOg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mux_fYi.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mux_mb6.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mux_udo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_mux_vdy.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_udivShg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_udivThq.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/ip_accel_app_uremUhA.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_canny_aYie.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFAnglercU.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFCannyncg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFDupliqcK.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFMagnisc4.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFPackNtde.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFSobelpcA.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xFSupprocq.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/start_for_xfMat2AZio.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFAngleKernel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFAverageGaussianMas.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFAverageGaussianbkb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFCannyKernel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFCannyKernel_Block_s.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFCannyKernel_entry2.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFDuplicate_rows.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFMagnitudeKernel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFPackNMS1096.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFSobel.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFSobel3x3.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFSuppression3x3.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFSuppression3x3_hbi.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xFSuppression3x3_jbC.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xfExtractPixels.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xfExtractPixels_1.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/xfMat2AXIvideo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "CustomLogicTop" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../02_coaxlink/constr/CxlCxp12_loc_common.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../02_coaxlink/constr/CxlCxp12_loc_common.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../02_coaxlink/constr/CxlCxp12_xil_x8_gen3.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../02_coaxlink/constr/CxlCxp12_xil_x8_gen3.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../02_coaxlink/constr/CxlCxp12_timing_common.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../02_coaxlink/constr/CxlCxp12_timing_common.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../02_coaxlink/constr/Bitstream_settings.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../02_coaxlink/constr/Bitstream_settings.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../04_ref_design/canny/CustomLogic.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../04_ref_design/canny/CustomLogic.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[file normalize "$origin_dir/../04_ref_design/canny/CustomLogic.xdc"]" -objects $obj
set_property -name "target_part" -value "xcku035-fbva676-2-e" -objects $obj
set_property -name "target_ucf" -value "[file normalize "$origin_dir/../04_ref_design/canny/CustomLogic.xdc"]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../04_ref_design/canny/sim/CustomLogicSimPkt.vhdp"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/sim/SimulationCtrl_tb.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/sim/tb_top.vhd"] \
 [file normalize "${origin_dir}/../04_ref_design/canny/sim/tb_top_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/../04_ref_design/canny/sim/CustomLogicSimPkt.vhdp"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/sim/SimulationCtrl_tb.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "$origin_dir/../04_ref_design/canny/sim/tb_top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "tb_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcku035-fbva676-2-e -flow {Vivado Synthesis 2018} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_1_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcku035-fbva676-2-e" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.fanout_limit" -value "400" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "AreaOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.retiming" -value "1" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.no_srlextract" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcku035-fbva676-2-e -flow {Vivado Implementation 2018} -strategy "Performance_ExtraTimingOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExtraTimingOpt" [get_runs impl_1]
  set_property flow "Vivado Implementation 2018" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_init_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_opt_report_drc_0" -objects $obj

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_io_0" -objects $obj

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_utilization_0" -objects $obj

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_place_report_control_sets_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_place_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_post_place_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_1_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_drc_0" -objects $obj

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_methodology_0" -objects $obj

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_power_0" -objects $obj

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_route_status_0" -objects $obj

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_route_report_bus_skew_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_1_post_route_phys_opt_report_bus_skew_0" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcku035-fbva676-2-e" -objects $obj
set_property -name "strategy" -value "Performance_ExtraTimingOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraTimingOpt" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:${_xil_proj_name_}"
set obj [get_dashboards default_dashboard]

# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# Set current dashboard to 'default_dashboard' 
current_dashboard default_dashboard 
